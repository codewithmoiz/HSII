import {
  isEmpty_default,
  isEqual_default,
  omit_default,
  toNumber_default,
  useUrlSearchParams
} from "./chunk-3FCJX2CO.js";
import {
  ConfigConsumer,
  ErrorBoundary,
  FieldLabel,
  FilterDropdown,
  InlineErrorFormItem,
  LabelIconTip,
  ProConfigProvider,
  ProFormContext,
  ProProvider,
  arEGIntl,
  caESIntl,
  compareVersions,
  compatibleBorder,
  conversionMomentValue,
  createIntl,
  dateArrayFormatter,
  dateFormatterMap,
  editableRowByKey,
  enUSIntl,
  esESIntl,
  es_default as es_default2,
  es_default2 as es_default4,
  frFRIntl,
  genCopyable,
  getFieldPropsOrFormItemProps,
  intlMap,
  isBrowser,
  isDeepEqualReact,
  isDropdownValueType,
  isNil,
  itITIntl,
  jaJPIntl,
  menuOverlayCompatible,
  merge,
  msMYIntl,
  nanoid,
  objectToMap,
  omitBoolean,
  omitUndefined,
  omitUndefinedAndEmptyArr,
  openVisibleCompatible,
  parseValueToDay,
  pickProFormItemProps,
  pickProProps,
  proFieldParsingText,
  proTheme,
  ptBRIntl,
  recordKeyToString,
  ruRUIntl,
  runFunction,
  setAlpha,
  stringify_default,
  thTHIntl,
  transformKeySubmitValue,
  useDebounceFn,
  useDebounceValue,
  useDeepCompareEffect,
  useDeepCompareEffectDebounce,
  useDeepCompareMemo_default,
  useEditableArray,
  useFetchData,
  useIntl,
  useLatest,
  usePrevious,
  useReactiveRef,
  useRefFunction,
  useStyle,
  useToken,
  viVNIntl,
  zhCNIntl,
  zhTWIntl
} from "./chunk-JD4C4XAF.js";
import {
  es_default as es_default3,
  merge_default,
  useSWR
} from "./chunk-7NZG2QRH.js";
import {
  FieldContext_default,
  Keyframes_default,
  _assertThisInitialized,
  _asyncToGenerator,
  _classCallCheck,
  _createClass,
  _createSuper,
  _inherits,
  _objectDestructuringEmpty,
  _regeneratorRuntime,
  _toConsumableArray,
  avatar_default,
  badge_default,
  button_default,
  cascader_default,
  checkbox_default,
  col_default,
  color_picker_default,
  config_provider_default,
  date_picker_default,
  divider_default,
  drawer_default,
  dropdown_default,
  es_default,
  form_default,
  get,
  image_default,
  input_default,
  input_number_default,
  modal_default,
  popover_default,
  progress_default,
  radio_default,
  rate_default,
  require_advancedFormat,
  require_dayjs_min,
  require_localeData,
  require_weekOfYear,
  require_weekday,
  row_default,
  segmented_default,
  select_default,
  set,
  slider_default,
  space_default,
  spin_default,
  steps_default,
  switch_default,
  table_default,
  tabs_default,
  time_picker_default,
  toArray,
  tooltip_default,
  tree_default,
  tree_select_default,
  typography_default,
  upload_default,
  useMergedState,
  version_default
} from "./chunk-QCNBY2GL.js";
import {
  require_jsx_runtime
} from "./chunk-FVZZTKNL.js";
import {
  ColumnHeightOutlined_default,
  CopyOutlined_default,
  DeleteOutlined_default,
  DownOutlined_default,
  EllipsisOutlined_default,
  EyeInvisibleOutlined_default,
  EyeOutlined_default,
  FilterOutlined_default,
  FullscreenExitOutlined_default,
  FullscreenOutlined_default,
  HolderOutlined_default,
  InboxOutlined_default,
  LoadingOutlined_default,
  PlusOutlined_default,
  ReloadOutlined_default,
  RightOutlined_default,
  SearchOutlined_default,
  SettingOutlined_default,
  UploadOutlined_default,
  VerticalAlignBottomOutlined_default,
  VerticalAlignMiddleOutlined_default,
  VerticalAlignTopOutlined_default,
  _defineProperty,
  _objectSpread2,
  _objectWithoutProperties,
  _slicedToArray,
  _typeof,
  noteOnce,
  require_classnames
} from "./chunk-3RCLIGJL.js";
import {
  require_react_dom
} from "./chunk-SB5BK2J2.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-N6MYFXC3.js";

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports, module) {
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// node_modules/lodash/isString.js
var require_isString = __commonJS({
  "node_modules/lodash/isString.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isArray = require_isArray();
    var isObjectLike = require_isObjectLike();
    var stringTag = "[object String]";
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }
    module.exports = isString;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "node_modules/lodash/_createBaseFor.js"(exports, module) {
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key2 = props[fromRight ? length : ++index];
          if (iteratee(iterable[key2], key2, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module.exports = createBaseFor;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "node_modules/lodash/_baseFor.js"(exports, module) {
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports, module) {
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports, module) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(/* @__PURE__ */ function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports, module) {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports, module) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports, module) {
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports, module) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key2 in value) {
        if ((inherited || hasOwnProperty.call(value, key2)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key2 == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key2 == "offset" || key2 == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || // Skip index properties.
        isIndex(key2, length)))) {
          result.push(key2);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports, module) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports, module) {
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports, module) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports, module) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key2 in Object(object)) {
        if (hasOwnProperty.call(object, key2) && key2 != "constructor") {
          result.push(key2);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports, module) {
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports, module) {
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    module.exports = keys;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module) {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports, module) {
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// node_modules/lodash/_castFunction.js
var require_castFunction = __commonJS({
  "node_modules/lodash/_castFunction.js"(exports, module) {
    var identity = require_identity();
    function castFunction(value) {
      return typeof value == "function" ? value : identity;
    }
    module.exports = castFunction;
  }
});

// node_modules/lodash/forOwn.js
var require_forOwn = __commonJS({
  "node_modules/lodash/forOwn.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var castFunction = require_castFunction();
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, castFunction(iteratee));
    }
    module.exports = forOwn;
  }
});

// node_modules/lodash/_getPrototype.js
var require_getPrototype = __commonJS({
  "node_modules/lodash/_getPrototype.js"(exports, module) {
    var overArg = require_overArg();
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    module.exports = getPrototype;
  }
});

// node_modules/lodash/isPlainObject.js
var require_isPlainObject = __commonJS({
  "node_modules/lodash/isPlainObject.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var getPrototype = require_getPrototype();
    var isObjectLike = require_isObjectLike();
    var objectTag = "[object Object]";
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key2) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key2)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key2) {
      var data = this.__data__, index = assocIndexOf(data, key2);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key2) {
      var data = this.__data__, index = assocIndexOf(data, key2);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key2) {
      return assocIndexOf(this.__data__, key2) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key2, value) {
      var data = this.__data__, index = assocIndexOf(data, key2);
      if (index < 0) {
        ++this.size;
        data.push([key2, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key2) {
      var data = this.__data__, result = data["delete"](key2);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key2) {
      return this.__data__.get(key2);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key2) {
      return this.__data__.has(key2);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object, key2) {
      return object == null ? void 0 : object[key2];
    }
    module.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key2) {
      var value = getValue(object, key2);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key2) {
      var result = this.has(key2) && delete this.__data__[key2];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key2) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key2];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key2) ? data[key2] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key2) {
      var data = this.__data__;
      return nativeCreate ? data[key2] !== void 0 : hasOwnProperty.call(data, key2);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key2, value) {
      var data = this.__data__;
      this.size += this.has(key2) ? 0 : 1;
      data[key2] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key2) {
      var data = map.__data__;
      return isKeyable(key2) ? data[typeof key2 == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key2) {
      var result = getMapData(this, key2)["delete"](key2);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key2) {
      return getMapData(this, key2).get(key2);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key2) {
      return getMapData(this, key2).has(key2);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key2, value) {
      var data = getMapData(this, key2), size = data.size;
      data.set(key2, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key2, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key2, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key2, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache, key2) {
      return cache.has(key2);
    }
    module.exports = cacheHas;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array = root.Uint8Array;
    module.exports = Uint8Array;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key2) {
        result[++index] = [key2, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set2) {
      var index = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var Uint8Array = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key2 = objProps[index];
        if (!(isPartial ? key2 in other : hasOwnProperty.call(other, key2))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key2 = objProps[index];
        var objValue = object[key2], othValue = other[key2];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key2 == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module.exports = DataView;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set2 = getNative(root, "Set");
    module.exports = Set2;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap = getNative(root, "WeakMap");
    module.exports = WeakMap;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module) {
    var DataView = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key2 = data[0], objValue = object[key2], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key2 in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key2, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key2 = result[length], value = object[key2];
        result[length] = [key2, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key2, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key2] === srcValue && (srcValue !== void 0 || key2 in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key2)) {
          return cache.get(key2);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key2, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key2) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key2;
      });
      var cache = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString2(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString2;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString2 = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString2(value));
    }
    module.exports = castPath;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get4(object, path, defaultValue2) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue2 : result;
    }
    module.exports = get4;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object, key2) {
      return object != null && key2 in Object(object);
    }
    module.exports = baseHasIn;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key2 = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key2))) {
          break;
        }
        object = object[key2];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key2, length) && (isArray(object) || isArguments(object));
    }
    module.exports = hasPath;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get4 = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get4(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key2) {
      return function(object) {
        return object == null ? void 0 : object[key2];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  }
});

// node_modules/lodash/_baseMap.js
var require_baseMap = __commonJS({
  "node_modules/lodash/_baseMap.js"(exports, module) {
    var baseEach = require_baseEach();
    var isArrayLike = require_isArrayLike();
    function baseMap(collection, iteratee) {
      var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key2, collection2) {
        result[++index] = iteratee(value, key2, collection2);
      });
      return result;
    }
    module.exports = baseMap;
  }
});

// node_modules/lodash/map.js
var require_map = __commonJS({
  "node_modules/lodash/map.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var isArray = require_isArray();
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, baseIteratee(iteratee, 3));
    }
    module.exports = map;
  }
});

// node_modules/reactcss/lib/flattenNames.js
var require_flattenNames = __commonJS({
  "node_modules/reactcss/lib/flattenNames.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.flattenNames = void 0;
    var _isString2 = require_isString();
    var _isString3 = _interopRequireDefault(_isString2);
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _isPlainObject2 = require_isPlainObject();
    var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);
    var _map2 = require_map();
    var _map3 = _interopRequireDefault(_map2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var flattenNames = exports.flattenNames = function flattenNames2() {
      var things = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var names2 = [];
      (0, _map3.default)(things, function(thing) {
        if (Array.isArray(thing)) {
          flattenNames2(thing).map(function(name) {
            return names2.push(name);
          });
        } else if ((0, _isPlainObject3.default)(thing)) {
          (0, _forOwn3.default)(thing, function(value, key2) {
            value === true && names2.push(key2);
            names2.push(key2 + "-" + value);
          });
        } else if ((0, _isString3.default)(thing)) {
          names2.push(thing);
        }
      });
      return names2;
    };
    exports.default = flattenNames;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports, module) {
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e) {
      }
    }();
    module.exports = defineProperty;
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "node_modules/lodash/_baseAssignValue.js"(exports, module) {
    var defineProperty = require_defineProperty();
    function baseAssignValue(object, key2, value) {
      if (key2 == "__proto__" && defineProperty) {
        defineProperty(object, key2, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object[key2] = value;
      }
    }
    module.exports = baseAssignValue;
  }
});

// node_modules/lodash/_assignValue.js
var require_assignValue = __commonJS({
  "node_modules/lodash/_assignValue.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function assignValue(object, key2, value) {
      var objValue = object[key2];
      if (!(hasOwnProperty.call(object, key2) && eq(objValue, value)) || value === void 0 && !(key2 in object)) {
        baseAssignValue(object, key2, value);
      }
    }
    module.exports = assignValue;
  }
});

// node_modules/lodash/_copyObject.js
var require_copyObject = __commonJS({
  "node_modules/lodash/_copyObject.js"(exports, module) {
    var assignValue = require_assignValue();
    var baseAssignValue = require_baseAssignValue();
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});
      var index = -1, length = props.length;
      while (++index < length) {
        var key2 = props[index];
        var newValue = customizer ? customizer(object[key2], source[key2], key2, object, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key2];
        }
        if (isNew) {
          baseAssignValue(object, key2, newValue);
        } else {
          assignValue(object, key2, newValue);
        }
      }
      return object;
    }
    module.exports = copyObject;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_nativeKeysIn.js
var require_nativeKeysIn = __commonJS({
  "node_modules/lodash/_nativeKeysIn.js"(exports, module) {
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key2 in Object(object)) {
          result.push(key2);
        }
      }
      return result;
    }
    module.exports = nativeKeysIn;
  }
});

// node_modules/lodash/_baseKeysIn.js
var require_baseKeysIn = __commonJS({
  "node_modules/lodash/_baseKeysIn.js"(exports, module) {
    var isObject = require_isObject();
    var isPrototype = require_isPrototype();
    var nativeKeysIn = require_nativeKeysIn();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object), result = [];
      for (var key2 in object) {
        if (!(key2 == "constructor" && (isProto || !hasOwnProperty.call(object, key2)))) {
          result.push(key2);
        }
      }
      return result;
    }
    module.exports = baseKeysIn;
  }
});

// node_modules/lodash/keysIn.js
var require_keysIn = __commonJS({
  "node_modules/lodash/keysIn.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeysIn = require_baseKeysIn();
    var isArrayLike = require_isArrayLike();
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }
    module.exports = keysIn;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_cloneBuffer.js
var require_cloneBuffer = __commonJS({
  "node_modules/lodash/_cloneBuffer.js"(exports, module) {
    var root = require_root();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer;
  }
});

// node_modules/lodash/_copyArray.js
var require_copyArray = __commonJS({
  "node_modules/lodash/_copyArray.js"(exports, module) {
    function copyArray(source, array) {
      var index = -1, length = source.length;
      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }
    module.exports = copyArray;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneArrayBuffer.js
var require_cloneArrayBuffer = __commonJS({
  "node_modules/lodash/_cloneArrayBuffer.js"(exports, module) {
    var Uint8Array = require_Uint8Array();
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }
    module.exports = cloneArrayBuffer;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_cloneTypedArray.js
var require_cloneTypedArray = __commonJS({
  "node_modules/lodash/_cloneTypedArray.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module.exports = cloneTypedArray;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseCreate.js
var require_baseCreate = __commonJS({
  "node_modules/lodash/_baseCreate.js"(exports, module) {
    var isObject = require_isObject();
    var objectCreate = Object.create;
    var baseCreate = /* @__PURE__ */ function() {
      function object() {
      }
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = void 0;
        return result;
      };
    }();
    module.exports = baseCreate;
  }
});

// node_modules/lodash/_initCloneObject.js
var require_initCloneObject = __commonJS({
  "node_modules/lodash/_initCloneObject.js"(exports, module) {
    var baseCreate = require_baseCreate();
    var getPrototype = require_getPrototype();
    var isPrototype = require_isPrototype();
    function initCloneObject(object) {
      return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }
    module.exports = initCloneObject;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key2, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key2, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key3) {
          result.set(key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key3) {
        if (props) {
          key3 = subValue;
          subValue = value[key3];
        }
        assignValue(result, key3, baseClone(subValue, bitmask, customizer, key3, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/cloneDeep.js
var require_cloneDeep = __commonJS({
  "node_modules/lodash/cloneDeep.js"(exports, module) {
    var baseClone = require_baseClone();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_SYMBOLS_FLAG = 4;
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }
    module.exports = cloneDeep;
  }
});

// node_modules/reactcss/lib/mergeClasses.js
var require_mergeClasses = __commonJS({
  "node_modules/reactcss/lib/mergeClasses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.mergeClasses = void 0;
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _cloneDeep2 = require_cloneDeep();
    var _cloneDeep3 = _interopRequireDefault(_cloneDeep2);
    var _extends4 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var mergeClasses = exports.mergeClasses = function mergeClasses2(classes) {
      var activeNames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      var styles = classes.default && (0, _cloneDeep3.default)(classes.default) || {};
      activeNames.map(function(name) {
        var toMerge = classes[name];
        if (toMerge) {
          (0, _forOwn3.default)(toMerge, function(value, key2) {
            if (!styles[key2]) {
              styles[key2] = {};
            }
            styles[key2] = _extends4({}, styles[key2], toMerge[key2]);
          });
        }
        return name;
      });
      return styles;
    };
    exports.default = mergeClasses;
  }
});

// node_modules/reactcss/lib/autoprefix.js
var require_autoprefix = __commonJS({
  "node_modules/reactcss/lib/autoprefix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.autoprefix = void 0;
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _extends4 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var transforms = {
      borderRadius: function borderRadius(value) {
        return {
          msBorderRadius: value,
          MozBorderRadius: value,
          OBorderRadius: value,
          WebkitBorderRadius: value,
          borderRadius: value
        };
      },
      boxShadow: function boxShadow(value) {
        return {
          msBoxShadow: value,
          MozBoxShadow: value,
          OBoxShadow: value,
          WebkitBoxShadow: value,
          boxShadow: value
        };
      },
      userSelect: function userSelect(value) {
        return {
          WebkitTouchCallout: value,
          KhtmlUserSelect: value,
          MozUserSelect: value,
          msUserSelect: value,
          WebkitUserSelect: value,
          userSelect: value
        };
      },
      flex: function flex(value) {
        return {
          WebkitBoxFlex: value,
          MozBoxFlex: value,
          WebkitFlex: value,
          msFlex: value,
          flex: value
        };
      },
      flexBasis: function flexBasis(value) {
        return {
          WebkitFlexBasis: value,
          flexBasis: value
        };
      },
      justifyContent: function justifyContent(value) {
        return {
          WebkitJustifyContent: value,
          justifyContent: value
        };
      },
      transition: function transition(value) {
        return {
          msTransition: value,
          MozTransition: value,
          OTransition: value,
          WebkitTransition: value,
          transition: value
        };
      },
      transform: function transform(value) {
        return {
          msTransform: value,
          MozTransform: value,
          OTransform: value,
          WebkitTransform: value,
          transform: value
        };
      },
      absolute: function absolute(value) {
        var direction = value && value.split(" ");
        return {
          position: "absolute",
          top: direction && direction[0],
          right: direction && direction[1],
          bottom: direction && direction[2],
          left: direction && direction[3]
        };
      },
      extend: function extend(name, otherElementStyles) {
        var otherStyle = otherElementStyles[name];
        if (otherStyle) {
          return otherStyle;
        }
        return {
          "extend": name
        };
      }
    };
    var autoprefix = exports.autoprefix = function autoprefix2(elements) {
      var prefixed = {};
      (0, _forOwn3.default)(elements, function(styles, element) {
        var expanded = {};
        (0, _forOwn3.default)(styles, function(value, key2) {
          var transform = transforms[key2];
          if (transform) {
            expanded = _extends4({}, expanded, transform(value));
          } else {
            expanded[key2] = value;
          }
        });
        prefixed[element] = expanded;
      });
      return prefixed;
    };
    exports.default = autoprefix;
  }
});

// node_modules/reactcss/lib/components/hover.js
var require_hover = __commonJS({
  "node_modules/reactcss/lib/components/hover.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.hover = void 0;
    var _extends4 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck8(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn7(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits8(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var hover = exports.hover = function hover2(Component6) {
      var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
      return function(_React$Component) {
        _inherits8(Hover, _React$Component);
        function Hover() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck8(this, Hover);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn7(this, (_ref = Hover.__proto__ || Object.getPrototypeOf(Hover)).call.apply(_ref, [this].concat(args))), _this), _this.state = { hover: false }, _this.handleMouseOver = function() {
            return _this.setState({ hover: true });
          }, _this.handleMouseOut = function() {
            return _this.setState({ hover: false });
          }, _this.render = function() {
            return _react2.default.createElement(
              Span,
              { onMouseOver: _this.handleMouseOver, onMouseOut: _this.handleMouseOut },
              _react2.default.createElement(Component6, _extends4({}, _this.props, _this.state))
            );
          }, _temp), _possibleConstructorReturn7(_this, _ret);
        }
        return Hover;
      }(_react2.default.Component);
    };
    exports.default = hover;
  }
});

// node_modules/reactcss/lib/components/active.js
var require_active = __commonJS({
  "node_modules/reactcss/lib/components/active.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.active = void 0;
    var _extends4 = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key2 in source) {
          if (Object.prototype.hasOwnProperty.call(source, key2)) {
            target[key2] = source[key2];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck8(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn7(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits8(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var active = exports.active = function active2(Component6) {
      var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
      return function(_React$Component) {
        _inherits8(Active, _React$Component);
        function Active() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck8(this, Active);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn7(this, (_ref = Active.__proto__ || Object.getPrototypeOf(Active)).call.apply(_ref, [this].concat(args))), _this), _this.state = { active: false }, _this.handleMouseDown = function() {
            return _this.setState({ active: true });
          }, _this.handleMouseUp = function() {
            return _this.setState({ active: false });
          }, _this.render = function() {
            return _react2.default.createElement(
              Span,
              { onMouseDown: _this.handleMouseDown, onMouseUp: _this.handleMouseUp },
              _react2.default.createElement(Component6, _extends4({}, _this.props, _this.state))
            );
          }, _temp), _possibleConstructorReturn7(_this, _ret);
        }
        return Active;
      }(_react2.default.Component);
    };
    exports.default = active;
  }
});

// node_modules/reactcss/lib/loop.js
var require_loop = __commonJS({
  "node_modules/reactcss/lib/loop.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var loopable = function loopable2(i, length) {
      var props = {};
      var setProp = function setProp2(name) {
        var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        props[name] = value;
      };
      i === 0 && setProp("first-child");
      i === length - 1 && setProp("last-child");
      (i === 0 || i % 2 === 0) && setProp("even");
      Math.abs(i % 2) === 1 && setProp("odd");
      setProp("nth-child", i);
      return props;
    };
    exports.default = loopable;
  }
});

// node_modules/reactcss/lib/index.js
var require_lib = __commonJS({
  "node_modules/reactcss/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ReactCSS = exports.loop = exports.handleActive = exports.handleHover = exports.hover = void 0;
    var _flattenNames = require_flattenNames();
    var _flattenNames2 = _interopRequireDefault(_flattenNames);
    var _mergeClasses = require_mergeClasses();
    var _mergeClasses2 = _interopRequireDefault(_mergeClasses);
    var _autoprefix = require_autoprefix();
    var _autoprefix2 = _interopRequireDefault(_autoprefix);
    var _hover2 = require_hover();
    var _hover3 = _interopRequireDefault(_hover2);
    var _active = require_active();
    var _active2 = _interopRequireDefault(_active);
    var _loop2 = require_loop();
    var _loop3 = _interopRequireDefault(_loop2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.hover = _hover3.default;
    exports.handleHover = _hover3.default;
    exports.handleActive = _active2.default;
    exports.loop = _loop3.default;
    var ReactCSS = exports.ReactCSS = function ReactCSS2(classes) {
      for (var _len = arguments.length, activations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        activations[_key - 1] = arguments[_key];
      }
      var activeNames = (0, _flattenNames2.default)(activations);
      var merged = (0, _mergeClasses2.default)(classes, activeNames);
      return (0, _autoprefix2.default)(merged);
    };
    exports.default = ReactCSS;
  }
});

// node_modules/lodash/_assignMergeValue.js
var require_assignMergeValue = __commonJS({
  "node_modules/lodash/_assignMergeValue.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    function assignMergeValue(object, key2, value) {
      if (value !== void 0 && !eq(object[key2], value) || value === void 0 && !(key2 in object)) {
        baseAssignValue(object, key2, value);
      }
    }
    module.exports = assignMergeValue;
  }
});

// node_modules/lodash/isArrayLikeObject.js
var require_isArrayLikeObject = __commonJS({
  "node_modules/lodash/isArrayLikeObject.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    var isObjectLike = require_isObjectLike();
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    module.exports = isArrayLikeObject;
  }
});

// node_modules/lodash/_safeGet.js
var require_safeGet = __commonJS({
  "node_modules/lodash/_safeGet.js"(exports, module) {
    function safeGet(object, key2) {
      if (key2 === "constructor" && typeof object[key2] === "function") {
        return;
      }
      if (key2 == "__proto__") {
        return;
      }
      return object[key2];
    }
    module.exports = safeGet;
  }
});

// node_modules/lodash/toPlainObject.js
var require_toPlainObject = __commonJS({
  "node_modules/lodash/toPlainObject.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }
    module.exports = toPlainObject;
  }
});

// node_modules/lodash/_baseMergeDeep.js
var require_baseMergeDeep = __commonJS({
  "node_modules/lodash/_baseMergeDeep.js"(exports, module) {
    var assignMergeValue = require_assignMergeValue();
    var cloneBuffer = require_cloneBuffer();
    var cloneTypedArray = require_cloneTypedArray();
    var copyArray = require_copyArray();
    var initCloneObject = require_initCloneObject();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isArrayLikeObject = require_isArrayLikeObject();
    var isBuffer = require_isBuffer();
    var isFunction = require_isFunction();
    var isObject = require_isObject();
    var isPlainObject = require_isPlainObject();
    var isTypedArray = require_isTypedArray();
    var safeGet = require_safeGet();
    var toPlainObject = require_toPlainObject();
    function baseMergeDeep(object, source, key2, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key2), srcValue = safeGet(source, key2), stacked = stack.get(srcValue);
      if (stacked) {
        assignMergeValue(object, key2, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object, source, stack) : void 0;
      var isCommon = newValue === void 0;
      if (isCommon) {
        var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack["delete"](srcValue);
      }
      assignMergeValue(object, key2, newValue);
    }
    module.exports = baseMergeDeep;
  }
});

// node_modules/lodash/_baseMerge.js
var require_baseMerge = __commonJS({
  "node_modules/lodash/_baseMerge.js"(exports, module) {
    var Stack = require_Stack();
    var assignMergeValue = require_assignMergeValue();
    var baseFor = require_baseFor();
    var baseMergeDeep = require_baseMergeDeep();
    var isObject = require_isObject();
    var keysIn = require_keysIn();
    var safeGet = require_safeGet();
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key2) {
        stack || (stack = new Stack());
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key2, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(safeGet(object, key2), srcValue, key2 + "", object, source, stack) : void 0;
          if (newValue === void 0) {
            newValue = srcValue;
          }
          assignMergeValue(object, key2, newValue);
        }
      }, keysIn);
    }
    module.exports = baseMerge;
  }
});

// node_modules/lodash/_apply.js
var require_apply = __commonJS({
  "node_modules/lodash/_apply.js"(exports, module) {
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    module.exports = apply;
  }
});

// node_modules/lodash/_overRest.js
var require_overRest = __commonJS({
  "node_modules/lodash/_overRest.js"(exports, module) {
    var apply = require_apply();
    var nativeMax = Math.max;
    function overRest(func, start, transform) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }
    module.exports = overRest;
  }
});

// node_modules/lodash/constant.js
var require_constant = __commonJS({
  "node_modules/lodash/constant.js"(exports, module) {
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  }
});

// node_modules/lodash/_baseSetToString.js
var require_baseSetToString = __commonJS({
  "node_modules/lodash/_baseSetToString.js"(exports, module) {
    var constant = require_constant();
    var defineProperty = require_defineProperty();
    var identity = require_identity();
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string),
        "writable": true
      });
    };
    module.exports = baseSetToString;
  }
});

// node_modules/lodash/_shortOut.js
var require_shortOut = __commonJS({
  "node_modules/lodash/_shortOut.js"(exports, module) {
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func) {
      var count = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  }
});

// node_modules/lodash/_setToString.js
var require_setToString = __commonJS({
  "node_modules/lodash/_setToString.js"(exports, module) {
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  }
});

// node_modules/lodash/_baseRest.js
var require_baseRest = __commonJS({
  "node_modules/lodash/_baseRest.js"(exports, module) {
    var identity = require_identity();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + "");
    }
    module.exports = baseRest;
  }
});

// node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = __commonJS({
  "node_modules/lodash/_isIterateeCall.js"(exports, module) {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// node_modules/lodash/_createAssigner.js
var require_createAssigner = __commonJS({
  "node_modules/lodash/_createAssigner.js"(exports, module) {
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
        customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? void 0 : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }
    module.exports = createAssigner;
  }
});

// node_modules/lodash/merge.js
var require_merge = __commonJS({
  "node_modules/lodash/merge.js"(exports, module) {
    var baseMerge = require_baseMerge();
    var createAssigner = require_createAssigner();
    var merge3 = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });
    module.exports = merge3;
  }
});

// node_modules/lodash/now.js
var require_now = __commonJS({
  "node_modules/lodash/now.js"(exports, module) {
    var root = require_root();
    var now = function() {
      return root.Date.now();
    };
    module.exports = now;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "node_modules/lodash/debounce.js"(exports, module) {
    var isObject = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce2(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    module.exports = debounce2;
  }
});

// node_modules/lodash/throttle.js
var require_throttle = __commonJS({
  "node_modules/lodash/throttle.js"(exports, module) {
    var debounce2 = require_debounce();
    var isObject = require_isObject();
    var FUNC_ERROR_TEXT = "Expected a function";
    function throttle2(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce2(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    module.exports = throttle2;
  }
});

// node_modules/lodash/forEach.js
var require_forEach = __commonJS({
  "node_modules/lodash/forEach.js"(exports, module) {
    var arrayEach = require_arrayEach();
    var baseEach = require_baseEach();
    var castFunction = require_castFunction();
    var isArray = require_isArray();
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, castFunction(iteratee));
    }
    module.exports = forEach;
  }
});

// node_modules/lodash/each.js
var require_each = __commonJS({
  "node_modules/lodash/each.js"(exports, module) {
    module.exports = require_forEach();
  }
});

// node_modules/dayjs/plugin/relativeTime.js
var require_relativeTime = __commonJS({
  "node_modules/dayjs/plugin/relativeTime.js"(exports, module) {
    !function(r, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (r = "undefined" != typeof globalThis ? globalThis : r || self).dayjs_plugin_relativeTime = e();
    }(exports, function() {
      "use strict";
      return function(r, e, t) {
        r = r || {};
        var n = e.prototype, o = { future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
        function i(r2, e2, t2, o2) {
          return n.fromToBase(r2, e2, t2, o2);
        }
        t.en.relativeTime = o, n.fromToBase = function(e2, n2, i2, d2, u) {
          for (var f, a, s, l = i2.$locale().relativeTime || o, h = r.thresholds || [{ l: "s", r: 44, d: "second" }, { l: "m", r: 89 }, { l: "mm", r: 44, d: "minute" }, { l: "h", r: 89 }, { l: "hh", r: 21, d: "hour" }, { l: "d", r: 35 }, { l: "dd", r: 25, d: "day" }, { l: "M", r: 45 }, { l: "MM", r: 10, d: "month" }, { l: "y", r: 17 }, { l: "yy", d: "year" }], m = h.length, c = 0; c < m; c += 1) {
            var y = h[c];
            y.d && (f = d2 ? t(e2).diff(i2, y.d, true) : i2.diff(e2, y.d, true));
            var p = (r.rounding || Math.round)(Math.abs(f));
            if (s = f > 0, p <= y.r || !y.r) {
              p <= 1 && c > 0 && (y = h[c - 1]);
              var v = l[y.l];
              u && (p = u("" + p)), a = "string" == typeof v ? v.replace("%d", p) : v(p, n2, y.l, s);
              break;
            }
          }
          if (n2) return a;
          var M = s ? l.future : l.past;
          return "function" == typeof M ? M(a) : M.replace("%s", a);
        }, n.to = function(r2, e2) {
          return i(r2, e2, this, true);
        }, n.from = function(r2, e2) {
          return i(r2, e2, this);
        };
        var d = function(r2) {
          return r2.$u ? t.utc() : t();
        };
        n.toNow = function(r2) {
          return this.to(d(this), r2);
        }, n.fromNow = function(r2) {
          return this.from(d(this), r2);
        };
      };
    });
  }
});

// node_modules/dayjs/plugin/isoWeek.js
var require_isoWeek = __commonJS({
  "node_modules/dayjs/plugin/isoWeek.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_isoWeek = t();
    }(exports, function() {
      "use strict";
      var e = "day";
      return function(t, i, s) {
        var a = function(t2) {
          return t2.add(4 - t2.isoWeekday(), e);
        }, d = i.prototype;
        d.isoWeekYear = function() {
          return a(this).year();
        }, d.isoWeek = function(t2) {
          if (!this.$utils().u(t2)) return this.add(7 * (t2 - this.isoWeek()), e);
          var i2, d2, n2, o, r = a(this), u = (i2 = this.isoWeekYear(), d2 = this.$u, n2 = (d2 ? s.utc : s)().year(i2).startOf("year"), o = 4 - n2.isoWeekday(), n2.isoWeekday() > 4 && (o += 7), n2.add(o, e));
          return r.diff(u, "week") + 1;
        }, d.isoWeekday = function(e2) {
          return this.$utils().u(e2) ? this.day() || 7 : this.day(this.day() % 7 ? e2 : e2 - 7);
        };
        var n = d.startOf;
        d.startOf = function(e2, t2) {
          var i2 = this.$utils(), s2 = !!i2.u(t2) || t2;
          return "isoweek" === i2.p(e2) ? s2 ? this.date(this.date() - (this.isoWeekday() - 1)).startOf("day") : this.date(this.date() - 1 - (this.isoWeekday() - 1) + 7).endOf("day") : n.bind(this)(e2, t2);
        };
      };
    });
  }
});

// node_modules/dayjs/plugin/localizedFormat.js
var require_localizedFormat = __commonJS({
  "node_modules/dayjs/plugin/localizedFormat.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).dayjs_plugin_localizedFormat = t();
    }(exports, function() {
      "use strict";
      var e = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" };
      return function(t, o, n) {
        var r = o.prototype, i = r.format;
        n.en.formats = e, r.format = function(t2) {
          void 0 === t2 && (t2 = "YYYY-MM-DDTHH:mm:ssZ");
          var o2 = this.$locale().formats, n2 = function(t3, o3) {
            return t3.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(t4, n3, r2) {
              var i2 = r2 && r2.toUpperCase();
              return n3 || o3[r2] || e[r2] || o3[i2].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(e2, t5, o4) {
                return t5 || o4.slice(1);
              });
            });
          }(t2, void 0 === o2 ? {} : o2);
          return i.call(this, n2);
        };
      };
    });
  }
});

// node_modules/@ant-design/pro-field/es/index.js
var import_react45 = __toESM(require_react());

// node_modules/@ant-design/pro-field/es/components/Cascader/index.js
var import_classnames3 = __toESM(require_classnames());
var import_react4 = __toESM(require_react());

// node_modules/@ant-design/pro-field/es/components/Select/index.js
var import_react3 = __toESM(require_react());

// node_modules/@ant-design/pro-field/es/components/Select/LightSelect/index.js
var import_classnames = __toESM(require_classnames());
var import_react = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var _excluded = ["label", "prefixCls", "onChange", "value", "mode", "children", "defaultValue", "size", "showSearch", "disabled", "style", "className", "bordered", "options", "onSearch", "allowClear", "labelInValue", "fieldNames", "lightLabel", "labelTrigger", "optionFilterProp", "optionLabelProp", "valueMaxLength", "fetchDataOnSearch", "fetchData"];
var getValueOrLabel = function getValueOrLabel2(valueMap, v) {
  if (_typeof(v) !== "object") {
    return valueMap[v] || v;
  }
  return valueMap[v === null || v === void 0 ? void 0 : v.value] || v.label;
};
var LightSelect = function LightSelect2(props, ref) {
  var label = props.label, customizePrefixCls = props.prefixCls, _onChange = props.onChange, value = props.value, mode = props.mode, children = props.children, defaultValue2 = props.defaultValue, size = props.size, showSearch = props.showSearch, disabled = props.disabled, style = props.style, className = props.className, bordered = props.bordered, options = props.options, onSearch = props.onSearch, allowClear = props.allowClear, labelInValue = props.labelInValue, fieldNames = props.fieldNames, lightLabel = props.lightLabel, labelTrigger = props.labelTrigger, optionFilterProp = props.optionFilterProp, _props$optionLabelPro = props.optionLabelProp, optionLabelProp = _props$optionLabelPro === void 0 ? "" : _props$optionLabelPro, _props$valueMaxLength = props.valueMaxLength, valueMaxLength = _props$valueMaxLength === void 0 ? 41 : _props$valueMaxLength, _props$fetchDataOnSea = props.fetchDataOnSearch, fetchDataOnSearch = _props$fetchDataOnSea === void 0 ? false : _props$fetchDataOnSea, fetchData = props.fetchData, restProps = _objectWithoutProperties(props, _excluded);
  var _props$placeholder = props.placeholder, placeholder = _props$placeholder === void 0 ? label : _props$placeholder;
  var _ref = fieldNames || {}, _ref$label = _ref.label, labelPropsName = _ref$label === void 0 ? "label" : _ref$label, _ref$value = _ref.value, valuePropsName = _ref$value === void 0 ? "value" : _ref$value;
  var _useContext = (0, import_react.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-field-select-light-select");
  var _useState = (0, import_react.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  var _useState3 = (0, import_react.useState)(""), _useState4 = _slicedToArray(_useState3, 2), keyword = _useState4[0], setKeyword = _useState4[1];
  var _useStyle = useStyle("LightSelect", function(token) {
    return _defineProperty({}, ".".concat(prefixCls), _defineProperty(_defineProperty({}, "".concat(token.antCls, "-select"), {
      position: "absolute",
      width: "153px",
      height: "28px",
      visibility: "hidden",
      "&-selector": {
        height: 28
      }
    }), "&.".concat(prefixCls, "-searchable"), _defineProperty({}, "".concat(token.antCls, "-select"), {
      width: "200px",
      "&-selector": {
        height: 28
      }
    })));
  }), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var valueMap = (0, import_react.useMemo)(function() {
    var values = {};
    options === null || options === void 0 || options.forEach(function(item) {
      var optionLabel = item[optionLabelProp] || item[labelPropsName];
      var optionValue = item[valuePropsName];
      values[optionValue] = optionLabel || optionValue;
    });
    return values;
  }, [labelPropsName, options, valuePropsName, optionLabelProp]);
  var mergeOpen = (0, import_react.useMemo)(function() {
    if (Reflect.has(restProps, "open")) {
      return restProps === null || restProps === void 0 ? void 0 : restProps.open;
    }
    return open;
  }, [open, restProps]);
  var filterValue = Array.isArray(value) ? value.map(function(v) {
    return getValueOrLabel(valueMap, v);
  }) : getValueOrLabel(valueMap, value);
  return wrapSSR((0, import_jsx_runtime2.jsxs)("div", {
    className: (0, import_classnames.default)(prefixCls, hashId, _defineProperty({}, "".concat(prefixCls, "-searchable"), showSearch), "".concat(prefixCls, "-container-").concat(restProps.placement || "bottomLeft"), className),
    style,
    onClick: function onClick(e) {
      var _lightLabel$current;
      if (disabled) return;
      var isLabelClick = lightLabel === null || lightLabel === void 0 || (_lightLabel$current = lightLabel.current) === null || _lightLabel$current === void 0 || (_lightLabel$current = _lightLabel$current.labelRef) === null || _lightLabel$current === void 0 || (_lightLabel$current = _lightLabel$current.current) === null || _lightLabel$current === void 0 ? void 0 : _lightLabel$current.contains(e.target);
      if (isLabelClick) {
        setOpen(!open);
      } else {
      }
    },
    children: [(0, import_jsx_runtime.jsx)(
      select_default,
      _objectSpread2(_objectSpread2(_objectSpread2({}, restProps), {}, {
        allowClear,
        value,
        mode,
        labelInValue,
        size,
        disabled,
        onChange: function onChange(v, option) {
          _onChange === null || _onChange === void 0 || _onChange(v, option);
          if (mode !== "multiple") {
            setOpen(false);
          }
        }
      }, compatibleBorder(bordered)), {}, {
        showSearch,
        onSearch: showSearch ? function(keyValue) {
          if (fetchDataOnSearch && fetchData) {
            fetchData(keyValue);
          }
          onSearch === null || onSearch === void 0 || onSearch(keyValue);
        } : void 0,
        style,
        dropdownRender: function dropdownRender(menuNode) {
          return (0, import_jsx_runtime2.jsxs)("div", {
            ref,
            children: [showSearch && (0, import_jsx_runtime.jsx)("div", {
              style: {
                margin: "4px 8px"
              },
              children: (0, import_jsx_runtime.jsx)(input_default, {
                value: keyword,
                allowClear: !!allowClear,
                onChange: function onChange(e) {
                  setKeyword(e.target.value);
                  if (fetchDataOnSearch && fetchData) {
                    fetchData(e.target.value);
                  }
                  onSearch === null || onSearch === void 0 || onSearch(e.target.value);
                },
                onKeyDown: function onKeyDown(e) {
                  if (e.key === "Backspace") {
                    e.stopPropagation();
                    return;
                  }
                  if (e.key === "ArrowUp" || e.key === "ArrowDown") {
                    e.preventDefault();
                  }
                },
                style: {
                  width: "100%"
                },
                prefix: (0, import_jsx_runtime.jsx)(SearchOutlined_default, {})
              })
            }), menuNode]
          });
        },
        open: mergeOpen,
        onDropdownVisibleChange: function onDropdownVisibleChange(isOpen) {
          var _restProps$onDropdown;
          if (!isOpen) {
            setKeyword("");
          }
          if (!labelTrigger) {
            setOpen(isOpen);
          }
          restProps === null || restProps === void 0 || (_restProps$onDropdown = restProps.onDropdownVisibleChange) === null || _restProps$onDropdown === void 0 || _restProps$onDropdown.call(restProps, isOpen);
        },
        prefixCls: customizePrefixCls,
        options: onSearch || !keyword ? options : options === null || options === void 0 ? void 0 : options.filter(function(o) {
          var _String, _o$valuePropsName;
          if (optionFilterProp) {
            return toArray(o[optionFilterProp]).join("").toLowerCase().includes(keyword);
          }
          return ((_String = String(o[labelPropsName])) === null || _String === void 0 || (_String = _String.toLowerCase()) === null || _String === void 0 ? void 0 : _String.includes(keyword === null || keyword === void 0 ? void 0 : keyword.toLowerCase())) || ((_o$valuePropsName = o[valuePropsName]) === null || _o$valuePropsName === void 0 || (_o$valuePropsName = _o$valuePropsName.toString()) === null || _o$valuePropsName === void 0 || (_o$valuePropsName = _o$valuePropsName.toLowerCase()) === null || _o$valuePropsName === void 0 ? void 0 : _o$valuePropsName.includes(keyword === null || keyword === void 0 ? void 0 : keyword.toLowerCase()));
        })
      })
    ), (0, import_jsx_runtime.jsx)(FieldLabel, {
      ellipsis: true,
      label,
      placeholder,
      disabled,
      bordered,
      allowClear: !!allowClear,
      value: filterValue || (value === null || value === void 0 ? void 0 : value.label) || value,
      onClear: function onClear() {
        _onChange === null || _onChange === void 0 || _onChange(void 0, void 0);
      },
      ref: lightLabel,
      valueMaxLength
    })]
  }));
};
var LightSelect_default = import_react.default.forwardRef(LightSelect);

// node_modules/@ant-design/pro-field/es/components/Select/SearchSelect/index.js
var import_classnames2 = __toESM(require_classnames());
var import_react2 = __toESM(require_react());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var _excluded2 = ["optionItemRender", "mode", "onSearch", "onFocus", "onChange", "autoClearSearchValue", "searchOnFocus", "resetAfterSelect", "fetchDataOnSearch", "optionFilterProp", "optionLabelProp", "className", "disabled", "options", "fetchData", "resetData", "prefixCls", "onClear", "searchValue", "showSearch", "fieldNames", "defaultSearchValue"];
var _excluded22 = ["className", "optionType"];
var SearchSelect = function SearchSelect2(props, ref) {
  var optionItemRender = props.optionItemRender, mode = props.mode, onSearch = props.onSearch, _onFocus = props.onFocus, _onChange = props.onChange, _props$autoClearSearc = props.autoClearSearchValue, autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc, _props$searchOnFocus = props.searchOnFocus, searchOnFocus = _props$searchOnFocus === void 0 ? false : _props$searchOnFocus, _props$resetAfterSele = props.resetAfterSelect, resetAfterSelect = _props$resetAfterSele === void 0 ? false : _props$resetAfterSele, _props$fetchDataOnSea = props.fetchDataOnSearch, fetchDataOnSearch = _props$fetchDataOnSea === void 0 ? true : _props$fetchDataOnSea, _props$optionFilterPr = props.optionFilterProp, optionFilterProp = _props$optionFilterPr === void 0 ? "label" : _props$optionFilterPr, _props$optionLabelPro = props.optionLabelProp, optionLabelProp = _props$optionLabelPro === void 0 ? "label" : _props$optionLabelPro, className = props.className, disabled = props.disabled, options = props.options, fetchData = props.fetchData, resetData = props.resetData, customizePrefixCls = props.prefixCls, _onClear = props.onClear, propsSearchValue = props.searchValue, showSearch = props.showSearch, fieldNames = props.fieldNames, defaultSearchValue = props.defaultSearchValue, restProps = _objectWithoutProperties(props, _excluded2);
  var _ref = fieldNames || {}, _ref$label = _ref.label, labelPropsName = _ref$label === void 0 ? "label" : _ref$label, _ref$value = _ref.value, valuePropsName = _ref$value === void 0 ? "value" : _ref$value, _ref$options = _ref.options, optionsPropsName = _ref$options === void 0 ? "options" : _ref$options;
  var _useState = (0, import_react2.useState)(propsSearchValue !== null && propsSearchValue !== void 0 ? propsSearchValue : defaultSearchValue), _useState2 = _slicedToArray(_useState, 2), searchValue = _useState2[0], setSearchValue = _useState2[1];
  var selectRef = (0, import_react2.useRef)();
  (0, import_react2.useImperativeHandle)(ref, function() {
    return selectRef.current;
  });
  (0, import_react2.useEffect)(function() {
    if (restProps.autoFocus) {
      var _selectRef$current;
      selectRef === null || selectRef === void 0 || (_selectRef$current = selectRef.current) === null || _selectRef$current === void 0 || _selectRef$current.focus();
    }
  }, [restProps.autoFocus]);
  (0, import_react2.useEffect)(function() {
    setSearchValue(propsSearchValue);
  }, [propsSearchValue]);
  var _useContext = (0, import_react2.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-filed-search-select", customizePrefixCls);
  var classString = (0, import_classnames2.default)(prefixCls, className, _defineProperty({}, "".concat(prefixCls, "-disabled"), disabled));
  var getMergeValue = function getMergeValue2(value, option) {
    if (Array.isArray(value) && Array.isArray(option) && value.length > 0) {
      return value.map(function(item, index) {
        var optionItem = option === null || option === void 0 ? void 0 : option[index];
        var dataItem = (optionItem === null || optionItem === void 0 ? void 0 : optionItem["data-item"]) || {};
        return _objectSpread2(_objectSpread2({}, dataItem), item);
      });
    }
    return [];
  };
  var genOptions = function genOptions2(mapOptions) {
    return mapOptions.map(function(item, index) {
      var _item$optionsPropsNam;
      var _ref2 = item, itemClassName = _ref2.className, optionType = _ref2.optionType, resetItem = _objectWithoutProperties(_ref2, _excluded22);
      var label = item[labelPropsName];
      var value = item[valuePropsName];
      var itemOptions = (_item$optionsPropsNam = item[optionsPropsName]) !== null && _item$optionsPropsNam !== void 0 ? _item$optionsPropsNam : [];
      if (optionType === "optGroup" || item.options) {
        return _objectSpread2(_objectSpread2({
          label
        }, resetItem), {}, {
          data_title: label,
          title: label,
          key: value !== null && value !== void 0 ? value : "".concat(label === null || label === void 0 ? void 0 : label.toString(), "-").concat(index, "-").concat(nanoid()),
          // 防止因key相同导致虚拟滚动出问题
          children: genOptions2(itemOptions)
        });
      }
      return _objectSpread2(_objectSpread2({
        title: label
      }, resetItem), {}, {
        data_title: label,
        value: value !== null && value !== void 0 ? value : index,
        key: value !== null && value !== void 0 ? value : "".concat(label === null || label === void 0 ? void 0 : label.toString(), "-").concat(index, "-").concat(nanoid()),
        "data-item": item,
        className: "".concat(prefixCls, "-option ").concat(itemClassName || "").trim(),
        label: (optionItemRender === null || optionItemRender === void 0 ? void 0 : optionItemRender(item)) || label
      });
    });
  };
  return (0, import_jsx_runtime3.jsx)(select_default, _objectSpread2(_objectSpread2({
    ref: selectRef,
    className: classString,
    allowClear: true,
    autoClearSearchValue,
    disabled,
    mode,
    showSearch,
    searchValue,
    optionFilterProp,
    optionLabelProp,
    onClear: function onClear() {
      _onClear === null || _onClear === void 0 || _onClear();
      fetchData(void 0);
      if (showSearch) {
        setSearchValue(void 0);
      }
    }
  }, restProps), {}, {
    filterOption: restProps.filterOption == false ? false : function(inputValue, option) {
      var _option$data_title, _option$label, _option$value;
      if (restProps.filterOption && typeof restProps.filterOption === "function") {
        return restProps.filterOption(inputValue, _objectSpread2(_objectSpread2({}, option), {}, {
          label: option === null || option === void 0 ? void 0 : option.data_title
        }));
      }
      return !!(option !== null && option !== void 0 && (_option$data_title = option.data_title) !== null && _option$data_title !== void 0 && _option$data_title.toString().toLowerCase().includes(inputValue.toLowerCase()) || option !== null && option !== void 0 && (_option$label = option.label) !== null && _option$label !== void 0 && _option$label.toString().toLowerCase().includes(inputValue.toLowerCase()) || option !== null && option !== void 0 && (_option$value = option.value) !== null && _option$value !== void 0 && _option$value.toString().toLowerCase().includes(inputValue.toLowerCase()));
    },
    onSearch: showSearch ? function(value) {
      if (fetchDataOnSearch) {
        fetchData(value);
      }
      onSearch === null || onSearch === void 0 || onSearch(value);
      setSearchValue(value);
    } : void 0,
    onChange: function onChange(value, optionList) {
      if (showSearch && autoClearSearchValue) {
        fetchData(void 0);
        onSearch === null || onSearch === void 0 || onSearch("");
        setSearchValue(void 0);
      }
      for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        rest[_key - 2] = arguments[_key];
      }
      if (!props.labelInValue) {
        _onChange === null || _onChange === void 0 || _onChange.apply(void 0, [value, optionList].concat(rest));
        return;
      }
      if (mode !== "multiple" && !Array.isArray(optionList)) {
        var dataItem = optionList && optionList["data-item"];
        if (!value || !dataItem) {
          _onChange === null || _onChange === void 0 || _onChange.apply(void 0, [value, optionList].concat(rest));
        } else {
          _onChange === null || _onChange === void 0 || _onChange.apply(void 0, [_objectSpread2(_objectSpread2({}, value), dataItem), optionList].concat(rest));
        }
        return;
      }
      var mergeValue = getMergeValue(value, optionList);
      _onChange === null || _onChange === void 0 || _onChange.apply(void 0, [mergeValue, optionList].concat(rest));
      if (resetAfterSelect) resetData();
    },
    onFocus: function onFocus(e) {
      if (searchOnFocus) {
        fetchData(searchValue);
      }
      _onFocus === null || _onFocus === void 0 || _onFocus(e);
    },
    options: genOptions(options || [])
  }));
};
var SearchSelect_default = import_react2.default.forwardRef(SearchSelect);

// node_modules/@ant-design/pro-field/es/components/Select/index.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var _excluded3 = ["value", "text"];
var _excluded23 = ["mode", "valueEnum", "render", "renderFormItem", "request", "fieldProps", "plain", "children", "light", "proFieldKey", "params", "label", "bordered", "id", "lightLabel", "labelTrigger"];
var Highlight = function Highlight2(_ref) {
  var label = _ref.label, words = _ref.words;
  var _useContext = (0, import_react3.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var lightCls = getPrefixCls("pro-select-item-option-content-light");
  var optionCls = getPrefixCls("pro-select-item-option-content");
  var _useStyle = useStyle("Highlight", function(token) {
    return _defineProperty(_defineProperty({}, ".".concat(lightCls), {
      color: token.colorPrimary
    }), ".".concat(optionCls), {
      flex: "auto",
      overflow: "hidden",
      whiteSpace: "nowrap",
      textOverflow: "ellipsis"
    });
  }), wrapSSR = _useStyle.wrapSSR;
  var matchKeywordsRE = new RegExp(words.map(function(word) {
    return word.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&");
  }).join("|"), "gi");
  var matchText = label;
  var elements = [];
  while (matchText.length) {
    var match = matchKeywordsRE.exec(matchText);
    if (!match) {
      elements.push(matchText);
      break;
    }
    var start = match.index;
    var matchLength = match[0].length + start;
    elements.push(matchText.slice(0, start), import_react3.default.createElement("span", {
      className: lightCls
    }, matchText.slice(start, matchLength)));
    matchText = matchText.slice(matchLength);
  }
  return wrapSSR(import_react3.default.createElement.apply(import_react3.default, ["div", {
    title: label,
    className: optionCls
  }].concat(elements)));
};
function filerByItem(item, keyWords) {
  var _item$label, _item$value;
  if (!keyWords) return true;
  if (item !== null && item !== void 0 && (_item$label = item.label) !== null && _item$label !== void 0 && _item$label.toString().toLowerCase().includes(keyWords.toLowerCase()) || item !== null && item !== void 0 && (_item$value = item.value) !== null && _item$value !== void 0 && _item$value.toString().toLowerCase().includes(keyWords.toLowerCase())) {
    return true;
  }
  if (item.children || item.options) {
    var findItem = [].concat(_toConsumableArray(item.children || []), [item.options || []]).find(function(mapItem) {
      return filerByItem(mapItem, keyWords);
    });
    if (findItem) return true;
  }
  return false;
}
var proFieldParsingValueEnumToArray = function proFieldParsingValueEnumToArray2(valueEnumParams) {
  var enumArray = [];
  var valueEnum = objectToMap(valueEnumParams);
  valueEnum.forEach(function(_, key2) {
    var value = valueEnum.get(key2) || valueEnum.get("".concat(key2));
    if (!value) {
      return;
    }
    if (_typeof(value) === "object" && value !== null && value !== void 0 && value.text) {
      enumArray.push({
        text: value === null || value === void 0 ? void 0 : value.text,
        value: key2,
        label: value === null || value === void 0 ? void 0 : value.text,
        disabled: value.disabled
      });
      return;
    }
    enumArray.push({
      text: value,
      value: key2
    });
  });
  return enumArray;
};
var useFieldFetchData = function useFieldFetchData2(props) {
  var _ref5, _props$debounceTime, _props$fieldProps3, _props$fieldProps6;
  var cacheForSwr = props.cacheForSwr, fieldProps = props.fieldProps;
  var _useState = (0, import_react3.useState)(props.defaultKeyWords), _useState2 = _slicedToArray(_useState, 2), keyWords = _useState2[0], setKeyWords = _useState2[1];
  var _useState3 = (0, import_react3.useState)(function() {
    if (props.proFieldKey) {
      return props.proFieldKey.toString();
    }
    if (props.request) {
      return nanoid();
    }
    return "no-fetch";
  }), _useState4 = _slicedToArray(_useState3, 1), cacheKey = _useState4[0];
  var proFieldKeyRef = (0, import_react3.useRef)(cacheKey);
  var getOptionsFormValueEnum = useRefFunction(function(coverValueEnum) {
    return proFieldParsingValueEnumToArray(objectToMap(coverValueEnum)).map(function(_ref3) {
      var value = _ref3.value, text = _ref3.text, rest = _objectWithoutProperties(_ref3, _excluded3);
      return _objectSpread2({
        label: text,
        value,
        key: value
      }, rest);
    });
  });
  var defaultOptions2 = useDeepCompareMemo_default(function() {
    if (!fieldProps) return void 0;
    var data2 = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.options) || (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.treeData);
    if (!data2) return void 0;
    var _ref4 = fieldProps.fieldNames || {}, children = _ref4.children, label = _ref4.label, value = _ref4.value;
    var traverseFieldKey = function traverseFieldKey2(_options, type) {
      if (!(_options !== null && _options !== void 0 && _options.length)) return;
      var length = _options.length;
      var i = 0;
      while (i < length) {
        var cur = _options[i++];
        if (cur[children] || cur[label] || cur[value]) {
          cur[type] = cur[type === "children" ? children : type === "label" ? label : value];
          traverseFieldKey2(cur[children], type);
        }
      }
    };
    if (children) traverseFieldKey(data2, "children");
    if (label) traverseFieldKey(data2, "label");
    if (value) traverseFieldKey(data2, "value");
    return data2;
  }, [fieldProps]);
  var _useMountMergeState = useMergedState(function() {
    if (props.valueEnum) {
      return getOptionsFormValueEnum(props.valueEnum);
    }
    return [];
  }, {
    value: defaultOptions2
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), options = _useMountMergeState2[0], setOptions = _useMountMergeState2[1];
  useDeepCompareEffect(function() {
    var _props$fieldProps, _props$fieldProps2;
    if (!props.valueEnum || (_props$fieldProps = props.fieldProps) !== null && _props$fieldProps !== void 0 && _props$fieldProps.options || (_props$fieldProps2 = props.fieldProps) !== null && _props$fieldProps2 !== void 0 && _props$fieldProps2.treeData) return;
    setOptions(getOptionsFormValueEnum(props.valueEnum));
  }, [props.valueEnum]);
  var swrKey = useDebounceValue([proFieldKeyRef.current, props.params, keyWords], (_ref5 = (_props$debounceTime = props.debounceTime) !== null && _props$debounceTime !== void 0 ? _props$debounceTime : props === null || props === void 0 || (_props$fieldProps3 = props.fieldProps) === null || _props$fieldProps3 === void 0 ? void 0 : _props$fieldProps3.debounceTime) !== null && _ref5 !== void 0 ? _ref5 : 0, [props.params, keyWords]);
  var _useSWR = useSWR(function() {
    if (!props.request) {
      return null;
    }
    return swrKey;
  }, function(_ref6) {
    var _ref7 = _slicedToArray(_ref6, 3), params = _ref7[1], kw = _ref7[2];
    return props.request(_objectSpread2(_objectSpread2({}, params), {}, {
      keyWords: kw
    }), props);
  }, {
    revalidateIfStale: !cacheForSwr,
    // 打开 cacheForSwr 的时候才应该支持两个功能
    revalidateOnReconnect: cacheForSwr,
    shouldRetryOnError: false,
    // @todo 这个功能感觉应该搞个API出来
    revalidateOnFocus: false
  }), data = _useSWR.data, setLocaleData = _useSWR.mutate, isValidating = _useSWR.isValidating;
  var resOptions = (0, import_react3.useMemo)(function() {
    var _props$fieldProps4, _props$fieldProps5;
    var opt = options === null || options === void 0 ? void 0 : options.map(function(item) {
      if (typeof item === "string") {
        return {
          label: item,
          value: item
        };
      }
      if (item.children || item.options) {
        var childrenOptions = [].concat(_toConsumableArray(item.children || []), _toConsumableArray(item.options || [])).filter(function(mapItem) {
          return filerByItem(mapItem, keyWords);
        });
        return _objectSpread2(_objectSpread2({}, item), {}, {
          children: childrenOptions,
          options: childrenOptions
        });
      }
      return item;
    });
    if (((_props$fieldProps4 = props.fieldProps) === null || _props$fieldProps4 === void 0 ? void 0 : _props$fieldProps4.filterOption) === true || ((_props$fieldProps5 = props.fieldProps) === null || _props$fieldProps5 === void 0 ? void 0 : _props$fieldProps5.filterOption) === void 0) {
      return opt === null || opt === void 0 ? void 0 : opt.filter(function(item) {
        if (!item) return false;
        if (!keyWords) return true;
        return filerByItem(item, keyWords);
      });
    }
    return opt;
  }, [options, keyWords, (_props$fieldProps6 = props.fieldProps) === null || _props$fieldProps6 === void 0 ? void 0 : _props$fieldProps6.filterOption]);
  return [isValidating, props.request ? data : resOptions, function(fetchKeyWords) {
    setKeyWords(fetchKeyWords);
  }, function() {
    setKeyWords(void 0);
    setLocaleData([], false);
  }];
};
var FieldSelect = function FieldSelect2(props, ref) {
  var _ConfigProvider$useCo;
  var mode = props.mode, valueEnum = props.valueEnum, render3 = props.render, renderFormItem = props.renderFormItem, request = props.request, fieldProps = props.fieldProps, plain = props.plain, children = props.children, light = props.light, proFieldKey = props.proFieldKey, params = props.params, label = props.label, bordered = props.bordered, id = props.id, lightLabel = props.lightLabel, labelTrigger = props.labelTrigger, rest = _objectWithoutProperties(props, _excluded23);
  var inputRef = (0, import_react3.useRef)();
  var intl = useIntl();
  var keyWordsRef = (0, import_react3.useRef)("");
  var fieldNames = fieldProps.fieldNames;
  (0, import_react3.useEffect)(function() {
    keyWordsRef.current = fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.searchValue;
  }, [fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.searchValue]);
  var _useFieldFetchData = useFieldFetchData(props), _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 4), loading = _useFieldFetchData2[0], options = _useFieldFetchData2[1], _fetchData = _useFieldFetchData2[2], resetData = _useFieldFetchData2[3];
  var _ref8 = (config_provider_default === null || config_provider_default === void 0 || (_ConfigProvider$useCo = config_provider_default.useConfig) === null || _ConfigProvider$useCo === void 0 ? void 0 : _ConfigProvider$useCo.call(config_provider_default)) || {
    componentSize: "middle"
  }, componentSize = _ref8.componentSize;
  (0, import_react3.useImperativeHandle)(ref, function() {
    return _objectSpread2(_objectSpread2({}, inputRef.current || {}), {}, {
      fetchData: function fetchData(keyWord) {
        return _fetchData(keyWord);
      }
    });
  }, [_fetchData]);
  var optionsValueEnum = (0, import_react3.useMemo)(function() {
    if (mode !== "read") return;
    var _ref9 = fieldNames || {}, _ref9$label = _ref9.label, labelPropsName = _ref9$label === void 0 ? "label" : _ref9$label, _ref9$value = _ref9.value, valuePropsName = _ref9$value === void 0 ? "value" : _ref9$value, _ref9$options = _ref9.options, optionsPropsName = _ref9$options === void 0 ? "options" : _ref9$options;
    var valuesMap = /* @__PURE__ */ new Map();
    var traverseOptions = function traverseOptions2(_options) {
      if (!(_options !== null && _options !== void 0 && _options.length)) {
        return valuesMap;
      }
      var length = _options.length;
      var i = 0;
      while (i < length) {
        var cur = _options[i++];
        valuesMap.set(cur[valuePropsName], cur[labelPropsName]);
        traverseOptions2(cur[optionsPropsName]);
      }
      return valuesMap;
    };
    return traverseOptions(options);
  }, [fieldNames, mode, options]);
  if (mode === "read") {
    var dom = (0, import_jsx_runtime5.jsx)(import_jsx_runtime4.Fragment, {
      children: proFieldParsingText(rest.text, objectToMap(valueEnum || optionsValueEnum))
    });
    if (render3) {
      var _render;
      return (_render = render3(dom, _objectSpread2({
        mode
      }, fieldProps), dom)) !== null && _render !== void 0 ? _render : null;
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var renderDom = function renderDom2() {
      if (light) {
        return (0, import_jsx_runtime5.jsx)(LightSelect_default, _objectSpread2(_objectSpread2({}, compatibleBorder(bordered)), {}, {
          id,
          loading,
          ref: inputRef,
          allowClear: true,
          size: componentSize,
          options,
          label,
          placeholder: intl.getMessage("tableForm.selectPlaceholder", "请选择"),
          lightLabel,
          labelTrigger,
          fetchData: _fetchData
        }, fieldProps));
      }
      return (0, import_jsx_runtime5.jsx)(SearchSelect_default, _objectSpread2(_objectSpread2(_objectSpread2({
        className: rest.className,
        style: _objectSpread2({
          minWidth: 100
        }, rest.style)
      }, compatibleBorder(bordered)), {}, {
        id,
        loading,
        ref: inputRef,
        allowClear: true,
        defaultSearchValue: props.defaultKeyWords,
        notFoundContent: loading ? (0, import_jsx_runtime5.jsx)(spin_default, {
          size: "small"
        }) : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.notFoundContent,
        fetchData: function fetchData(keyWord) {
          keyWordsRef.current = keyWord !== null && keyWord !== void 0 ? keyWord : "";
          _fetchData(keyWord);
        },
        resetData,
        optionItemRender: function optionItemRender(item) {
          if (typeof item.label === "string" && keyWordsRef.current) {
            return (0, import_jsx_runtime5.jsx)(Highlight, {
              label: item.label,
              words: [keyWordsRef.current]
            });
          }
          return item.label;
        },
        placeholder: intl.getMessage("tableForm.selectPlaceholder", "请选择"),
        label
      }, fieldProps), {}, {
        options
      }), "SearchSelect");
    };
    var _dom = renderDom();
    if (renderFormItem) {
      var _renderFormItem;
      return (_renderFormItem = renderFormItem(rest.text, _objectSpread2(_objectSpread2({
        mode
      }, fieldProps), {}, {
        options,
        loading
      }), _dom)) !== null && _renderFormItem !== void 0 ? _renderFormItem : null;
    }
    return _dom;
  }
  return null;
};
var Select_default = import_react3.default.forwardRef(FieldSelect);

// node_modules/@ant-design/pro-field/es/components/Cascader/index.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var _excluded4 = ["radioType", "renderFormItem", "mode", "render", "label", "light"];
var FieldCascader = function FieldCascader2(_ref, ref) {
  var _rest$fieldProps2;
  var radioType = _ref.radioType, renderFormItem = _ref.renderFormItem, mode = _ref.mode, render3 = _ref.render, label = _ref.label, light = _ref.light, rest = _objectWithoutProperties(_ref, _excluded4);
  var _useContext = (0, import_react4.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var layoutClassName = getPrefixCls("pro-field-cascader");
  var _useFieldFetchData = useFieldFetchData(rest), _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3), loading = _useFieldFetchData2[0], options = _useFieldFetchData2[1], _fetchData = _useFieldFetchData2[2];
  var intl = useIntl();
  var cascaderRef = (0, import_react4.useRef)();
  var _useState = (0, import_react4.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  (0, import_react4.useImperativeHandle)(ref, function() {
    return _objectSpread2(_objectSpread2({}, cascaderRef.current || {}), {}, {
      fetchData: function fetchData(keyWord) {
        return _fetchData(keyWord);
      }
    });
  }, [_fetchData]);
  var optionsValueEnum = (0, import_react4.useMemo)(function() {
    var _rest$fieldProps;
    if (mode !== "read") return;
    var _ref2 = ((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.fieldNames) || {}, _ref2$value = _ref2.value, valuePropsName = _ref2$value === void 0 ? "value" : _ref2$value, _ref2$label = _ref2.label, labelPropsName = _ref2$label === void 0 ? "label" : _ref2$label, _ref2$children = _ref2.children, childrenPropsName = _ref2$children === void 0 ? "children" : _ref2$children;
    var valuesMap = /* @__PURE__ */ new Map();
    var traverseOptions = function traverseOptions2(_options) {
      if (!(_options !== null && _options !== void 0 && _options.length)) {
        return valuesMap;
      }
      var length = _options.length;
      var i = 0;
      while (i < length) {
        var cur = _options[i++];
        valuesMap.set(cur[valuePropsName], cur[labelPropsName]);
        traverseOptions2(cur[childrenPropsName]);
      }
      return valuesMap;
    };
    return traverseOptions(options);
  }, [mode, options, (_rest$fieldProps2 = rest.fieldProps) === null || _rest$fieldProps2 === void 0 ? void 0 : _rest$fieldProps2.fieldNames]);
  if (mode === "read") {
    var dom = (0, import_jsx_runtime7.jsx)(import_jsx_runtime6.Fragment, {
      children: proFieldParsingText(rest.text, objectToMap(rest.valueEnum || optionsValueEnum))
    });
    if (render3) {
      var _render;
      return (_render = render3(rest.text, _objectSpread2({
        mode
      }, rest.fieldProps), dom)) !== null && _render !== void 0 ? _render : null;
    }
    return dom;
  }
  if (mode === "edit") {
    var _rest$fieldProps3, _rest$fieldProps5;
    var _dom = (0, import_jsx_runtime7.jsx)(cascader_default, _objectSpread2(_objectSpread2(_objectSpread2({}, compatibleBorder(!light)), {}, {
      ref: cascaderRef,
      open,
      suffixIcon: loading ? (0, import_jsx_runtime7.jsx)(LoadingOutlined_default, {}) : void 0,
      placeholder: intl.getMessage("tableForm.selectPlaceholder", "请选择"),
      allowClear: ((_rest$fieldProps3 = rest.fieldProps) === null || _rest$fieldProps3 === void 0 ? void 0 : _rest$fieldProps3.allowClear) !== false
    }, rest.fieldProps), {}, {
      onDropdownVisibleChange: function onDropdownVisibleChange(isOpen) {
        var _rest$fieldProps4, _rest$fieldProps4$onD;
        rest === null || rest === void 0 || (_rest$fieldProps4 = rest.fieldProps) === null || _rest$fieldProps4 === void 0 || (_rest$fieldProps4$onD = _rest$fieldProps4.onDropdownVisibleChange) === null || _rest$fieldProps4$onD === void 0 || _rest$fieldProps4$onD.call(_rest$fieldProps4, isOpen);
        setOpen(isOpen);
      },
      className: (0, import_classnames3.default)((_rest$fieldProps5 = rest.fieldProps) === null || _rest$fieldProps5 === void 0 ? void 0 : _rest$fieldProps5.className, layoutClassName),
      options
    }));
    if (renderFormItem) {
      var _renderFormItem;
      _dom = (_renderFormItem = renderFormItem(rest.text, _objectSpread2(_objectSpread2({
        mode
      }, rest.fieldProps), {}, {
        options,
        loading
      }), _dom)) !== null && _renderFormItem !== void 0 ? _renderFormItem : null;
    }
    if (light) {
      var _rest$fieldProps6 = rest.fieldProps, disabled = _rest$fieldProps6.disabled, value = _rest$fieldProps6.value;
      var notEmpty = !!value && (value === null || value === void 0 ? void 0 : value.length) !== 0;
      return (0, import_jsx_runtime7.jsx)(FieldLabel, {
        label,
        disabled,
        bordered: rest.bordered,
        value: notEmpty || open ? _dom : null,
        style: notEmpty ? {
          paddingInlineEnd: 0
        } : void 0,
        allowClear: false,
        downIcon: notEmpty || open ? false : void 0,
        onClick: function onClick() {
          var _rest$fieldProps7, _rest$fieldProps7$onD;
          setOpen(true);
          rest === null || rest === void 0 || (_rest$fieldProps7 = rest.fieldProps) === null || _rest$fieldProps7 === void 0 || (_rest$fieldProps7$onD = _rest$fieldProps7.onDropdownVisibleChange) === null || _rest$fieldProps7$onD === void 0 || _rest$fieldProps7$onD.call(_rest$fieldProps7, true);
        }
      });
    }
    return _dom;
  }
  return null;
};
var Cascader_default = import_react4.default.forwardRef(FieldCascader);

// node_modules/@ant-design/pro-field/es/components/Checkbox/index.js
var import_classnames4 = __toESM(require_classnames());
var import_react5 = __toESM(require_react());
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var _excluded5 = ["layout", "renderFormItem", "mode", "render"];
var _excluded24 = ["fieldNames"];
var FieldCheckbox = function FieldCheckbox2(_ref, ref) {
  var _Form$Item, _Form$Item$useStatus;
  var _ref$layout = _ref.layout, layout = _ref$layout === void 0 ? "horizontal" : _ref$layout, renderFormItem = _ref.renderFormItem, mode = _ref.mode, render3 = _ref.render, rest = _objectWithoutProperties(_ref, _excluded5);
  var _useContext = (0, import_react5.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var layoutClassName = getPrefixCls("pro-field-checkbox");
  var status = (_Form$Item = form_default.Item) === null || _Form$Item === void 0 || (_Form$Item$useStatus = _Form$Item.useStatus) === null || _Form$Item$useStatus === void 0 ? void 0 : _Form$Item$useStatus.call(_Form$Item);
  var _useFieldFetchData = useFieldFetchData(rest), _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3), loading = _useFieldFetchData2[0], options = _useFieldFetchData2[1], _fetchData = _useFieldFetchData2[2];
  var _useStyle = useStyle("Checkbox", function(token2) {
    return _defineProperty({}, ".".concat(layoutClassName), {
      "&-error": {
        span: {
          color: token2.colorError
        }
      },
      "&-warning": {
        span: {
          color: token2.colorWarning
        }
      },
      "&-vertical": _defineProperty(_defineProperty(_defineProperty({}, "&".concat(token2.antCls, "-checkbox-group"), {
        display: "inline-block"
      }), "".concat(token2.antCls, "-checkbox-wrapper+").concat(token2.antCls, "-checkbox-wrapper"), {
        "margin-inline-start": "0  !important"
      }), "".concat(token2.antCls, "-checkbox-group-item"), {
        display: "flex",
        marginInlineEnd: 0
      })
    });
  }), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var _useToken = useToken === null || useToken === void 0 ? void 0 : useToken(), token = _useToken.token;
  var checkBoxRef = (0, import_react5.useRef)();
  (0, import_react5.useImperativeHandle)(ref, function() {
    return _objectSpread2(_objectSpread2({}, checkBoxRef.current || {}), {}, {
      fetchData: function fetchData(keyWord) {
        return _fetchData(keyWord);
      }
    });
  }, [_fetchData]);
  if (loading) {
    return (0, import_jsx_runtime8.jsx)(spin_default, {
      size: "small"
    });
  }
  if (mode === "read") {
    var optionsValueEnum = options !== null && options !== void 0 && options.length ? options === null || options === void 0 ? void 0 : options.reduce(function(pre, cur) {
      var _ref3;
      return _objectSpread2(_objectSpread2({}, pre), {}, _defineProperty({}, (_ref3 = cur.value) !== null && _ref3 !== void 0 ? _ref3 : "", cur.label));
    }, {}) : void 0;
    var dom = proFieldParsingText(rest.text, objectToMap(rest.valueEnum || optionsValueEnum));
    if (render3) {
      var _render;
      return (_render = render3(rest.text, _objectSpread2({
        mode
      }, rest.fieldProps), (0, import_jsx_runtime8.jsx)(import_jsx_runtime9.Fragment, {
        children: dom
      }))) !== null && _render !== void 0 ? _render : null;
    }
    return (0, import_jsx_runtime8.jsx)("div", {
      style: {
        display: "flex",
        flexWrap: "wrap",
        alignItems: "center",
        gap: token.marginSM
      },
      children: dom
    });
  }
  if (mode === "edit") {
    var _rest$fieldProps;
    var _ref4 = rest.fieldProps || {}, fieldNames = _ref4.fieldNames, restFieldProps = _objectWithoutProperties(_ref4, _excluded24);
    var _dom = wrapSSR(
      //@ts-ignore
      (0, import_jsx_runtime8.jsx)(checkbox_default.Group, _objectSpread2(_objectSpread2({}, restFieldProps), {}, {
        className: (0, import_classnames4.default)((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.className, hashId, "".concat(layoutClassName, "-").concat(layout), _defineProperty(_defineProperty({}, "".concat(layoutClassName, "-error"), (status === null || status === void 0 ? void 0 : status.status) === "error"), "".concat(layoutClassName, "-warning"), (status === null || status === void 0 ? void 0 : status.status) === "warning")),
        options
      }))
    );
    if (renderFormItem) {
      var _renderFormItem;
      return (_renderFormItem = renderFormItem(rest.text, _objectSpread2(_objectSpread2({
        mode
      }, rest.fieldProps), {}, {
        options,
        loading
      }), _dom)) !== null && _renderFormItem !== void 0 ? _renderFormItem : null;
    }
    return _dom;
  }
  return null;
};
var Checkbox_default = import_react5.default.forwardRef(FieldCheckbox);

// node_modules/@ant-design/pro-field/es/components/Code/index.js
var import_react6 = __toESM(require_react());
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var languageFormat = function languageFormat2(text, language) {
  if (typeof text !== "string") {
    return text;
  }
  try {
    if (language === "json") {
      return JSON.stringify(JSON.parse(text), null, 2);
    }
  } catch (error2) {
  }
  return text;
};
var FieldCode = function FieldCode2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, render3 = _ref.render, _ref$language = _ref.language, language = _ref$language === void 0 ? "text" : _ref$language, renderFormItem = _ref.renderFormItem, plain = _ref.plain, fieldProps = _ref.fieldProps;
  var code = languageFormat(text, language);
  var _proTheme$useToken = proTheme.useToken(), token = _proTheme$useToken.token;
  if (mode === "read") {
    var dom = (0, import_jsx_runtime10.jsx)("pre", _objectSpread2(_objectSpread2({
      ref
    }, fieldProps), {}, {
      style: _objectSpread2({
        padding: 16,
        overflow: "auto",
        fontSize: "85%",
        lineHeight: 1.45,
        color: token.colorTextSecondary,
        fontFamily: token.fontFamilyCode,
        backgroundColor: "rgba(150, 150, 150, 0.1)",
        borderRadius: 3,
        width: "min-content"
      }, fieldProps.style),
      children: (0, import_jsx_runtime10.jsx)("code", {
        children: code
      })
    }));
    if (render3) {
      return render3(code, _objectSpread2(_objectSpread2({
        mode
      }, fieldProps), {}, {
        ref
      }), dom);
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    fieldProps.value = code;
    var _dom = (0, import_jsx_runtime10.jsx)(input_default.TextArea, _objectSpread2(_objectSpread2({
      rows: 5
    }, fieldProps), {}, {
      ref
    }));
    if (plain) {
      _dom = (0, import_jsx_runtime10.jsx)(input_default, _objectSpread2(_objectSpread2({}, fieldProps), {}, {
        ref
      }));
    }
    if (renderFormItem) {
      var _renderFormItem;
      return (_renderFormItem = renderFormItem(code, _objectSpread2(_objectSpread2({
        mode
      }, fieldProps), {}, {
        ref
      }), _dom)) !== null && _renderFormItem !== void 0 ? _renderFormItem : null;
    }
    return _dom;
  }
  return null;
};
var Code_default = import_react6.default.forwardRef(FieldCode);

// node_modules/@ant-design/pro-field/es/components/ColorPicker/index.js
var import_classnames5 = __toESM(require_classnames());
var import_react19 = __toESM(require_react());

// node_modules/@chenshuai2144/sketch-color/es/components/sketch/Sketch.js
var import_react17 = __toESM(require_react());
var import_reactcss8 = __toESM(require_lib());
var import_merge = __toESM(require_merge());

// node_modules/@chenshuai2144/sketch-color/es/components/common/Alpha.js
var import_react8 = __toESM(require_react());
var import_reactcss2 = __toESM(require_lib());

// node_modules/@chenshuai2144/sketch-color/es/helpers/alpha.js
var calculateChange = function calculateChange2(e, hsl, direction, initialA, container) {
  var containerWidth = container.clientWidth;
  var containerHeight = container.clientHeight;
  var x = typeof e.pageX === "number" ? e.pageX : e.touches[0].pageX;
  var y = typeof e.pageY === "number" ? e.pageY : e.touches[0].pageY;
  var left = x - (container.getBoundingClientRect().left + window.pageXOffset);
  var top = y - (container.getBoundingClientRect().top + window.pageYOffset);
  if (direction === "vertical") {
    var a;
    if (top < 0) {
      a = 0;
    } else if (top > containerHeight) {
      a = 1;
    } else {
      a = Math.round(top * 100 / containerHeight) / 100;
    }
    if (hsl.a !== a) {
      return {
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a,
        source: "rgb"
      };
    }
  } else {
    var _a;
    if (left < 0) {
      _a = 0;
    } else if (left > containerWidth) {
      _a = 1;
    } else {
      _a = Math.round(left * 100 / containerWidth) / 100;
    }
    if (initialA !== _a) {
      return {
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a: _a,
        source: "rgb"
      };
    }
  }
  return null;
};

// node_modules/@chenshuai2144/sketch-color/es/components/common/Checkboard.js
var import_react7 = __toESM(require_react());
var import_reactcss = __toESM(require_lib());

// node_modules/@chenshuai2144/sketch-color/es/helpers/checkboard.js
var checkboardCache = {};
var render = function render2(c1, c2, size, serverCanvas) {
  if (typeof document === "undefined" && !serverCanvas) {
    return null;
  }
  var canvas = serverCanvas ? new serverCanvas() : document.createElement("canvas");
  canvas.width = size * 2;
  canvas.height = size * 2;
  var ctx = canvas.getContext("2d");
  if (!ctx) {
    return null;
  }
  ctx.fillStyle = c1;
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = c2;
  ctx.fillRect(0, 0, size, size);
  ctx.translate(size, size);
  ctx.fillRect(0, 0, size, size);
  return canvas.toDataURL();
};
var get2 = function get3(c1, c2, size, serverCanvas) {
  var key2 = "".concat(c1, "-").concat(c2, "-").concat(size).concat(serverCanvas ? "-server" : "");
  if (checkboardCache[key2]) {
    return checkboardCache[key2];
  }
  var checkboard = render(c1, c2, size, serverCanvas);
  checkboardCache[key2] = checkboard;
  return checkboard;
};

// node_modules/@chenshuai2144/sketch-color/es/components/common/Checkboard.js
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key2) {
      _defineProperty2(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty2(obj, key2, value) {
  key2 = _toPropertyKey(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _toPropertyKey(arg) {
  var key2 = _toPrimitive(arg, "string");
  return _typeof2(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive(input, hint) {
  if (_typeof2(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof2(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var Checkboard = function Checkboard2(_ref) {
  var white = _ref.white, grey = _ref.grey, size = _ref.size, renderers = _ref.renderers, borderRadius = _ref.borderRadius, boxShadow = _ref.boxShadow, children = _ref.children;
  var styles = (0, import_reactcss.default)({
    default: {
      grid: {
        borderRadius,
        boxShadow,
        absolute: "0px 0px 0px 0px",
        background: "url(".concat(get2(white, grey, size, renderers.canvas), ") center left")
      }
    }
  });
  return (0, import_react7.isValidElement)(children) ? import_react7.default.cloneElement(children, _objectSpread(_objectSpread({}, children.props), {}, {
    style: _objectSpread(_objectSpread({}, children.props.style), styles.grid)
  })) : import_react7.default.createElement("div", {
    style: styles.grid
  });
};
Checkboard.defaultProps = {
  size: 8,
  white: "transparent",
  grey: "rgba(0,0,0,.08)",
  renderers: {}
};
var Checkboard_default = Checkboard;

// node_modules/@chenshuai2144/sketch-color/es/components/common/Alpha.js
function _typeof3(obj) {
  "@babel/helpers - typeof";
  return _typeof3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof3(obj);
}
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key2) {
      _defineProperty3(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty3(obj, key2, value) {
  key2 = _toPropertyKey2(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey2(arg) {
  var key2 = _toPrimitive2(arg, "string");
  return _typeof3(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive2(input, hint) {
  if (_typeof3(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof3(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf7(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _createSuper2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _possibleConstructorReturn(self2, call) {
  if (call && (_typeof3(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized2(self2);
}
function _assertThisInitialized2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf7(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
var Alpha = function(_ref) {
  _inherits2(Alpha2, _ref);
  var _super = _createSuper2(Alpha2);
  function Alpha2() {
    var _this;
    _classCallCheck2(this, Alpha2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.handleChange = function(e) {
      var change = calculateChange(e, _this.props.hsl, _this.props.direction, _this.props.a, _this.container);
      change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e);
    };
    _this.handleMouseDown = function(e) {
      _this.handleChange(e);
      window.addEventListener("mousemove", _this.handleChange);
      window.addEventListener("mouseup", _this.handleMouseUp);
    };
    _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    };
    _this.unbindEventListeners = function() {
      window.removeEventListener("mousemove", _this.handleChange);
      window.removeEventListener("mouseup", _this.handleMouseUp);
    };
    return _this;
  }
  _createClass2(Alpha2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var rgb = this.props.rgb;
      var styles = (0, import_reactcss2.default)({
        default: {
          alpha: {
            absolute: "0px 0px 0px 0px",
            borderRadius: this.props.radius
          },
          checkboard: {
            absolute: "0px 0px 0px 0px",
            overflow: "hidden",
            borderRadius: this.props.radius
          },
          gradient: {
            absolute: "0px 0px 0px 0px",
            background: "linear-gradient(to right, rgba(".concat(rgb.r, ",").concat(rgb.g, ",").concat(rgb.b, ", 0) 0%,\n           rgba(").concat(rgb.r, ",").concat(rgb.g, ",").concat(rgb.b, ", 1) 100%)"),
            boxShadow: this.props.shadow,
            borderRadius: this.props.radius
          },
          container: {
            position: "relative",
            height: "100%",
            margin: "0 3px"
          },
          pointer: {
            position: "absolute",
            left: "".concat(rgb.a * 100, "%")
          },
          slider: {
            width: "4px",
            borderRadius: "1px",
            height: "8px",
            boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
            background: "#fff",
            marginTop: "1px",
            transform: "translateX(-2px)"
          }
        },
        vertical: {
          gradient: {
            background: "linear-gradient(to bottom, rgba(".concat(rgb.r, ",").concat(rgb.g, ",").concat(rgb.b, ", 0) 0%,\n           rgba(").concat(rgb.r, ",").concat(rgb.g, ",").concat(rgb.b, ", 1) 100%)")
          },
          pointer: {
            left: 0,
            top: "".concat(rgb.a * 100, "%")
          }
        },
        overwrite: _objectSpread3({}, this.props.style)
      }, {
        vertical: this.props.direction === "vertical",
        overwrite: true
      });
      return import_react8.default.createElement("div", {
        style: styles.alpha
      }, import_react8.default.createElement("div", {
        style: styles.checkboard
      }, import_react8.default.createElement(Checkboard_default, {
        renderers: this.props.renderers
      })), import_react8.default.createElement("div", {
        style: styles.gradient
      }), import_react8.default.createElement("div", {
        style: styles.container,
        ref: function ref(container) {
          return _this2.container = container;
        },
        onMouseDown: this.handleMouseDown,
        onTouchMove: this.handleChange,
        onTouchStart: this.handleChange
      }, import_react8.default.createElement("div", {
        style: styles.pointer
      }, this.props.pointer ? import_react8.default.createElement(this.props.pointer, this.props) : import_react8.default.createElement("div", {
        style: styles.slider
      }))));
    }
  }]);
  return Alpha2;
}(import_react8.PureComponent || import_react8.Component);
var Alpha_default = Alpha;

// node_modules/@chenshuai2144/sketch-color/es/components/common/Hue.js
var import_react9 = __toESM(require_react());
var import_reactcss3 = __toESM(require_lib());

// node_modules/@chenshuai2144/sketch-color/es/helpers/hue.js
var calculateChange3 = function calculateChange4(e, direction, hsl, container) {
  var containerWidth = container.clientWidth;
  var containerHeight = container.clientHeight;
  var x = typeof e.pageX === "number" ? e.pageX : e.touches[0].pageX;
  var y = typeof e.pageY === "number" ? e.pageY : e.touches[0].pageY;
  var left = x - (container.getBoundingClientRect().left + window.pageXOffset);
  var top = y - (container.getBoundingClientRect().top + window.pageYOffset);
  if (direction === "vertical") {
    var h;
    if (top < 0) {
      h = 359;
    } else if (top > containerHeight) {
      h = 0;
    } else {
      var percent = -(top * 100 / containerHeight) + 100;
      h = 360 * percent / 100;
    }
    if (hsl.h !== h) {
      return {
        h,
        s: hsl.s,
        l: hsl.l,
        a: hsl.a,
        source: "hsl"
      };
    }
  } else {
    var _h;
    if (left < 0) {
      _h = 0;
    } else if (left > containerWidth) {
      _h = 359;
    } else {
      var _percent = left * 100 / containerWidth;
      _h = 360 * _percent / 100;
    }
    if (hsl.h !== _h) {
      return {
        h: _h,
        s: hsl.s,
        l: hsl.l,
        a: hsl.a,
        source: "hsl"
      };
    }
  }
  return null;
};

// node_modules/@chenshuai2144/sketch-color/es/components/common/Hue.js
function _typeof4(obj) {
  "@babel/helpers - typeof";
  return _typeof4 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof4(obj);
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey3(descriptor.key), descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey3(arg) {
  var key2 = _toPrimitive3(arg, "string");
  return _typeof4(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive3(input, hint) {
  if (_typeof4(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof4(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf2(subClass, superClass);
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf7(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _createSuper3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf2(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf2(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn2(this, result);
  };
}
function _possibleConstructorReturn2(self2, call) {
  if (call && (_typeof4(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized3(self2);
}
function _assertThisInitialized3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf7(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
var Hue = function(_ref) {
  _inherits3(Hue2, _ref);
  var _super = _createSuper3(Hue2);
  function Hue2() {
    var _this;
    _classCallCheck3(this, Hue2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _this.handleChange = function(e) {
      var change = calculateChange3(e, _this.props.direction, _this.props.hsl, _this.container);
      change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e);
    };
    _this.handleMouseDown = function(e) {
      _this.handleChange(e);
      window.addEventListener("mousemove", _this.handleChange);
      window.addEventListener("mouseup", _this.handleMouseUp);
    };
    _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    };
    return _this;
  }
  _createClass3(Hue2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: "unbindEventListeners",
    value: function unbindEventListeners() {
      window.removeEventListener("mousemove", this.handleChange);
      window.removeEventListener("mouseup", this.handleMouseUp);
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var _this$props$direction = this.props.direction, direction = _this$props$direction === void 0 ? "horizontal" : _this$props$direction;
      var styles = (0, import_reactcss3.default)({
        default: {
          hue: {
            absolute: "0px 0px 0px 0px",
            borderRadius: this.props.radius,
            boxShadow: this.props.shadow
          },
          container: {
            padding: "0 2px",
            position: "relative",
            height: "100%",
            borderRadius: this.props.radius
          },
          pointer: {
            position: "absolute",
            left: "".concat(this.props.hsl.h * 100 / 360, "%")
          },
          slider: {
            marginTop: "1px",
            width: "4px",
            borderRadius: "1px",
            height: "8px",
            boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
            background: "#fff",
            transform: "translateX(-2px)"
          }
        },
        vertical: {
          pointer: {
            left: "0px",
            top: "".concat(-(this.props.hsl.h * 100 / 360) + 100, "%")
          }
        }
      }, {
        vertical: direction === "vertical"
      });
      return import_react9.default.createElement("div", {
        style: styles.hue
      }, import_react9.default.createElement("div", {
        className: "hue-".concat(direction),
        style: styles.container,
        ref: function ref(container) {
          return _this2.container = container;
        },
        onMouseDown: this.handleMouseDown,
        onTouchMove: this.handleChange,
        onTouchStart: this.handleChange
      }, import_react9.default.createElement("style", null, "\n            .hue-horizontal {\n              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to right, #f00 0%, #ff0\n                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n\n            .hue-vertical {\n              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,\n                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n          "), import_react9.default.createElement("div", {
        style: styles.pointer
      }, this.props.pointer ? import_react9.default.createElement(this.props.pointer, this.props) : import_react9.default.createElement("div", {
        style: styles.slider
      }))));
    }
  }]);
  return Hue2;
}(import_react9.PureComponent || import_react9.Component);
var Hue_default = Hue;

// node_modules/@chenshuai2144/sketch-color/es/components/common/Saturation.js
var import_react10 = __toESM(require_react());
var import_reactcss4 = __toESM(require_lib());
var import_throttle = __toESM(require_throttle());

// node_modules/@chenshuai2144/sketch-color/es/helpers/saturation.js
var calculateChange5 = function calculateChange6(e, hsl, container) {
  var _container$getBoundin = container.getBoundingClientRect(), containerWidth = _container$getBoundin.width, containerHeight = _container$getBoundin.height;
  var x = typeof e.pageX === "number" ? e.pageX : e.touches[0].pageX;
  var y = typeof e.pageY === "number" ? e.pageY : e.touches[0].pageY;
  var left = x - (container.getBoundingClientRect().left + window.pageXOffset);
  var top = y - (container.getBoundingClientRect().top + window.pageYOffset);
  if (left < 0) {
    left = 0;
  } else if (left > containerWidth) {
    left = containerWidth;
  }
  if (top < 0) {
    top = 0;
  } else if (top > containerHeight) {
    top = containerHeight;
  }
  var saturation = left / containerWidth;
  var bright = 1 - top / containerHeight;
  return {
    h: hsl.h,
    s: saturation,
    v: bright,
    a: hsl.a,
    source: "hsv"
  };
};

// node_modules/@chenshuai2144/sketch-color/es/components/common/Saturation.js
function _typeof5(obj) {
  "@babel/helpers - typeof";
  return _typeof5 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof5(obj);
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey4(descriptor.key), descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey4(arg) {
  var key2 = _toPrimitive4(arg, "string");
  return _typeof5(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive4(input, hint) {
  if (_typeof5(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof5(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits4(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf3(subClass, superClass);
}
function _setPrototypeOf3(o, p) {
  _setPrototypeOf3 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf7(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf3(o, p);
}
function _createSuper4(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct3();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf3(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf3(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn3(this, result);
  };
}
function _possibleConstructorReturn3(self2, call) {
  if (call && (_typeof5(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized4(self2);
}
function _assertThisInitialized4(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct3() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf3(o) {
  _getPrototypeOf3 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf7(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf3(o);
}
var Saturation = function(_ref) {
  _inherits4(Saturation2, _ref);
  var _super = _createSuper4(Saturation2);
  function Saturation2(props) {
    var _this;
    _classCallCheck4(this, Saturation2);
    _this = _super.call(this, props);
    _this.handleChange = function(e) {
      typeof _this.props.onChange === "function" && _this.throttle(_this.props.onChange, calculateChange5(e, _this.props.hsl, _this.container), e);
    };
    _this.handleMouseDown = function(e) {
      _this.handleChange(e);
      var renderWindow = _this.getContainerRenderWindow();
      renderWindow.addEventListener("mousemove", _this.handleChange);
      renderWindow.addEventListener("mouseup", _this.handleMouseUp);
    };
    _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    };
    _this.throttle = (0, import_throttle.default)(function(fn, data, e) {
      fn(data, e);
    }, 50);
    return _this;
  }
  _createClass4(Saturation2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.throttle.cancel();
      this.unbindEventListeners();
    }
  }, {
    key: "getContainerRenderWindow",
    value: function getContainerRenderWindow() {
      var container = this.container;
      var renderWindow = window;
      while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {
        renderWindow = renderWindow.parent;
      }
      return renderWindow;
    }
  }, {
    key: "unbindEventListeners",
    value: function unbindEventListeners() {
      var renderWindow = this.getContainerRenderWindow();
      renderWindow.removeEventListener("mousemove", this.handleChange);
      renderWindow.removeEventListener("mouseup", this.handleMouseUp);
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var _ref2 = this.props.style || {}, color = _ref2.color, white = _ref2.white, black = _ref2.black, pointer = _ref2.pointer, circle = _ref2.circle;
      var styles = (0, import_reactcss4.default)({
        default: {
          color: {
            absolute: "0px 0px 0px 0px",
            background: "hsl(".concat(this.props.hsl.h, ",100%, 50%)"),
            borderRadius: this.props.radius
          },
          white: {
            absolute: "0px 0px 0px 0px",
            borderRadius: this.props.radius
          },
          black: {
            absolute: "0px 0px 0px 0px",
            boxShadow: this.props.shadow,
            borderRadius: this.props.radius
          },
          pointer: {
            position: "absolute",
            top: "".concat(-(this.props.hsv.v * 100) + 100, "%"),
            left: "".concat(this.props.hsv.s * 100, "%"),
            cursor: "default"
          },
          circle: {
            width: "4px",
            height: "4px",
            boxShadow: "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),\n            0 0 1px 2px rgba(0,0,0,.4)",
            borderRadius: "50%",
            cursor: "hand",
            transform: "translate(-2px, -2px)"
          }
        },
        custom: {
          color,
          white,
          black,
          pointer,
          circle
        }
      }, {
        custom: !!this.props.style
      });
      return import_react10.default.createElement("div", {
        style: styles.color,
        ref: function ref(container) {
          return _this2.container = container;
        },
        onMouseDown: this.handleMouseDown,
        onTouchMove: this.handleChange,
        onTouchStart: this.handleChange
      }, import_react10.default.createElement("style", null, "\n          .saturation-white {\n            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n            background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n          }\n          .saturation-black {\n            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n            background: linear-gradient(to top, #000, rgba(0,0,0,0));\n          }\n        "), import_react10.default.createElement("div", {
        style: styles.white,
        className: "saturation-white"
      }, import_react10.default.createElement("div", {
        style: styles.black,
        className: "saturation-black"
      }), import_react10.default.createElement("div", {
        style: styles.pointer
      }, this.props.pointer ? import_react10.default.createElement(this.props.pointer, this.props) : import_react10.default.createElement("div", {
        style: styles.circle
      }))));
    }
  }]);
  return Saturation2;
}(import_react10.PureComponent || import_react10.Component);
var Saturation_default = Saturation;

// node_modules/@chenshuai2144/sketch-color/es/components/common/ColorWrap.js
var import_react11 = __toESM(require_react());
var import_debounce = __toESM(require_debounce());

// node_modules/@chenshuai2144/sketch-color/es/helpers/color.js
var import_each = __toESM(require_each());

// node_modules/tinycolor2/esm/tinycolor.js
function _typeof6(obj) {
  "@babel/helpers - typeof";
  return _typeof6 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof6(obj);
}
var trimLeft = /^\s+/;
var trimRight = /\s+$/;
function tinycolor(color, opts) {
  color = color ? color : "";
  opts = opts || {};
  if (color instanceof tinycolor) {
    return color;
  }
  if (!(this instanceof tinycolor)) {
    return new tinycolor(color, opts);
  }
  var rgb = inputToRGB(color);
  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;
  this._gradientType = opts.gradientType;
  if (this._r < 1) this._r = Math.round(this._r);
  if (this._g < 1) this._g = Math.round(this._g);
  if (this._b < 1) this._b = Math.round(this._b);
  this._ok = rgb.ok;
}
tinycolor.prototype = {
  isDark: function isDark() {
    return this.getBrightness() < 128;
  },
  isLight: function isLight() {
    return !this.isDark();
  },
  isValid: function isValid() {
    return this._ok;
  },
  getOriginalInput: function getOriginalInput() {
    return this._originalInput;
  },
  getFormat: function getFormat() {
    return this._format;
  },
  getAlpha: function getAlpha() {
    return this._a;
  },
  getBrightness: function getBrightness() {
    var rgb = this.toRgb();
    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
  },
  getLuminance: function getLuminance() {
    var rgb = this.toRgb();
    var RsRGB, GsRGB, BsRGB, R, G, B;
    RsRGB = rgb.r / 255;
    GsRGB = rgb.g / 255;
    BsRGB = rgb.b / 255;
    if (RsRGB <= 0.03928) R = RsRGB / 12.92;
    else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
    if (GsRGB <= 0.03928) G = GsRGB / 12.92;
    else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
    if (BsRGB <= 0.03928) B = BsRGB / 12.92;
    else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
    return 0.2126 * R + 0.7152 * G + 0.0722 * B;
  },
  setAlpha: function setAlpha2(value) {
    this._a = boundAlpha(value);
    this._roundA = Math.round(100 * this._a) / 100;
    return this;
  },
  toHsv: function toHsv() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    return {
      h: hsv.h * 360,
      s: hsv.s,
      v: hsv.v,
      a: this._a
    };
  },
  toHsvString: function toHsvString() {
    var hsv = rgbToHsv(this._r, this._g, this._b);
    var h = Math.round(hsv.h * 360), s = Math.round(hsv.s * 100), v = Math.round(hsv.v * 100);
    return this._a == 1 ? "hsv(" + h + ", " + s + "%, " + v + "%)" : "hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")";
  },
  toHsl: function toHsl() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    return {
      h: hsl.h * 360,
      s: hsl.s,
      l: hsl.l,
      a: this._a
    };
  },
  toHslString: function toHslString() {
    var hsl = rgbToHsl(this._r, this._g, this._b);
    var h = Math.round(hsl.h * 360), s = Math.round(hsl.s * 100), l = Math.round(hsl.l * 100);
    return this._a == 1 ? "hsl(" + h + ", " + s + "%, " + l + "%)" : "hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")";
  },
  toHex: function toHex(allow3Char) {
    return rgbToHex(this._r, this._g, this._b, allow3Char);
  },
  toHexString: function toHexString(allow3Char) {
    return "#" + this.toHex(allow3Char);
  },
  toHex8: function toHex8(allow4Char) {
    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
  },
  toHex8String: function toHex8String(allow4Char) {
    return "#" + this.toHex8(allow4Char);
  },
  toRgb: function toRgb() {
    return {
      r: Math.round(this._r),
      g: Math.round(this._g),
      b: Math.round(this._b),
      a: this._a
    };
  },
  toRgbString: function toRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ")" : "rgba(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ", " + this._roundA + ")";
  },
  toPercentageRgb: function toPercentageRgb() {
    return {
      r: Math.round(bound01(this._r, 255) * 100) + "%",
      g: Math.round(bound01(this._g, 255) * 100) + "%",
      b: Math.round(bound01(this._b, 255) * 100) + "%",
      a: this._a
    };
  },
  toPercentageRgbString: function toPercentageRgbString() {
    return this._a == 1 ? "rgb(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%)" : "rgba(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
  },
  toName: function toName() {
    if (this._a === 0) {
      return "transparent";
    }
    if (this._a < 1) {
      return false;
    }
    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
  },
  toFilter: function toFilter(secondColor) {
    var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
    var secondHex8String = hex8String;
    var gradientType = this._gradientType ? "GradientType = 1, " : "";
    if (secondColor) {
      var s = tinycolor(secondColor);
      secondHex8String = "#" + rgbaToArgbHex(s._r, s._g, s._b, s._a);
    }
    return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
  },
  toString: function toString(format) {
    var formatSet = !!format;
    format = format || this._format;
    var formattedString = false;
    var hasAlpha = this._a < 1 && this._a >= 0;
    var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");
    if (needsAlphaFormat) {
      if (format === "name" && this._a === 0) {
        return this.toName();
      }
      return this.toRgbString();
    }
    if (format === "rgb") {
      formattedString = this.toRgbString();
    }
    if (format === "prgb") {
      formattedString = this.toPercentageRgbString();
    }
    if (format === "hex" || format === "hex6") {
      formattedString = this.toHexString();
    }
    if (format === "hex3") {
      formattedString = this.toHexString(true);
    }
    if (format === "hex4") {
      formattedString = this.toHex8String(true);
    }
    if (format === "hex8") {
      formattedString = this.toHex8String();
    }
    if (format === "name") {
      formattedString = this.toName();
    }
    if (format === "hsl") {
      formattedString = this.toHslString();
    }
    if (format === "hsv") {
      formattedString = this.toHsvString();
    }
    return formattedString || this.toHexString();
  },
  clone: function clone() {
    return tinycolor(this.toString());
  },
  _applyModification: function _applyModification(fn, args) {
    var color = fn.apply(null, [this].concat([].slice.call(args)));
    this._r = color._r;
    this._g = color._g;
    this._b = color._b;
    this.setAlpha(color._a);
    return this;
  },
  lighten: function lighten() {
    return this._applyModification(_lighten, arguments);
  },
  brighten: function brighten() {
    return this._applyModification(_brighten, arguments);
  },
  darken: function darken() {
    return this._applyModification(_darken, arguments);
  },
  desaturate: function desaturate() {
    return this._applyModification(_desaturate, arguments);
  },
  saturate: function saturate() {
    return this._applyModification(_saturate, arguments);
  },
  greyscale: function greyscale() {
    return this._applyModification(_greyscale, arguments);
  },
  spin: function spin() {
    return this._applyModification(_spin, arguments);
  },
  _applyCombination: function _applyCombination(fn, args) {
    return fn.apply(null, [this].concat([].slice.call(args)));
  },
  analogous: function analogous() {
    return this._applyCombination(_analogous, arguments);
  },
  complement: function complement() {
    return this._applyCombination(_complement, arguments);
  },
  monochromatic: function monochromatic() {
    return this._applyCombination(_monochromatic, arguments);
  },
  splitcomplement: function splitcomplement() {
    return this._applyCombination(_splitcomplement, arguments);
  },
  // Disabled until https://github.com/bgrins/TinyColor/issues/254
  // polyad: function (number) {
  //   return this._applyCombination(polyad, [number]);
  // },
  triad: function triad() {
    return this._applyCombination(polyad, [3]);
  },
  tetrad: function tetrad() {
    return this._applyCombination(polyad, [4]);
  }
};
tinycolor.fromRatio = function(color, opts) {
  if (_typeof6(color) == "object") {
    var newColor = {};
    for (var i in color) {
      if (color.hasOwnProperty(i)) {
        if (i === "a") {
          newColor[i] = color[i];
        } else {
          newColor[i] = convertToPercentage(color[i]);
        }
      }
    }
    color = newColor;
  }
  return tinycolor(color, opts);
};
function inputToRGB(color) {
  var rgb = {
    r: 0,
    g: 0,
    b: 0
  };
  var a = 1;
  var s = null;
  var v = null;
  var l = null;
  var ok = false;
  var format = false;
  if (typeof color == "string") {
    color = stringInputToObject(color);
  }
  if (_typeof6(color) == "object") {
    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
      rgb = rgbToRgb(color.r, color.g, color.b);
      ok = true;
      format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
      s = convertToPercentage(color.s);
      v = convertToPercentage(color.v);
      rgb = hsvToRgb(color.h, s, v);
      ok = true;
      format = "hsv";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
      s = convertToPercentage(color.s);
      l = convertToPercentage(color.l);
      rgb = hslToRgb(color.h, s, l);
      ok = true;
      format = "hsl";
    }
    if (color.hasOwnProperty("a")) {
      a = color.a;
    }
  }
  a = boundAlpha(a);
  return {
    ok,
    format: color.format || format,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a
  };
}
function rgbToRgb(r, g, b) {
  return {
    r: bound01(r, 255) * 255,
    g: bound01(g, 255) * 255,
    b: bound01(b, 255) * 255
  };
}
function rgbToHsl(r, g, b) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b = bound01(b, 255);
  var max = Math.max(r, g, b), min = Math.min(r, g, b);
  var h, s, l = (max + min) / 2;
  if (max == min) {
    h = s = 0;
  } else {
    var d = max - min;
    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
    switch (max) {
      case r:
        h = (g - b) / d + (g < b ? 6 : 0);
        break;
      case g:
        h = (b - r) / d + 2;
        break;
      case b:
        h = (r - g) / d + 4;
        break;
    }
    h /= 6;
  }
  return {
    h,
    s,
    l
  };
}
function hslToRgb(h, s, l) {
  var r, g, b;
  h = bound01(h, 360);
  s = bound01(s, 100);
  l = bound01(l, 100);
  function hue2rgb(p2, q2, t) {
    if (t < 0) t += 1;
    if (t > 1) t -= 1;
    if (t < 1 / 6) return p2 + (q2 - p2) * 6 * t;
    if (t < 1 / 2) return q2;
    if (t < 2 / 3) return p2 + (q2 - p2) * (2 / 3 - t) * 6;
    return p2;
  }
  if (s === 0) {
    r = g = b = l;
  } else {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    r = hue2rgb(p, q, h + 1 / 3);
    g = hue2rgb(p, q, h);
    b = hue2rgb(p, q, h - 1 / 3);
  }
  return {
    r: r * 255,
    g: g * 255,
    b: b * 255
  };
}
function rgbToHsv(r, g, b) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b = bound01(b, 255);
  var max = Math.max(r, g, b), min = Math.min(r, g, b);
  var h, s, v = max;
  var d = max - min;
  s = max === 0 ? 0 : d / max;
  if (max == min) {
    h = 0;
  } else {
    switch (max) {
      case r:
        h = (g - b) / d + (g < b ? 6 : 0);
        break;
      case g:
        h = (b - r) / d + 2;
        break;
      case b:
        h = (r - g) / d + 4;
        break;
    }
    h /= 6;
  }
  return {
    h,
    s,
    v
  };
}
function hsvToRgb(h, s, v) {
  h = bound01(h, 360) * 6;
  s = bound01(s, 100);
  v = bound01(v, 100);
  var i = Math.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod = i % 6, r = [v, q, p, p, t, v][mod], g = [t, v, v, q, p, p][mod], b = [p, p, t, v, v, q][mod];
  return {
    r: r * 255,
    g: g * 255,
    b: b * 255
  };
}
function rgbToHex(r, g, b, allow3Char) {
  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
  }
  return hex.join("");
}
function rgbaToHex(r, g, b, a, allow4Char) {
  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];
  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
  }
  return hex.join("");
}
function rgbaToArgbHex(r, g, b, a) {
  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
  return hex.join("");
}
tinycolor.equals = function(color1, color2) {
  if (!color1 || !color2) return false;
  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};
tinycolor.random = function() {
  return tinycolor.fromRatio({
    r: Math.random(),
    g: Math.random(),
    b: Math.random()
  });
};
function _desaturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s -= amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _saturate(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.s += amount / 100;
  hsl.s = clamp01(hsl.s);
  return tinycolor(hsl);
}
function _greyscale(color) {
  return tinycolor(color).desaturate(100);
}
function _lighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l += amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}
function _brighten(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var rgb = tinycolor(color).toRgb();
  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
  return tinycolor(rgb);
}
function _darken(color, amount) {
  amount = amount === 0 ? 0 : amount || 10;
  var hsl = tinycolor(color).toHsl();
  hsl.l -= amount / 100;
  hsl.l = clamp01(hsl.l);
  return tinycolor(hsl);
}
function _spin(color, amount) {
  var hsl = tinycolor(color).toHsl();
  var hue = (hsl.h + amount) % 360;
  hsl.h = hue < 0 ? 360 + hue : hue;
  return tinycolor(hsl);
}
function _complement(color) {
  var hsl = tinycolor(color).toHsl();
  hsl.h = (hsl.h + 180) % 360;
  return tinycolor(hsl);
}
function polyad(color, number) {
  if (isNaN(number) || number <= 0) {
    throw new Error("Argument to polyad must be a positive number");
  }
  var hsl = tinycolor(color).toHsl();
  var result = [tinycolor(color)];
  var step = 360 / number;
  for (var i = 1; i < number; i++) {
    result.push(tinycolor({
      h: (hsl.h + i * step) % 360,
      s: hsl.s,
      l: hsl.l
    }));
  }
  return result;
}
function _splitcomplement(color) {
  var hsl = tinycolor(color).toHsl();
  var h = hsl.h;
  return [tinycolor(color), tinycolor({
    h: (h + 72) % 360,
    s: hsl.s,
    l: hsl.l
  }), tinycolor({
    h: (h + 216) % 360,
    s: hsl.s,
    l: hsl.l
  })];
}
function _analogous(color, results, slices) {
  results = results || 6;
  slices = slices || 30;
  var hsl = tinycolor(color).toHsl();
  var part = 360 / slices;
  var ret = [tinycolor(color)];
  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
    hsl.h = (hsl.h + part) % 360;
    ret.push(tinycolor(hsl));
  }
  return ret;
}
function _monochromatic(color, results) {
  results = results || 6;
  var hsv = tinycolor(color).toHsv();
  var h = hsv.h, s = hsv.s, v = hsv.v;
  var ret = [];
  var modification = 1 / results;
  while (results--) {
    ret.push(tinycolor({
      h,
      s,
      v
    }));
    v = (v + modification) % 1;
  }
  return ret;
}
tinycolor.mix = function(color1, color2, amount) {
  amount = amount === 0 ? 0 : amount || 50;
  var rgb1 = tinycolor(color1).toRgb();
  var rgb2 = tinycolor(color2).toRgb();
  var p = amount / 100;
  var rgba = {
    r: (rgb2.r - rgb1.r) * p + rgb1.r,
    g: (rgb2.g - rgb1.g) * p + rgb1.g,
    b: (rgb2.b - rgb1.b) * p + rgb1.b,
    a: (rgb2.a - rgb1.a) * p + rgb1.a
  };
  return tinycolor(rgba);
};
tinycolor.readability = function(color1, color2) {
  var c1 = tinycolor(color1);
  var c2 = tinycolor(color2);
  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
};
tinycolor.isReadable = function(color1, color2, wcag2) {
  var readability = tinycolor.readability(color1, color2);
  var wcag2Parms, out;
  out = false;
  wcag2Parms = validateWCAG2Parms(wcag2);
  switch (wcag2Parms.level + wcag2Parms.size) {
    case "AAsmall":
    case "AAAlarge":
      out = readability >= 4.5;
      break;
    case "AAlarge":
      out = readability >= 3;
      break;
    case "AAAsmall":
      out = readability >= 7;
      break;
  }
  return out;
};
tinycolor.mostReadable = function(baseColor, colorList, args) {
  var bestColor = null;
  var bestScore = 0;
  var readability;
  var includeFallbackColors, level, size;
  args = args || {};
  includeFallbackColors = args.includeFallbackColors;
  level = args.level;
  size = args.size;
  for (var i = 0; i < colorList.length; i++) {
    readability = tinycolor.readability(baseColor, colorList[i]);
    if (readability > bestScore) {
      bestScore = readability;
      bestColor = tinycolor(colorList[i]);
    }
  }
  if (tinycolor.isReadable(baseColor, bestColor, {
    level,
    size
  }) || !includeFallbackColors) {
    return bestColor;
  } else {
    args.includeFallbackColors = false;
    return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
  }
};
var names = tinycolor.names = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "0ff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000",
  blanchedalmond: "ffebcd",
  blue: "00f",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  burntsienna: "ea7e5d",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "0ff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgreen: "006400",
  darkgrey: "a9a9a9",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "f0f",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  green: "008000",
  greenyellow: "adff2f",
  grey: "808080",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgreen: "90ee90",
  lightgrey: "d3d3d3",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "789",
  lightslategrey: "789",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "0f0",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "f0f",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370db",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "db7093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  rebeccapurple: "663399",
  red: "f00",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "fff",
  whitesmoke: "f5f5f5",
  yellow: "ff0",
  yellowgreen: "9acd32"
};
var hexNames = tinycolor.hexNames = flip(names);
function flip(o) {
  var flipped = {};
  for (var i in o) {
    if (o.hasOwnProperty(i)) {
      flipped[o[i]] = i;
    }
  }
  return flipped;
}
function boundAlpha(a) {
  a = parseFloat(a);
  if (isNaN(a) || a < 0 || a > 1) {
    a = 1;
  }
  return a;
}
function bound01(n, max) {
  if (isOnePointZero(n)) n = "100%";
  var processPercent = isPercentage(n);
  n = Math.min(max, Math.max(0, parseFloat(n)));
  if (processPercent) {
    n = parseInt(n * max, 10) / 100;
  }
  if (Math.abs(n - max) < 1e-6) {
    return 1;
  }
  return n % max / parseFloat(max);
}
function clamp01(val) {
  return Math.min(1, Math.max(0, val));
}
function parseIntFromHex(val) {
  return parseInt(val, 16);
}
function isOnePointZero(n) {
  return typeof n == "string" && n.indexOf(".") != -1 && parseFloat(n) === 1;
}
function isPercentage(n) {
  return typeof n === "string" && n.indexOf("%") != -1;
}
function pad2(c) {
  return c.length == 1 ? "0" + c : "" + c;
}
function convertToPercentage(n) {
  if (n <= 1) {
    n = n * 100 + "%";
  }
  return n;
}
function convertDecimalToHex(d) {
  return Math.round(parseFloat(d) * 255).toString(16);
}
function convertHexToDecimal(h) {
  return parseIntFromHex(h) / 255;
}
var matchers = function() {
  var CSS_INTEGER = "[-\\+]?\\d+%?";
  var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
  var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
  var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
  return {
    CSS_UNIT: new RegExp(CSS_UNIT),
    rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
    rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
    hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
    hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
    hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
    hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
  };
}();
function isValidCSSUnit(color) {
  return !!matchers.CSS_UNIT.exec(color);
}
function stringInputToObject(color) {
  color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
  var named = false;
  if (names[color]) {
    color = names[color];
    named = true;
  } else if (color == "transparent") {
    return {
      r: 0,
      g: 0,
      b: 0,
      a: 0,
      format: "name"
    };
  }
  var match;
  if (match = matchers.rgb.exec(color)) {
    return {
      r: match[1],
      g: match[2],
      b: match[3]
    };
  }
  if (match = matchers.rgba.exec(color)) {
    return {
      r: match[1],
      g: match[2],
      b: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hsl.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      l: match[3]
    };
  }
  if (match = matchers.hsla.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      l: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hsv.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      v: match[3]
    };
  }
  if (match = matchers.hsva.exec(color)) {
    return {
      h: match[1],
      s: match[2],
      v: match[3],
      a: match[4]
    };
  }
  if (match = matchers.hex8.exec(color)) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      a: convertHexToDecimal(match[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match = matchers.hex6.exec(color)) {
    return {
      r: parseIntFromHex(match[1]),
      g: parseIntFromHex(match[2]),
      b: parseIntFromHex(match[3]),
      format: named ? "name" : "hex"
    };
  }
  if (match = matchers.hex4.exec(color)) {
    return {
      r: parseIntFromHex(match[1] + "" + match[1]),
      g: parseIntFromHex(match[2] + "" + match[2]),
      b: parseIntFromHex(match[3] + "" + match[3]),
      a: convertHexToDecimal(match[4] + "" + match[4]),
      format: named ? "name" : "hex8"
    };
  }
  if (match = matchers.hex3.exec(color)) {
    return {
      r: parseIntFromHex(match[1] + "" + match[1]),
      g: parseIntFromHex(match[2] + "" + match[2]),
      b: parseIntFromHex(match[3] + "" + match[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function validateWCAG2Parms(parms) {
  var level, size;
  parms = parms || {
    level: "AA",
    size: "small"
  };
  level = (parms.level || "AA").toUpperCase();
  size = (parms.size || "small").toLowerCase();
  if (level !== "AA" && level !== "AAA") {
    level = "AA";
  }
  if (size !== "small" && size !== "large") {
    size = "small";
  }
  return {
    level,
    size
  };
}

// node_modules/@chenshuai2144/sketch-color/es/helpers/color.js
var simpleCheckForValidColor = function simpleCheckForValidColor2(data) {
  var keysToCheck = ["r", "g", "b", "a", "h", "s", "l", "v"];
  var checked = 0;
  var passed = 0;
  (0, import_each.default)(keysToCheck, function(letter) {
    if (data[letter]) {
      checked += 1;
      if (!isNaN(data[letter])) {
        passed += 1;
      }
      if (letter === "s" || letter === "l") {
        var percentPatt = /^\d+%$/;
        if (percentPatt.test(data[letter])) {
          passed += 1;
        }
      }
    }
  });
  return checked === passed ? data : false;
};
var toState = function toState2(data, oldHue) {
  var color = data.hex ? tinycolor(data.hex) : tinycolor(data);
  var hsl = color.toHsl();
  var hsv = color.toHsv();
  var rgb = color.toRgb();
  var hex = color.toHex();
  if (hsl.s === 0) {
    hsl.h = oldHue || 0;
    hsv.h = oldHue || 0;
  }
  var transparent = hex === "000000" && rgb.a === 0;
  return {
    hsl,
    hex: transparent ? "transparent" : "#".concat(hex),
    rgb,
    hsv,
    oldHue: data.h || oldHue || hsl.h,
    source: data.source
  };
};
var isValidHex = function isValidHex2(hex) {
  if (hex === "transparent") {
    return true;
  }
  var lh = String(hex).charAt(0) === "#" ? 1 : 0;
  return hex.length !== 4 + lh && hex.length < 7 + lh && tinycolor(hex).isValid();
};

// node_modules/@chenshuai2144/sketch-color/es/components/common/ColorWrap.js
function _typeof7(obj) {
  "@babel/helpers - typeof";
  return _typeof7 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof7(obj);
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys3(Object(source), true).forEach(function(key2) {
      _defineProperty4(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys3(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty4(obj, key2, value) {
  key2 = _toPropertyKey5(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey5(descriptor.key), descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey5(arg) {
  var key2 = _toPrimitive5(arg, "string");
  return _typeof7(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive5(input, hint) {
  if (_typeof7(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof7(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits5(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf4(subClass, superClass);
}
function _setPrototypeOf4(o, p) {
  _setPrototypeOf4 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf7(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf4(o, p);
}
function _createSuper5(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct4();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf4(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf4(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn4(this, result);
  };
}
function _possibleConstructorReturn4(self2, call) {
  if (call && (_typeof7(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized5(self2);
}
function _assertThisInitialized5(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct4() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf4(o) {
  _getPrototypeOf4 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf7(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf4(o);
}
var ColorWrap = function ColorWrap2(Picker) {
  var ColorPicker2 = function(_ref) {
    _inherits5(ColorPicker3, _ref);
    var _super = _createSuper5(ColorPicker3);
    function ColorPicker3(props) {
      var _this;
      _classCallCheck5(this, ColorPicker3);
      _this = _super.call(this);
      _this.handleChange = function(data, event) {
        var isValidColor = simpleCheckForValidColor(data);
        if (isValidColor) {
          var colors = toState(data, data.h || _this.state.oldHue);
          _this.setState(colors);
          _this.props.onChangeComplete && _this.debounce(_this.props.onChangeComplete, colors, event);
          _this.props.onChange && _this.props.onChange(colors, event);
        }
      };
      _this.handleSwatchHover = function(data, event) {
        var isValidColor = simpleCheckForValidColor(data);
        if (isValidColor) {
          var colors = toState(data, data.h || _this.state.oldHue);
          _this.props.onSwatchHover && _this.props.onSwatchHover(colors, event);
        }
      };
      _this.state = _objectSpread4({}, toState(props.color, 0));
      _this.debounce = (0, import_debounce.default)(function(fn, data, event) {
        fn(data, event);
      }, 100);
      return _this;
    }
    _createClass5(ColorPicker3, [{
      key: "render",
      value: function render3() {
        var optionalEvents = {};
        if (this.props.onSwatchHover) {
          optionalEvents.onSwatchHover = this.handleSwatchHover;
        }
        return import_react11.default.createElement(Picker, _extends({}, this.props, this.state, {
          onChange: this.handleChange
        }, optionalEvents));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, state) {
        return _objectSpread4({}, toState(nextProps.color, state.oldHue));
      }
    }]);
    return ColorPicker3;
  }(import_react11.PureComponent || import_react11.Component);
  ColorPicker2.propTypes = _objectSpread4({}, Picker.propTypes);
  ColorPicker2.defaultProps = _objectSpread4(_objectSpread4({}, Picker.defaultProps), {}, {
    color: {
      h: 250,
      s: 0.5,
      l: 0.2,
      a: 1
    }
  });
  return ColorPicker2;
};
var ColorWrap_default = ColorWrap;

// node_modules/@chenshuai2144/sketch-color/es/components/common/EditableInput.js
var import_react12 = __toESM(require_react());
var import_reactcss5 = __toESM(require_lib());
function _typeof8(obj) {
  "@babel/helpers - typeof";
  return _typeof8 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof8(obj);
}
function _defineProperty5(obj, key2, value) {
  key2 = _toPropertyKey6(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey6(descriptor.key), descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties5(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey6(arg) {
  var key2 = _toPrimitive6(arg, "string");
  return _typeof8(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive6(input, hint) {
  if (_typeof8(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof8(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits6(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf5(subClass, superClass);
}
function _setPrototypeOf5(o, p) {
  _setPrototypeOf5 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf7(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf5(o, p);
}
function _createSuper6(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct5();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf5(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf5(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn5(this, result);
  };
}
function _possibleConstructorReturn5(self2, call) {
  if (call && (_typeof8(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized6(self2);
}
function _assertThisInitialized6(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct5() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf5(o) {
  _getPrototypeOf5 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf7(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf5(o);
}
var DEFAULT_ARROW_OFFSET = 1;
var UP_KEY_CODE = 38;
var DOWN_KEY_CODE = 40;
var VALID_KEY_CODES = [UP_KEY_CODE, DOWN_KEY_CODE];
var isValidKeyCode = function isValidKeyCode2(keyCode) {
  return VALID_KEY_CODES.indexOf(keyCode) > -1;
};
var getNumberValue = function getNumberValue2(value) {
  return Number(String(value).replace(/%/g, ""));
};
var idCounter = 1;
var EditableInput = function(_ref) {
  _inherits6(EditableInput2, _ref);
  var _super = _createSuper6(EditableInput2);
  function EditableInput2(props) {
    var _this;
    _classCallCheck6(this, EditableInput2);
    _this = _super.call(this);
    _this.handleBlur = function() {
      if (_this.state.blurValue) {
        _this.setState({
          value: _this.state.blurValue,
          blurValue: null
        });
      }
    };
    _this.handleChange = function(e) {
      _this.setUpdatedValue(e.target.value, e);
    };
    _this.handleKeyDown = function(e) {
      var value = getNumberValue(e.target.value);
      if (!isNaN(value) && isValidKeyCode(e.keyCode)) {
        var offset = _this.getArrowOffset();
        var updatedValue = e.keyCode === UP_KEY_CODE ? value + offset : value - offset;
        _this.setUpdatedValue(updatedValue, e);
      }
    };
    _this.handleDrag = function(e) {
      if (_this.props.dragLabel) {
        var newValue = Math.round(_this.props.value + e.movementX);
        if (newValue >= 0 && newValue <= _this.props.dragMax) {
          _this.props.onChange && _this.props.onChange(_this.getValueObjectWithLabel(newValue), e);
        }
      }
    };
    _this.handleMouseDown = function(e) {
      if (_this.props.dragLabel) {
        e.preventDefault();
        _this.handleDrag(e);
        window.addEventListener("mousemove", _this.handleDrag);
        window.addEventListener("mouseup", _this.handleMouseUp);
      }
    };
    _this.handleMouseUp = function() {
      _this.unbindEventListeners();
    };
    _this.unbindEventListeners = function() {
      window.removeEventListener("mousemove", _this.handleDrag);
      window.removeEventListener("mouseup", _this.handleMouseUp);
    };
    _this.state = {
      value: String(props.value).toUpperCase(),
      blurValue: String(props.value).toUpperCase()
    };
    _this.inputId = "rc-editable-input-".concat(idCounter++);
    return _this;
  }
  _createClass6(EditableInput2, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.value !== this.state.value && (prevProps.value !== this.props.value || prevState.value !== this.state.value)) {
        if (this.input === document.activeElement) {
          this.setState({
            blurValue: String(this.props.value).toUpperCase()
          });
        } else {
          this.setState({
            value: String(this.props.value).toUpperCase(),
            blurValue: !this.state.blurValue && String(this.props.value).toUpperCase()
          });
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unbindEventListeners();
    }
  }, {
    key: "getValueObjectWithLabel",
    value: function getValueObjectWithLabel(value) {
      return _defineProperty5({}, this.props.label, value);
    }
  }, {
    key: "getArrowOffset",
    value: function getArrowOffset() {
      return this.props.arrowOffset || DEFAULT_ARROW_OFFSET;
    }
  }, {
    key: "setUpdatedValue",
    value: function setUpdatedValue(value, e) {
      var onChangeValue = this.props.label ? this.getValueObjectWithLabel(value) : value;
      this.props.onChange && this.props.onChange(onChangeValue, e);
      this.setState({
        value
      });
    }
  }, {
    key: "render",
    value: function render3() {
      var _this2 = this;
      var styles = (0, import_reactcss5.default)({
        "default": {
          wrap: {
            position: "relative"
          }
        },
        "user-override": {
          wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
          input: this.props.style && this.props.style.input ? this.props.style.input : {},
          label: this.props.style && this.props.style.label ? this.props.style.label : {}
        },
        "dragLabel-true": {
          label: {
            cursor: "ew-resize"
          }
        }
      }, {
        "user-override": true
      }, this.props);
      return import_react12.default.createElement("div", {
        style: styles.wrap
      }, import_react12.default.createElement("input", {
        id: this.inputId,
        style: styles.input,
        ref: function ref(input) {
          return _this2.input = input;
        },
        value: this.state.value,
        onKeyDown: this.handleKeyDown,
        onChange: this.handleChange,
        onBlur: this.handleBlur,
        placeholder: this.props.placeholder,
        spellCheck: "false"
      }), this.props.label && !this.props.hideLabel ? import_react12.default.createElement("label", {
        htmlFor: this.inputId,
        style: styles.label,
        onMouseDown: this.handleMouseDown
      }, this.props.label) : null);
    }
  }]);
  return EditableInput2;
}(import_react12.PureComponent || import_react12.Component);
var EditableInput_default = EditableInput;

// node_modules/@chenshuai2144/sketch-color/es/components/common/Swatch.js
var import_react14 = __toESM(require_react());
var import_reactcss6 = __toESM(require_lib());

// node_modules/@chenshuai2144/sketch-color/es/helpers/interaction.js
var import_react13 = __toESM(require_react());
function _typeof9(obj) {
  "@babel/helpers - typeof";
  return _typeof9 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof9(obj);
}
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey7(descriptor.key), descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties6(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties6(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _toPropertyKey7(arg) {
  var key2 = _toPrimitive7(arg, "string");
  return _typeof9(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive7(input, hint) {
  if (_typeof9(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof9(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _inherits7(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
  Object.defineProperty(subClass, "prototype", { writable: false });
  if (superClass) _setPrototypeOf6(subClass, superClass);
}
function _setPrototypeOf6(o, p) {
  _setPrototypeOf6 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf7(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf6(o, p);
}
function _createSuper7(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct6();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf6(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf6(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn6(this, result);
  };
}
function _possibleConstructorReturn6(self2, call) {
  if (call && (_typeof9(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized7(self2);
}
function _assertThisInitialized7(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _isNativeReflectConstruct6() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _getPrototypeOf6(o) {
  _getPrototypeOf6 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf7(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf6(o);
}
var handleFocus = function handleFocus2(Component6) {
  var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
  return function(_React$Component) {
    _inherits7(Focus, _React$Component);
    var _super = _createSuper7(Focus);
    function Focus() {
      var _this;
      _classCallCheck7(this, Focus);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _this.state = {
        focus: false
      };
      _this.handleFocus = function() {
        return _this.setState({
          focus: true
        });
      };
      _this.handleBlur = function() {
        return _this.setState({
          focus: false
        });
      };
      return _this;
    }
    _createClass7(Focus, [{
      key: "render",
      value: function render3() {
        return import_react13.default.createElement(Span, {
          onFocus: this.handleFocus,
          onBlur: this.handleBlur
        }, import_react13.default.createElement(Component6, _extends2({}, this.props, this.state)));
      }
    }]);
    return Focus;
  }(import_react13.default.Component);
};

// node_modules/@chenshuai2144/sketch-color/es/components/common/Swatch.js
function _typeof10(obj) {
  "@babel/helpers - typeof";
  return _typeof10 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof10(obj);
}
function _extends3() {
  _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function ownKeys4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys4(Object(source), true).forEach(function(key2) {
      _defineProperty6(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys4(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty6(obj, key2, value) {
  key2 = _toPropertyKey8(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _toPropertyKey8(arg) {
  var key2 = _toPrimitive8(arg, "string");
  return _typeof10(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive8(input, hint) {
  if (_typeof10(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof10(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var ENTER = 13;
var Swatch = function Swatch2(_ref) {
  var color = _ref.color, style = _ref.style, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
  } : _ref$onClick, onHover = _ref.onHover, _ref$title = _ref.title, title = _ref$title === void 0 ? color : _ref$title, children = _ref.children, focus = _ref.focus, _ref$focusStyle = _ref.focusStyle, focusStyle = _ref$focusStyle === void 0 ? {} : _ref$focusStyle;
  var transparent = color === "transparent";
  var styles = (0, import_reactcss6.default)({
    default: {
      swatch: _objectSpread5(_objectSpread5({
        background: color,
        height: "100%",
        width: "100%",
        cursor: "pointer",
        position: "relative",
        outline: "none"
      }, style), focus ? focusStyle : {})
    }
  });
  var handleClick = function handleClick2(e) {
    return onClick(color, e);
  };
  var handleKeyDown = function handleKeyDown2(e) {
    return e.keyCode === ENTER && onClick(color, e);
  };
  var handleHover = function handleHover2(e) {
    return onHover(color, e);
  };
  var optionalEvents = {};
  if (onHover) {
    optionalEvents.onMouseOver = handleHover;
  }
  return import_react14.default.createElement("div", _extends3({
    style: styles.swatch,
    onClick: handleClick,
    title,
    tabIndex: 0,
    onKeyDown: handleKeyDown
  }, optionalEvents), children, transparent && import_react14.default.createElement(Checkboard_default, {
    borderRadius: styles.swatch.borderRadius,
    boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
  }));
};
var Swatch_default = handleFocus(Swatch);

// node_modules/@chenshuai2144/sketch-color/es/components/sketch/SketchFields.js
var import_react15 = __toESM(require_react());
var import_reactcss7 = __toESM(require_lib());
var SketchFields = function SketchFields2(_ref) {
  var onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hex = _ref.hex, disableAlpha = _ref.disableAlpha;
  var styles = (0, import_reactcss7.default)({
    default: {
      fields: {
        display: "flex",
        paddingTop: "4px"
      },
      single: {
        flex: "1",
        paddingLeft: "6px"
      },
      alpha: {
        flex: "1",
        paddingLeft: "6px"
      },
      double: {
        flex: "2"
      },
      input: {
        width: "80%",
        padding: "4px 10% 3px",
        border: "none",
        boxShadow: "inset 0 0 0 1px #ccc",
        fontSize: "11px"
      },
      label: {
        display: "block",
        textAlign: "center",
        fontSize: "11px",
        color: "#222",
        paddingTop: "3px",
        paddingBottom: "4px",
        textTransform: "capitalize"
      }
    },
    disableAlpha: {
      alpha: {
        display: "none"
      }
    }
  }, {
    disableAlpha
  });
  var handleChange = function handleChange2(data, e) {
    if (data.hex) {
      isValidHex(data.hex) && (onChange === null || onChange === void 0 ? void 0 : onChange({
        hex: data.hex,
        source: "hex"
      }, e));
    } else if (data.r || data.g || data.b) {
      onChange === null || onChange === void 0 ? void 0 : onChange({
        r: data.r || (rgb === null || rgb === void 0 ? void 0 : rgb.r),
        g: data.g || (rgb === null || rgb === void 0 ? void 0 : rgb.g),
        b: data.b || (rgb === null || rgb === void 0 ? void 0 : rgb.b),
        a: rgb === null || rgb === void 0 ? void 0 : rgb.a,
        source: "rgb"
      }, e);
    } else if (data.a) {
      if (data.a < 0) {
        data.a = 0;
      } else if (data.a > 100) {
        data.a = 100;
      }
      data.a /= 100;
      onChange === null || onChange === void 0 ? void 0 : onChange({
        h: hsl === null || hsl === void 0 ? void 0 : hsl.h,
        s: hsl === null || hsl === void 0 ? void 0 : hsl.s,
        l: hsl === null || hsl === void 0 ? void 0 : hsl.l,
        a: data.a,
        source: "rgb"
      }, e);
    }
  };
  return import_react15.default.createElement("div", {
    style: styles.fields,
    className: "flexbox-fix"
  }, import_react15.default.createElement("div", {
    style: styles.double
  }, import_react15.default.createElement(EditableInput_default, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "hex",
    value: hex === null || hex === void 0 ? void 0 : hex.replace("#", ""),
    onChange: handleChange
  })), import_react15.default.createElement("div", {
    style: styles.single
  }, import_react15.default.createElement(EditableInput_default, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "r",
    value: rgb === null || rgb === void 0 ? void 0 : rgb.r,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), import_react15.default.createElement("div", {
    style: styles.single
  }, import_react15.default.createElement(EditableInput_default, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "g",
    value: rgb === null || rgb === void 0 ? void 0 : rgb.g,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), import_react15.default.createElement("div", {
    style: styles.single
  }, import_react15.default.createElement(EditableInput_default, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "b",
    value: rgb === null || rgb === void 0 ? void 0 : rgb.b,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), import_react15.default.createElement("div", {
    style: styles.alpha
  }, import_react15.default.createElement(EditableInput_default, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "a",
    value: Math.round(((rgb === null || rgb === void 0 ? void 0 : rgb.a) || 0) * 100),
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "100"
  })));
};
var SketchFields_default = SketchFields;

// node_modules/@chenshuai2144/sketch-color/es/components/sketch/SketchPresetColors.js
var import_react16 = __toESM(require_react());
function _typeof11(obj) {
  "@babel/helpers - typeof";
  return _typeof11 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof11(obj);
}
function ownKeys5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys5(Object(source), true).forEach(function(key2) {
      _defineProperty7(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys5(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty7(obj, key2, value) {
  key2 = _toPropertyKey9(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _toPropertyKey9(arg) {
  var key2 = _toPrimitive9(arg, "string");
  return _typeof11(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive9(input, hint) {
  if (_typeof11(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof11(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var SketchPresetColors = function SketchPresetColors2(_ref) {
  var colors = _ref.colors, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
  } : _ref$onClick, onSwatchHover = _ref.onSwatchHover;
  var styles = {
    colors: {
      margin: "0 -10px",
      padding: "10px 0 0 10px",
      borderTop: "1px solid #eee",
      display: "flex",
      flexWrap: "wrap",
      position: "relative"
    },
    swatchWrap: {
      width: "16px",
      height: "16px",
      margin: "0 10px 10px 0"
    },
    swatch: {
      msBorderRadius: "3px",
      MozBorderRadius: "3px",
      OBorderRadius: "3px",
      WebkitBorderRadius: "3px",
      borderRadius: "3px",
      msBoxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)",
      MozBoxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)",
      OBoxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)",
      WebkitBoxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)",
      boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)"
    }
  };
  var handleClick = function handleClick2(hex, e) {
    onClick === null || onClick === void 0 ? void 0 : onClick({
      hex,
      source: "hex"
    }, e);
  };
  return import_react16.default.createElement("div", {
    style: styles.colors,
    className: "flexbox-fix"
  }, colors === null || colors === void 0 ? void 0 : colors.map(function(colorObjOrString) {
    var c = typeof colorObjOrString === "string" ? {
      color: colorObjOrString,
      title: void 0
    } : colorObjOrString;
    var key2 = "".concat(c.color).concat((c === null || c === void 0 ? void 0 : c.title) || "");
    return import_react16.default.createElement("div", {
      key: key2,
      style: styles.swatchWrap
    }, import_react16.default.createElement(Swatch_default, _objectSpread6(_objectSpread6({}, c), {}, {
      style: styles.swatch,
      onClick: handleClick,
      onHover: onSwatchHover,
      focusStyle: {
        boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ".concat(c.color)
      }
    })));
  }));
};
var SketchPresetColors_default = SketchPresetColors;

// node_modules/@chenshuai2144/sketch-color/es/components/sketch/Sketch.js
function _typeof12(obj) {
  "@babel/helpers - typeof";
  return _typeof12 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof12(obj);
}
function ownKeys6(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys6(Object(source), true).forEach(function(key2) {
      _defineProperty8(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys6(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty8(obj, key2, value) {
  key2 = _toPropertyKey10(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value;
  }
  return obj;
}
function _toPropertyKey10(arg) {
  var key2 = _toPrimitive10(arg, "string");
  return _typeof12(key2) === "symbol" ? key2 : String(key2);
}
function _toPrimitive10(input, hint) {
  if (_typeof12(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof12(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
var Sketch = function Sketch2(_ref) {
  var width = _ref.width, rgb = _ref.rgb, hex = _ref.hex, hsv = _ref.hsv, hsl = _ref.hsl, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, disableAlpha = _ref.disableAlpha, presetColors = _ref.presetColors, renderers = _ref.renderers, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
  var styles = (0, import_reactcss8.default)(
    //@ts-ignore
    (0, import_merge.default)({
      default: _objectSpread7({
        picker: {
          width,
          padding: "10px 10px 0",
          boxSizing: "initial",
          background: "#fff",
          borderRadius: "4px",
          boxShadow: "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)"
        },
        saturation: {
          width: "100%",
          paddingBottom: "75%",
          position: "relative",
          overflow: "hidden"
        },
        Saturation: {
          radius: "3px",
          shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
        },
        controls: {
          display: "flex"
        },
        sliders: {
          padding: "4px 0",
          flex: "1"
        },
        color: {
          width: "24px",
          height: "24px",
          position: "relative",
          marginTop: "4px",
          marginLeft: "4px",
          borderRadius: "3px"
        },
        activeColor: {
          absolute: "0px 0px 0px 0px",
          borderRadius: "2px",
          background: "rgba(".concat(rgb.r, ",").concat(rgb.g, ",").concat(rgb.b, ",").concat(rgb.a, ")"),
          boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
        },
        hue: {
          position: "relative",
          height: "10px",
          overflow: "hidden"
        },
        Hue: {
          radius: "2px",
          shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
        },
        alpha: {
          position: "relative",
          height: "10px",
          marginTop: "4px",
          overflow: "hidden"
        },
        Alpha: {
          radius: "2px",
          shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
        }
      }, passedStyles),
      disableAlpha: {
        color: {
          height: "10px"
        },
        hue: {
          height: "10px"
        },
        alpha: {
          display: "none"
        }
      }
    }, passedStyles),
    {
      disableAlpha
    }
  );
  return import_react17.default.createElement("div", {
    style: styles.picker,
    className: "sketch-picker ".concat(className)
  }, import_react17.default.createElement("div", {
    style: styles.saturation
  }, import_react17.default.createElement(Saturation_default, {
    style: styles.Saturation,
    hsl,
    hsv,
    onChange
  })), import_react17.default.createElement("div", {
    style: styles.controls,
    className: "flexbox-fix"
  }, import_react17.default.createElement("div", {
    style: styles.sliders
  }, import_react17.default.createElement("div", {
    style: styles.hue
  }, import_react17.default.createElement(Hue_default, {
    style: styles.Hue,
    hsl,
    onChange
  })), import_react17.default.createElement("div", {
    style: styles.alpha
  }, import_react17.default.createElement(Alpha_default, {
    style: styles.Alpha,
    rgb,
    hsl,
    renderers,
    onChange
  }))), import_react17.default.createElement("div", {
    style: styles.color
  }, import_react17.default.createElement(Checkboard_default, null), import_react17.default.createElement("div", {
    style: styles.activeColor
  }))), import_react17.default.createElement(SketchFields_default, {
    rgb,
    hsl,
    hex,
    onChange,
    disableAlpha
  }), import_react17.default.createElement(SketchPresetColors_default, {
    colors: presetColors,
    onClick: onChange,
    onSwatchHover
  }));
};
Sketch.defaultProps = {
  disableAlpha: false,
  width: 200,
  styles: {},
  presetColors: ["#D0021B", "#F5A623", "#F8E71C", "#8B572A", "#7ED321", "#417505", "#BD10E0", "#9013FE", "#4A90E2", "#50E3C2", "#B8E986", "#000000", "#4A4A4A", "#9B9B9B", "#FFFFFF"]
};
var SketchPicker = ColorWrap_default(Sketch);

// node_modules/@ant-design/pro-field/es/components/ColorPicker/old.js
var import_react18 = __toESM(require_react());
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var _excluded6 = ["mode", "popoverProps"];
var DEFAULT_COLORS = [
  "#FF9D4E",
  // 0 - 橘黄色
  "#5BD8A6",
  // 1 - 绿色
  "#5B8FF9",
  // 2 - 蓝色
  "#F7664E",
  // 3 - 红色
  "#FF86B7",
  // 4 - 水红色
  "#2B9E9D",
  // 5 - 墨绿色
  "#9270CA",
  // 6 - 紫色
  "#6DC8EC",
  // 7 - 浅蓝色
  "#667796",
  // 8 - 黛蓝色
  "#F6BD16"
  // 9 - 黄色
];
var ColorPicker = import_react18.default.forwardRef(function(_ref, ref) {
  var mode = _ref.mode, popoverProps = _ref.popoverProps, rest = _objectWithoutProperties(_ref, _excluded6);
  var _useContext = (0, import_react18.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-field-color-picker");
  var _proTheme$useToken = proTheme.useToken(), token = _proTheme$useToken.token;
  var _useMergedState = useMergedState("#1890ff", {
    value: rest.value,
    onChange: rest.onChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), color = _useMergedState2[0], setColor = _useMergedState2[1];
  var _useStyle = useStyle("ProFiledColorPicker" + color, function() {
    return _defineProperty({}, ".".concat(prefixCls), {
      width: 32,
      height: 32,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      boxSizing: "border-box",
      border: "1px solid ".concat(token.colorSplit),
      borderRadius: token.borderRadius,
      "&:hover": {
        borderColor: color
      }
    });
  }), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var readDom = wrapSSR((0, import_jsx_runtime11.jsx)("div", {
    className: "".concat(prefixCls, " ").concat(hashId).trim(),
    style: {
      cursor: rest.disabled ? "not-allowed" : "pointer",
      backgroundColor: rest.disabled ? token.colorBgContainerDisabled : token.colorBgContainer
    },
    children: (0, import_jsx_runtime11.jsx)("div", {
      style: {
        backgroundColor: color,
        width: 24,
        boxSizing: "border-box",
        height: 24,
        borderRadius: token.borderRadius
      }
    })
  }));
  (0, import_react18.useImperativeHandle)(ref, function() {
  });
  if (mode === "read" || rest.disabled) {
    return readDom;
  }
  return (0, import_jsx_runtime11.jsx)(popover_default, _objectSpread2(_objectSpread2({
    trigger: "click",
    placement: "right"
  }, popoverProps), {}, {
    content: (0, import_jsx_runtime11.jsx)("div", {
      style: {
        margin: "-12px -16px"
      },
      children: (0, import_jsx_runtime11.jsx)(SketchPicker, _objectSpread2(_objectSpread2({}, rest), {}, {
        presetColors: rest.colors || rest.presetColors || DEFAULT_COLORS,
        color,
        onChange: function onChange(_ref3) {
          var hex = _ref3.hex, _ref3$rgb = _ref3.rgb, r = _ref3$rgb.r, g = _ref3$rgb.g, b = _ref3$rgb.b, a = _ref3$rgb.a;
          if (a && a < 1) {
            setColor("rgba(".concat(r, ", ").concat(g, ", ").concat(b, ", ").concat(a, ")"));
            return;
          }
          setColor(hex);
        }
      }))
    }),
    children: readDom
  }));
});

// node_modules/@ant-design/pro-field/es/components/ColorPicker/index.js
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var DEFAULT_PRESETS = {
  label: "Recommended",
  colors: ["#F5222D", "#FA8C16", "#FADB14", "#8BBB11", "#52C41A", "#13A8A8", "#1677FF", "#2F54EB", "#722ED1", "#EB2F96", "#F5222D4D", "#FA8C164D", "#FADB144D", "#8BBB114D", "#52C41A4D", "#13A8A84D", "#1677FF4D", "#2F54EB4D", "#722ED14D", "#EB2F964D"]
};
function IsIt_Render_V5() {
  return compareVersions(version_default, "5.5.0") > -1;
}
function getColorPicker() {
  var old = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
  if ((typeof old === "undefined" || old === false) && IsIt_Render_V5()) {
    return color_picker_default;
  }
  return ColorPicker;
}
var FieldColorPicker = function FieldColorPicker2(_ref, ref) {
  var text = _ref.text, type = _ref.mode, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, old = _ref.old;
  var _useContext = (0, import_react19.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var ColorPicker2 = import_react19.default.useMemo(function() {
    return getColorPicker(old);
  }, [old]);
  var prefixCls = getPrefixCls("pro-field-color-picker");
  var className = (0, import_react19.useMemo)(function() {
    if (old) return "";
    return (0, import_classnames5.default)(_defineProperty({}, prefixCls, IsIt_Render_V5()));
  }, [prefixCls, old]);
  if (type === "read") {
    var dom = (0, import_jsx_runtime12.jsx)(ColorPicker2, {
      value: text,
      mode: "read",
      ref,
      className,
      open: false
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode: type
      }, fieldProps), dom);
    }
    return dom;
  }
  if (type === "edit" || type === "update") {
    var style = _objectSpread2({
      display: "table-cell"
    }, fieldProps.style);
    var _dom = (0, import_jsx_runtime12.jsx)(ColorPicker2, _objectSpread2(_objectSpread2({
      ref,
      presets: [DEFAULT_PRESETS]
    }, fieldProps), {}, {
      style,
      className
    }));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2(_objectSpread2({
        mode: type
      }, fieldProps), {}, {
        style
      }), _dom);
    }
    return _dom;
  }
  return null;
};
var ColorPicker_default = import_react19.default.forwardRef(FieldColorPicker);

// node_modules/@ant-design/pro-field/es/components/DatePicker/index.js
var import_dayjs = __toESM(require_dayjs_min());
var import_weekOfYear = __toESM(require_weekOfYear());
var import_react20 = __toESM(require_react());
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
import_dayjs.default.extend(import_weekOfYear.default);
var formatDate = function formatDate2(text, format) {
  if (!text) return "-";
  if (typeof format === "function") {
    return format((0, import_dayjs.default)(text));
  } else {
    return (0, import_dayjs.default)(text).format((Array.isArray(format) ? format[0] : format) || "YYYY-MM-DD");
  }
};
var FieldDatePicker = function FieldDatePicker2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, format = _ref.format, label = _ref.label, light = _ref.light, render3 = _ref.render, renderFormItem = _ref.renderFormItem, plain = _ref.plain, showTime = _ref.showTime, fieldProps = _ref.fieldProps, picker = _ref.picker, bordered = _ref.bordered, lightLabel = _ref.lightLabel;
  var intl = useIntl();
  var _useState = (0, import_react20.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  if (mode === "read") {
    var dom = formatDate(text, fieldProps.format || format);
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime14.jsx)(import_jsx_runtime13.Fragment, {
        children: dom
      }));
    }
    return (0, import_jsx_runtime14.jsx)(import_jsx_runtime13.Fragment, {
      children: dom
    });
  }
  if (mode === "edit" || mode === "update") {
    var _dom;
    var disabled = fieldProps.disabled, value = fieldProps.value, _fieldProps$placehold = fieldProps.placeholder, placeholder = _fieldProps$placehold === void 0 ? intl.getMessage("tableForm.selectPlaceholder", "请选择") : _fieldProps$placehold;
    var dayValue = parseValueToDay(value);
    if (light) {
      _dom = (0, import_jsx_runtime14.jsx)(FieldLabel, {
        label,
        onClick: function onClick() {
          var _fieldProps$onOpenCha;
          fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha === void 0 || _fieldProps$onOpenCha.call(fieldProps, true);
          setOpen(true);
        },
        style: dayValue ? {
          paddingInlineEnd: 0
        } : void 0,
        disabled,
        value: dayValue || open ? (0, import_jsx_runtime14.jsx)(date_picker_default, _objectSpread2(_objectSpread2(_objectSpread2({
          picker,
          showTime,
          format,
          ref
        }, fieldProps), {}, {
          value: dayValue,
          onOpenChange: function onOpenChange(isOpen) {
            var _fieldProps$onOpenCha2;
            setOpen(isOpen);
            fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha2 = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha2 === void 0 || _fieldProps$onOpenCha2.call(fieldProps, isOpen);
          }
        }, compatibleBorder(false)), {}, {
          open
        })) : void 0,
        allowClear: false,
        downIcon: dayValue || open ? false : void 0,
        bordered,
        ref: lightLabel
      });
    } else {
      _dom = (0, import_jsx_runtime14.jsx)(date_picker_default, _objectSpread2(_objectSpread2(_objectSpread2({
        picker,
        showTime,
        format,
        placeholder
      }, compatibleBorder(plain === void 0 ? true : !plain)), {}, {
        ref
      }, fieldProps), {}, {
        value: dayValue
      }));
    }
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var DatePicker_default = import_react20.default.forwardRef(FieldDatePicker);

// node_modules/@ant-design/pro-field/es/components/Digit/index.js
var import_react21 = __toESM(require_react());
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var FieldDigit = function FieldDigit2(_ref, ref) {
  var text = _ref.text, type = _ref.mode, render3 = _ref.render, placeholder = _ref.placeholder, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps;
  var intl = useIntl();
  var placeholderValue = placeholder || intl.getMessage("tableForm.inputPlaceholder", "请输入");
  var proxyChange = (0, import_react21.useCallback)(function(value) {
    var val = value !== null && value !== void 0 ? value : void 0;
    if (!fieldProps.stringMode && typeof val === "string") {
      val = Number(val);
    }
    if (typeof val === "number" && !isNil(val) && !isNil(fieldProps.precision)) {
      val = Number(val.toFixed(fieldProps.precision));
    }
    return val;
  }, [fieldProps]);
  if (type === "read") {
    var _fieldProps$formatter;
    var fractionDigits = {};
    if (fieldProps !== null && fieldProps !== void 0 && fieldProps.precision) {
      fractionDigits = {
        minimumFractionDigits: Number(fieldProps.precision),
        maximumFractionDigits: Number(fieldProps.precision)
      };
    }
    var digit = new Intl.NumberFormat(void 0, _objectSpread2(_objectSpread2({}, fractionDigits), (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.intlProps) || {})).format(Number(text));
    var dom = !(fieldProps !== null && fieldProps !== void 0 && fieldProps.stringMode) ? (0, import_jsx_runtime15.jsx)("span", {
      ref,
      children: (fieldProps === null || fieldProps === void 0 || (_fieldProps$formatter = fieldProps.formatter) === null || _fieldProps$formatter === void 0 ? void 0 : _fieldProps$formatter.call(fieldProps, digit)) || digit
    }) : (0, import_jsx_runtime15.jsx)("span", {
      children: text
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode: type
      }, fieldProps), dom);
    }
    return dom;
  }
  if (type === "edit" || type === "update") {
    var _dom = (0, import_jsx_runtime15.jsx)(input_number_default, _objectSpread2(_objectSpread2({
      ref,
      min: 0,
      placeholder: placeholderValue
    }, es_default3(fieldProps, ["onChange", "onBlur"])), {}, {
      onChange: function onChange(e) {
        var _fieldProps$onChange;
        return fieldProps === null || fieldProps === void 0 || (_fieldProps$onChange = fieldProps.onChange) === null || _fieldProps$onChange === void 0 ? void 0 : _fieldProps$onChange.call(fieldProps, proxyChange(e));
      },
      onBlur: function onBlur(e) {
        var _fieldProps$onBlur;
        return fieldProps === null || fieldProps === void 0 || (_fieldProps$onBlur = fieldProps.onBlur) === null || _fieldProps$onBlur === void 0 ? void 0 : _fieldProps$onBlur.call(fieldProps, proxyChange(e.target.value));
      }
    }));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode: type
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Digit_default = import_react21.default.forwardRef(FieldDigit);

// node_modules/@ant-design/pro-field/es/components/DigitRange/index.js
var import_react22 = __toESM(require_react());
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var FieldDigitRange = function FieldDigitRange2(_ref, ref) {
  var text = _ref.text, type = _ref.mode, render3 = _ref.render, placeholder = _ref.placeholder, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, _ref$separator = _ref.separator, separator = _ref$separator === void 0 ? "~" : _ref$separator, _ref$separatorWidth = _ref.separatorWidth, separatorWidth = _ref$separatorWidth === void 0 ? 30 : _ref$separatorWidth;
  var value = fieldProps.value, defaultValue2 = fieldProps.defaultValue, onChange = fieldProps.onChange, id = fieldProps.id;
  var intl = useIntl();
  var _proTheme$useToken = proTheme.useToken(), token = _proTheme$useToken.token;
  var _useMergedState = useMergedState(function() {
    return defaultValue2;
  }, {
    value,
    onChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), valuePair = _useMergedState2[0], setValuePair = _useMergedState2[1];
  if (type === "read") {
    var getContent = function getContent2(number) {
      var _fieldProps$formatter;
      var digit = new Intl.NumberFormat(void 0, _objectSpread2({
        minimumSignificantDigits: 2
      }, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.intlProps) || {})).format(Number(number));
      return (fieldProps === null || fieldProps === void 0 || (_fieldProps$formatter = fieldProps.formatter) === null || _fieldProps$formatter === void 0 ? void 0 : _fieldProps$formatter.call(fieldProps, digit)) || digit;
    };
    var dom = (0, import_jsx_runtime16.jsxs)("span", {
      ref,
      children: [getContent(text[0]), " ", separator, " ", getContent(text[1])]
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode: type
      }, fieldProps), dom);
    }
    return dom;
  }
  if (type === "edit" || type === "update") {
    var handleGroupBlur = function handleGroupBlur2() {
      if (Array.isArray(valuePair)) {
        var _valuePair = _slicedToArray(valuePair, 2), value0 = _valuePair[0], value1 = _valuePair[1];
        if (typeof value0 === "number" && typeof value1 === "number" && value0 > value1) {
          setValuePair([value1, value0]);
        } else if (value0 === void 0 && value1 === void 0) {
          setValuePair(void 0);
        }
      }
    };
    var handleChange = function handleChange2(index, changedValue) {
      var newValuePair = _toConsumableArray(valuePair || []);
      newValuePair[index] = changedValue === null ? void 0 : changedValue;
      setValuePair(newValuePair);
    };
    var placeholderValue = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.placeholder) || placeholder || [intl.getMessage("tableForm.inputPlaceholder", "请输入"), intl.getMessage("tableForm.inputPlaceholder", "请输入")];
    var getInputNumberPlaceholder = function getInputNumberPlaceholder2(index) {
      return Array.isArray(placeholderValue) ? placeholderValue[index] : placeholderValue;
    };
    var Compact = space_default.Compact || input_default.Group;
    var compactProps = !!space_default.Compact ? {} : {
      compact: true
    };
    var _dom = (0, import_jsx_runtime16.jsxs)(Compact, _objectSpread2(_objectSpread2({}, compactProps), {}, {
      onBlur: handleGroupBlur,
      children: [(0, import_jsx_runtime17.jsx)(input_number_default, _objectSpread2(_objectSpread2({}, fieldProps), {}, {
        placeholder: getInputNumberPlaceholder(0),
        id: id !== null && id !== void 0 ? id : "".concat(id, "-0"),
        style: {
          width: "calc((100% - ".concat(separatorWidth, "px) / 2)")
        },
        value: valuePair === null || valuePair === void 0 ? void 0 : valuePair[0],
        defaultValue: defaultValue2 === null || defaultValue2 === void 0 ? void 0 : defaultValue2[0],
        onChange: function onChange2(changedValue) {
          return handleChange(0, changedValue);
        }
      })), (0, import_jsx_runtime17.jsx)(input_default, {
        style: {
          width: separatorWidth,
          textAlign: "center",
          borderInlineStart: 0,
          borderInlineEnd: 0,
          pointerEvents: "none",
          backgroundColor: token === null || token === void 0 ? void 0 : token.colorBgContainer
        },
        placeholder: separator,
        disabled: true
      }), (0, import_jsx_runtime17.jsx)(input_number_default, _objectSpread2(_objectSpread2({}, fieldProps), {}, {
        placeholder: getInputNumberPlaceholder(1),
        id: id !== null && id !== void 0 ? id : "".concat(id, "-1"),
        style: {
          width: "calc((100% - ".concat(separatorWidth, "px) / 2)"),
          borderInlineStart: 0
        },
        value: valuePair === null || valuePair === void 0 ? void 0 : valuePair[1],
        defaultValue: defaultValue2 === null || defaultValue2 === void 0 ? void 0 : defaultValue2[1],
        onChange: function onChange2(changedValue) {
          return handleChange(1, changedValue);
        }
      }))]
    }));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode: type
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var DigitRange_default = import_react22.default.forwardRef(FieldDigitRange);

// node_modules/@ant-design/pro-field/es/components/FromNow/index.js
var import_dayjs2 = __toESM(require_dayjs_min());
var import_relativeTime = __toESM(require_relativeTime());
var import_react23 = __toESM(require_react());
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
import_dayjs2.default.extend(import_relativeTime.default);
var FieldFromNow = function FieldFromNow2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, plain = _ref.plain, render3 = _ref.render, renderFormItem = _ref.renderFormItem, format = _ref.format, fieldProps = _ref.fieldProps;
  var intl = useIntl();
  if (mode === "read") {
    var dom = (0, import_jsx_runtime18.jsx)(tooltip_default, {
      title: (0, import_dayjs2.default)(text).format((fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || "YYYY-MM-DD HH:mm:ss"),
      children: (0, import_dayjs2.default)(text).fromNow()
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime18.jsx)(import_jsx_runtime19.Fragment, {
        children: dom
      }));
    }
    return (0, import_jsx_runtime18.jsx)(import_jsx_runtime19.Fragment, {
      children: dom
    });
  }
  if (mode === "edit" || mode === "update") {
    var placeholder = intl.getMessage("tableForm.selectPlaceholder", "请选择");
    var momentValue = parseValueToDay(fieldProps.value);
    var _dom = (0, import_jsx_runtime18.jsx)(date_picker_default, _objectSpread2(_objectSpread2(_objectSpread2({
      ref,
      placeholder,
      showTime: true
    }, compatibleBorder(plain === void 0 ? true : !plain)), fieldProps), {}, {
      value: momentValue
    }));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var FromNow_default = import_react23.default.forwardRef(FieldFromNow);

// node_modules/@ant-design/pro-field/es/components/Image/index.js
var import_react24 = __toESM(require_react());
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var FieldImage = import_react24.default.forwardRef(function(_ref, ref) {
  var text = _ref.text, type = _ref.mode, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, placeholder = _ref.placeholder, width = _ref.width;
  var intl = useIntl();
  var placeholderValue = placeholder || intl.getMessage("tableForm.inputPlaceholder", "请输入");
  if (type === "read") {
    var dom = (0, import_jsx_runtime20.jsx)(image_default, _objectSpread2({
      ref,
      width: width || 32,
      src: text
    }, fieldProps));
    if (render3) {
      return render3(text, _objectSpread2({
        mode: type
      }, fieldProps), dom);
    }
    return dom;
  }
  if (type === "edit" || type === "update") {
    var _dom = (0, import_jsx_runtime20.jsx)(input_default, _objectSpread2({
      ref,
      placeholder: placeholderValue
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode: type
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
});
var Image_default = FieldImage;

// node_modules/@ant-design/pro-field/es/components/IndexColumn/index.js
var import_classnames6 = __toESM(require_classnames());
var import_react25 = __toESM(require_react());
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var IndexColumn = function IndexColumn2(_ref, ref) {
  var _ref$border = _ref.border, border = _ref$border === void 0 ? false : _ref$border, children = _ref.children;
  var _useContext = (0, import_react25.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var className = getPrefixCls("pro-field-index-column");
  var _useStyle = useStyle("IndexColumn", function() {
    return _defineProperty({}, ".".concat(className), {
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      width: "18px",
      height: "18px",
      "&-border": {
        color: "#fff",
        fontSize: "12px",
        lineHeight: "12px",
        backgroundColor: "#314659",
        borderRadius: "9px",
        "&.top-three": {
          backgroundColor: "#979797"
        }
      }
    });
  }), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  return wrapSSR((0, import_jsx_runtime21.jsx)("div", {
    ref,
    className: (0, import_classnames6.default)(className, hashId, _defineProperty(_defineProperty({}, "".concat(className, "-border"), border), "top-three", children > 3)),
    children
  }));
};
var IndexColumn_default = import_react25.default.forwardRef(IndexColumn);

// node_modules/@ant-design/pro-field/es/components/Money/index.js
var import_react26 = __toESM(require_react());
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var _excluded7 = ["contentRender", "numberFormatOptions", "numberPopoverRender", "open"];
var _excluded25 = ["text", "mode", "render", "renderFormItem", "fieldProps", "proFieldKey", "plain", "valueEnum", "placeholder", "locale", "customSymbol", "numberFormatOptions", "numberPopoverRender"];
var defaultMoneyIntl = new Intl.NumberFormat("zh-Hans-CN", {
  currency: "CNY",
  style: "currency"
});
var enMoneyIntl = {
  style: "currency",
  currency: "USD"
};
var ruMoneyIntl = {
  style: "currency",
  currency: "RUB"
};
var rsMoneyIntl = {
  style: "currency",
  currency: "RSD"
};
var msMoneyIntl = {
  style: "currency",
  currency: "MYR"
};
var ptMoneyIntl = {
  style: "currency",
  currency: "BRL"
};
var intlMap2 = {
  default: defaultMoneyIntl,
  "zh-Hans-CN": {
    currency: "CNY",
    style: "currency"
  },
  "en-US": enMoneyIntl,
  "ru-RU": ruMoneyIntl,
  "ms-MY": msMoneyIntl,
  "sr-RS": rsMoneyIntl,
  "pt-BR": ptMoneyIntl
};
var getTextByLocale = function getTextByLocale2(locale, paramsText, precision, config) {
  var moneySymbol = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "";
  var moneyText = paramsText === null || paramsText === void 0 ? void 0 : paramsText.toString().replaceAll(",", "");
  if (typeof moneyText === "string") {
    var parsedNum = Number(moneyText);
    if (Number.isNaN(parsedNum)) return moneyText;
    moneyText = parsedNum;
  }
  if (!moneyText && moneyText !== 0) return "";
  var supportFormat = false;
  try {
    supportFormat = locale !== false && Intl.NumberFormat.supportedLocalesOf([locale.replace("_", "-")], {
      localeMatcher: "lookup"
    }).length > 0;
  } catch (error2) {
  }
  try {
    var initNumberFormatter = new Intl.NumberFormat(supportFormat && locale !== false ? (locale === null || locale === void 0 ? void 0 : locale.replace("_", "-")) || "zh-Hans-CN" : "zh-Hans-CN", _objectSpread2(_objectSpread2({}, intlMap2[locale || "zh-Hans-CN"] || defaultMoneyIntl), {}, {
      maximumFractionDigits: precision
    }, config));
    var finalMoneyText = initNumberFormatter.format(moneyText);
    var doubleSymbolFormat = function doubleSymbolFormat2(Text) {
      var match = Text.match(/\d+/);
      if (match) {
        var number = match[0];
        return Text.slice(Text.indexOf(number));
      } else {
        return Text;
      }
    };
    var pureMoneyText = doubleSymbolFormat(finalMoneyText);
    var _ref = finalMoneyText || "", _ref2 = _slicedToArray(_ref, 1), operatorSymbol = _ref2[0];
    if (["+", "-"].includes(operatorSymbol)) {
      return "".concat(moneySymbol || "").concat(operatorSymbol).concat(pureMoneyText);
    }
    return "".concat(moneySymbol || "").concat(pureMoneyText);
  } catch (error2) {
    return moneyText;
  }
};
var DefaultPrecisionCont = 2;
var InputNumberPopover = import_react26.default.forwardRef(function(_ref3, ref) {
  var content = _ref3.contentRender, numberFormatOptions = _ref3.numberFormatOptions, numberPopoverRender = _ref3.numberPopoverRender, open = _ref3.open, rest = _objectWithoutProperties(_ref3, _excluded7);
  var _useMergedState = useMergedState(function() {
    return rest.defaultValue;
  }, {
    value: rest.value,
    onChange: rest.onChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), value = _useMergedState2[0], onChange = _useMergedState2[1];
  var dom = content === null || content === void 0 ? void 0 : content(_objectSpread2(_objectSpread2({}, rest), {}, {
    value
  }));
  var props = openVisibleCompatible(dom ? open : false);
  return (0, import_jsx_runtime22.jsx)(popover_default, _objectSpread2(_objectSpread2({
    placement: "topLeft"
  }, props), {}, {
    trigger: ["focus", "click"],
    content: dom,
    getPopupContainer: function getPopupContainer(triggerNode) {
      return (triggerNode === null || triggerNode === void 0 ? void 0 : triggerNode.parentElement) || document.body;
    },
    children: (0, import_jsx_runtime22.jsx)(input_number_default, _objectSpread2(_objectSpread2({
      ref
    }, rest), {}, {
      value,
      onChange
    }))
  }));
});
var FieldMoney = function FieldMoney2(_ref4, ref) {
  var _fieldProps$precision;
  var text = _ref4.text, type = _ref4.mode, render3 = _ref4.render, renderFormItem = _ref4.renderFormItem, fieldProps = _ref4.fieldProps, proFieldKey = _ref4.proFieldKey, plain = _ref4.plain, valueEnum = _ref4.valueEnum, placeholder = _ref4.placeholder, locale = _ref4.locale, _ref4$customSymbol = _ref4.customSymbol, customSymbol = _ref4$customSymbol === void 0 ? fieldProps.customSymbol : _ref4$customSymbol, _ref4$numberFormatOpt = _ref4.numberFormatOptions, numberFormatOptions = _ref4$numberFormatOpt === void 0 ? fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.numberFormatOptions : _ref4$numberFormatOpt, _ref4$numberPopoverRe = _ref4.numberPopoverRender, numberPopoverRender = _ref4$numberPopoverRe === void 0 ? (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.numberPopoverRender) || false : _ref4$numberPopoverRe, rest = _objectWithoutProperties(_ref4, _excluded25);
  var precision = (_fieldProps$precision = fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.precision) !== null && _fieldProps$precision !== void 0 ? _fieldProps$precision : DefaultPrecisionCont;
  var intl = useIntl();
  if (locale && intlMap[locale]) {
    intl = intlMap[locale];
  }
  var placeholderValue = placeholder || intl.getMessage("tableForm.inputPlaceholder", "请输入");
  var moneySymbol = (0, import_react26.useMemo)(function() {
    if (customSymbol) {
      return customSymbol;
    }
    if (rest.moneySymbol === false || fieldProps.moneySymbol === false) {
      return void 0;
    }
    return intl.getMessage("moneySymbol", "¥");
  }, [customSymbol, fieldProps.moneySymbol, intl, rest.moneySymbol]);
  var getFormateValue = (0, import_react26.useCallback)(function(value) {
    var reg = new RegExp("\\B(?=(\\d{".concat(3 + Math.max(precision - DefaultPrecisionCont, 0), "})+(?!\\d))"), "g");
    var _String$split = String(value).split("."), _String$split2 = _slicedToArray(_String$split, 2), intStr = _String$split2[0], floatStr = _String$split2[1];
    var resultInt = intStr.replace(reg, ",");
    var resultFloat = "";
    if (floatStr && precision > 0) {
      resultFloat = ".".concat(floatStr.slice(0, precision === void 0 ? DefaultPrecisionCont : precision));
    }
    return "".concat(resultInt).concat(resultFloat);
  }, [precision]);
  if (type === "read") {
    var dom = (0, import_jsx_runtime22.jsx)("span", {
      ref,
      children: getTextByLocale(locale || false, text, precision, numberFormatOptions !== null && numberFormatOptions !== void 0 ? numberFormatOptions : fieldProps.numberFormatOptions, moneySymbol)
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode: type
      }, fieldProps), dom);
    }
    return dom;
  }
  if (type === "edit" || type === "update") {
    var _dom = (0, import_jsx_runtime22.jsx)(InputNumberPopover, _objectSpread2(_objectSpread2({
      contentRender: function contentRender(props) {
        if (numberPopoverRender === false) return null;
        if (!props.value) return null;
        var localeText = getTextByLocale(moneySymbol || locale || false, "".concat(getFormateValue(props.value)), precision, _objectSpread2(_objectSpread2({}, numberFormatOptions), {}, {
          notation: "compact"
        }), moneySymbol);
        if (typeof numberPopoverRender === "function") {
          return numberPopoverRender === null || numberPopoverRender === void 0 ? void 0 : numberPopoverRender(props, localeText);
        }
        return localeText;
      },
      ref,
      precision,
      formatter: function formatter(value) {
        if (value && moneySymbol) {
          return "".concat(moneySymbol, " ").concat(getFormateValue(value));
        }
        return value === null || value === void 0 ? void 0 : value.toString();
      },
      parser: function parser(value) {
        if (moneySymbol && value) {
          return value.replace(new RegExp("\\".concat(moneySymbol, "\\s?|(,*)"), "g"), "");
        }
        return value;
      },
      placeholder: placeholderValue
    }, es_default3(fieldProps, ["numberFormatOptions", "precision", "numberPopoverRender", "customSymbol", "moneySymbol", "visible", "open"])), {}, {
      onBlur: fieldProps.onBlur ? function(e) {
        var _fieldProps$onBlur;
        var value = e.target.value;
        if (moneySymbol && value) {
          value = value.replace(new RegExp("\\".concat(moneySymbol, "\\s?|(,*)"), "g"), "");
        }
        (_fieldProps$onBlur = fieldProps.onBlur) === null || _fieldProps$onBlur === void 0 || _fieldProps$onBlur.call(fieldProps, value);
      } : void 0
    }));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode: type
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Money_default = import_react26.default.forwardRef(FieldMoney);

// node_modules/@ant-design/pro-field/es/components/Options/index.js
var import_react27 = __toESM(require_react());
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var addArrayKeys = function addArrayKeys2(doms) {
  return doms.map(function(dom, index) {
    var _dom$props;
    if (!import_react27.default.isValidElement(dom)) {
      return (0, import_jsx_runtime23.jsx)(import_react27.default.Fragment, {
        children: dom
      }, index);
    }
    return import_react27.default.cloneElement(dom, _objectSpread2(_objectSpread2({
      // eslint-disable-next-line react/no-array-index-key
      key: index
    }, dom === null || dom === void 0 ? void 0 : dom.props), {}, {
      style: _objectSpread2({}, dom === null || dom === void 0 || (_dom$props = dom.props) === null || _dom$props === void 0 ? void 0 : _dom$props.style)
    }));
  });
};
var FieldOptions = function FieldOptions2(_ref, ref) {
  var text = _ref.text, type = _ref.mode, render3 = _ref.render, fieldProps = _ref.fieldProps;
  var _useContext = (0, import_react27.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var className = getPrefixCls("pro-field-option");
  var _proTheme$useToken = proTheme.useToken(), token = _proTheme$useToken.token;
  (0, import_react27.useImperativeHandle)(ref, function() {
    return {};
  });
  if (render3) {
    var doms = render3(text, _objectSpread2({
      mode: type
    }, fieldProps), (0, import_jsx_runtime23.jsx)(import_jsx_runtime24.Fragment, {}));
    if (!doms || (doms === null || doms === void 0 ? void 0 : doms.length) < 1 || !Array.isArray(doms)) {
      return null;
    }
    return (0, import_jsx_runtime23.jsx)("div", {
      style: {
        display: "flex",
        gap: token.margin,
        alignItems: "center"
      },
      className,
      children: addArrayKeys(doms)
    });
  }
  if (!text || !Array.isArray(text)) {
    if (!import_react27.default.isValidElement(text)) {
      return null;
    }
    return text;
  }
  return (0, import_jsx_runtime23.jsx)("div", {
    style: {
      display: "flex",
      gap: token.margin,
      alignItems: "center"
    },
    className,
    children: addArrayKeys(text)
  });
};
var Options_default = import_react27.default.forwardRef(FieldOptions);

// node_modules/@ant-design/pro-field/es/components/Password/index.js
var import_react28 = __toESM(require_react());
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var _excluded8 = ["text", "mode", "render", "renderFormItem", "fieldProps", "proFieldKey"];
var FieldPassword = function FieldPassword2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, proFieldKey = _ref.proFieldKey, rest = _objectWithoutProperties(_ref, _excluded8);
  var intl = useIntl();
  var _useMergedState = useMergedState(function() {
    return rest.open || rest.visible || false;
  }, {
    value: rest.open || rest.visible,
    onChange: rest.onOpenChange || rest.onVisible
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), open = _useMergedState2[0], setOpen = _useMergedState2[1];
  if (mode === "read") {
    var dom = (0, import_jsx_runtime26.jsx)(import_jsx_runtime25.Fragment, {
      children: "-"
    });
    if (text) {
      dom = (0, import_jsx_runtime27.jsxs)(space_default, {
        children: [(0, import_jsx_runtime26.jsx)("span", {
          ref,
          children: open ? text : "********"
        }), (0, import_jsx_runtime26.jsx)("a", {
          onClick: function onClick() {
            return setOpen(!open);
          },
          children: open ? (0, import_jsx_runtime26.jsx)(EyeOutlined_default, {}) : (0, import_jsx_runtime26.jsx)(EyeInvisibleOutlined_default, {})
        })]
      });
    }
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), dom);
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var _dom = (0, import_jsx_runtime26.jsx)(input_default.Password, _objectSpread2({
      placeholder: intl.getMessage("tableForm.inputPlaceholder", "请输入"),
      ref
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Password_default = import_react28.default.forwardRef(FieldPassword);

// node_modules/@ant-design/pro-field/es/components/Percent/index.js
var import_react29 = __toESM(require_react());

// node_modules/@ant-design/pro-field/es/components/Percent/util.js
function getSymbolByRealValue(realValue) {
  if (realValue === 0) {
    return null;
  }
  if (realValue > 0) {
    return "+";
  }
  return "-";
}
function getColorByRealValue(realValue) {
  if (realValue === 0) {
    return "#595959";
  }
  return realValue > 0 ? "#ff4d4f" : "#52c41a";
}
function getRealTextWithPrecision(realValue) {
  var precision = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
  return precision >= 0 ? realValue === null || realValue === void 0 ? void 0 : realValue.toFixed(precision) : realValue;
}

// node_modules/@ant-design/pro-field/es/components/Percent/index.js
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var FieldPercent = function FieldPercent2(_ref, ref) {
  var text = _ref.text, prefix = _ref.prefix, precision = _ref.precision, _ref$suffix = _ref.suffix, suffix = _ref$suffix === void 0 ? "%" : _ref$suffix, mode = _ref.mode, _ref$showColor = _ref.showColor, showColor = _ref$showColor === void 0 ? false : _ref$showColor, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, placeholder = _ref.placeholder, propsShowSymbol = _ref.showSymbol;
  var intl = useIntl();
  var placeholderValue = placeholder || intl.getMessage("tableForm.inputPlaceholder", "请输入");
  var realValue = (0, import_react29.useMemo)(function() {
    return typeof text === "string" && text.includes("%") ? toNumber_default(text.replace("%", "")) : toNumber_default(text);
  }, [text]);
  var showSymbol = (0, import_react29.useMemo)(function() {
    if (typeof propsShowSymbol === "function") {
      return propsShowSymbol === null || propsShowSymbol === void 0 ? void 0 : propsShowSymbol(text);
    }
    return propsShowSymbol;
  }, [propsShowSymbol, text]);
  if (mode === "read") {
    var style = showColor ? {
      color: getColorByRealValue(realValue)
    } : {};
    var dom = (0, import_jsx_runtime29.jsxs)("span", {
      style,
      ref,
      children: [prefix && (0, import_jsx_runtime28.jsx)("span", {
        children: prefix
      }), showSymbol && (0, import_jsx_runtime29.jsxs)(import_react29.Fragment, {
        children: [getSymbolByRealValue(realValue), " "]
      }), getRealTextWithPrecision(Math.abs(realValue), precision), suffix && suffix]
    });
    if (render3) {
      return render3(text, _objectSpread2(_objectSpread2({
        mode
      }, fieldProps), {}, {
        prefix,
        precision,
        showSymbol,
        suffix
      }), dom);
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var _dom = (0, import_jsx_runtime28.jsx)(input_number_default, _objectSpread2({
      ref,
      formatter: function formatter(value) {
        if (value && prefix) {
          return "".concat(prefix, " ").concat(value).replace(/\B(?=(\d{3})+(?!\d)$)/g, ",");
        }
        return value;
      },
      parser: function parser(value) {
        return value ? value.replace(/.*\s|,/g, "") : "";
      },
      placeholder: placeholderValue
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Percent_default = import_react29.default.forwardRef(FieldPercent);

// node_modules/@ant-design/pro-field/es/components/Progress/index.js
var import_react30 = __toESM(require_react());
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
function getProgressStatus(text) {
  if (text === 100) {
    return "success";
  }
  if (text < 0) {
    return "exception";
  }
  if (text < 100) {
    return "active";
  }
  return "normal";
}
var FieldProgress = function FieldProgress2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, render3 = _ref.render, plain = _ref.plain, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, placeholder = _ref.placeholder;
  var intl = useIntl();
  var placeholderValue = placeholder || intl.getMessage("tableForm.inputPlaceholder", "请输入");
  var realValue = (0, import_react30.useMemo)(function() {
    return typeof text === "string" && text.includes("%") ? toNumber_default(text.replace("%", "")) : toNumber_default(text);
  }, [text]);
  if (mode === "read") {
    var dom = (0, import_jsx_runtime30.jsx)(progress_default, _objectSpread2({
      ref,
      size: "small",
      style: {
        minWidth: 100,
        maxWidth: 320
      },
      percent: realValue,
      steps: plain ? 10 : void 0,
      status: getProgressStatus(realValue)
    }, fieldProps));
    if (render3) {
      return render3(realValue, _objectSpread2({
        mode
      }, fieldProps), dom);
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var _dom = (0, import_jsx_runtime30.jsx)(input_number_default, _objectSpread2({
      ref,
      placeholder: placeholderValue
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Progress_default = import_react30.default.forwardRef(FieldProgress);

// node_modules/@ant-design/pro-field/es/components/Radio/index.js
var import_classnames7 = __toESM(require_classnames());
var import_react31 = __toESM(require_react());
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var _excluded9 = ["radioType", "renderFormItem", "mode", "render"];
var FieldRadio = function FieldRadio2(_ref, ref) {
  var _Form$Item, _Form$Item$useStatus;
  var radioType = _ref.radioType, renderFormItem = _ref.renderFormItem, mode = _ref.mode, render3 = _ref.render, rest = _objectWithoutProperties(_ref, _excluded9);
  var _useContext = (0, import_react31.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var layoutClassName = getPrefixCls("pro-field-radio");
  var _useFieldFetchData = useFieldFetchData(rest), _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3), loading = _useFieldFetchData2[0], options = _useFieldFetchData2[1], _fetchData = _useFieldFetchData2[2];
  var radioRef = (0, import_react31.useRef)();
  var status = (_Form$Item = form_default.Item) === null || _Form$Item === void 0 || (_Form$Item$useStatus = _Form$Item.useStatus) === null || _Form$Item$useStatus === void 0 ? void 0 : _Form$Item$useStatus.call(_Form$Item);
  (0, import_react31.useImperativeHandle)(ref, function() {
    return _objectSpread2(_objectSpread2({}, radioRef.current || {}), {}, {
      fetchData: function fetchData(keyWord) {
        return _fetchData(keyWord);
      }
    });
  }, [_fetchData]);
  var _useStyle = useStyle("FieldRadioRadio", function(token) {
    return _defineProperty(_defineProperty(_defineProperty({}, ".".concat(layoutClassName, "-error"), {
      span: {
        color: token.colorError
      }
    }), ".".concat(layoutClassName, "-warning"), {
      span: {
        color: token.colorWarning
      }
    }), ".".concat(layoutClassName, "-vertical"), _defineProperty({}, "".concat(token.antCls, "-radio-wrapper"), {
      display: "flex",
      marginInlineEnd: 0
    }));
  }), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  if (loading) {
    return (0, import_jsx_runtime31.jsx)(spin_default, {
      size: "small"
    });
  }
  if (mode === "read") {
    var optionsValueEnum = options !== null && options !== void 0 && options.length ? options === null || options === void 0 ? void 0 : options.reduce(function(pre, cur) {
      var _ref3;
      return _objectSpread2(_objectSpread2({}, pre), {}, _defineProperty({}, (_ref3 = cur.value) !== null && _ref3 !== void 0 ? _ref3 : "", cur.label));
    }, {}) : void 0;
    var dom = (0, import_jsx_runtime31.jsx)(import_jsx_runtime32.Fragment, {
      children: proFieldParsingText(rest.text, objectToMap(rest.valueEnum || optionsValueEnum))
    });
    if (render3) {
      var _render;
      return (_render = render3(rest.text, _objectSpread2({
        mode
      }, rest.fieldProps), dom)) !== null && _render !== void 0 ? _render : null;
    }
    return dom;
  }
  if (mode === "edit") {
    var _rest$fieldProps;
    var _dom = wrapSSR((0, import_jsx_runtime31.jsx)(radio_default.Group, _objectSpread2(_objectSpread2({
      ref: radioRef,
      optionType: radioType
    }, rest.fieldProps), {}, {
      className: (0, import_classnames7.default)((_rest$fieldProps = rest.fieldProps) === null || _rest$fieldProps === void 0 ? void 0 : _rest$fieldProps.className, _defineProperty(_defineProperty({}, "".concat(layoutClassName, "-error"), (status === null || status === void 0 ? void 0 : status.status) === "error"), "".concat(layoutClassName, "-warning"), (status === null || status === void 0 ? void 0 : status.status) === "warning"), hashId, "".concat(layoutClassName, "-").concat(rest.fieldProps.layout || "horizontal")),
      options
    })));
    if (renderFormItem) {
      var _renderFormItem;
      return (_renderFormItem = renderFormItem(rest.text, _objectSpread2(_objectSpread2({
        mode
      }, rest.fieldProps), {}, {
        options,
        loading
      }), _dom)) !== null && _renderFormItem !== void 0 ? _renderFormItem : null;
    }
    return _dom;
  }
  return null;
};
var Radio_default = import_react31.default.forwardRef(FieldRadio);

// node_modules/@ant-design/pro-field/es/components/RangePicker/index.js
var import_dayjs3 = __toESM(require_dayjs_min());
var import_react32 = __toESM(require_react());
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
var FieldRangePicker = function FieldRangePicker2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, light = _ref.light, label = _ref.label, format = _ref.format, render3 = _ref.render, picker = _ref.picker, renderFormItem = _ref.renderFormItem, plain = _ref.plain, showTime = _ref.showTime, lightLabel = _ref.lightLabel, bordered = _ref.bordered, fieldProps = _ref.fieldProps;
  var intl = useIntl();
  var _ref2 = Array.isArray(text) ? text : [], _ref3 = _slicedToArray(_ref2, 2), startText = _ref3[0], endText = _ref3[1];
  var _React$useState = import_react32.default.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), open = _React$useState2[0], setOpen = _React$useState2[1];
  var genFormatText = (0, import_react32.useCallback)(function(formatValue) {
    if (typeof (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) === "function") {
      var _fieldProps$format;
      return fieldProps === null || fieldProps === void 0 || (_fieldProps$format = fieldProps.format) === null || _fieldProps$format === void 0 ? void 0 : _fieldProps$format.call(fieldProps, formatValue);
    }
    return (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || "YYYY-MM-DD";
  }, [fieldProps, format]);
  var parsedStartText = startText ? (0, import_dayjs3.default)(startText).format(genFormatText((0, import_dayjs3.default)(startText))) : "";
  var parsedEndText = endText ? (0, import_dayjs3.default)(endText).format(genFormatText((0, import_dayjs3.default)(endText))) : "";
  if (mode === "read") {
    var dom = (0, import_jsx_runtime34.jsxs)("div", {
      ref,
      style: {
        display: "flex",
        flexWrap: "wrap",
        gap: 8,
        alignItems: "center"
      },
      children: [(0, import_jsx_runtime33.jsx)("div", {
        children: parsedStartText || "-"
      }), (0, import_jsx_runtime33.jsx)("div", {
        children: parsedEndText || "-"
      })]
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime33.jsx)("span", {
        children: dom
      }));
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var dayValue = parseValueToDay(fieldProps.value);
    var _dom;
    if (light) {
      var _fieldProps$placehold;
      _dom = (0, import_jsx_runtime33.jsx)(FieldLabel, {
        label,
        onClick: function onClick() {
          var _fieldProps$onOpenCha;
          fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha === void 0 || _fieldProps$onOpenCha.call(fieldProps, true);
          setOpen(true);
        },
        style: dayValue ? {
          paddingInlineEnd: 0
        } : void 0,
        disabled: fieldProps.disabled,
        value: dayValue || open ? (0, import_jsx_runtime33.jsx)(date_picker_default.RangePicker, _objectSpread2(_objectSpread2(_objectSpread2({
          picker,
          showTime,
          format
        }, compatibleBorder(false)), fieldProps), {}, {
          placeholder: (_fieldProps$placehold = fieldProps.placeholder) !== null && _fieldProps$placehold !== void 0 ? _fieldProps$placehold : [intl.getMessage("tableForm.selectPlaceholder", "请选择"), intl.getMessage("tableForm.selectPlaceholder", "请选择")],
          onClear: function onClear() {
            var _fieldProps$onClear;
            setOpen(false);
            fieldProps === null || fieldProps === void 0 || (_fieldProps$onClear = fieldProps.onClear) === null || _fieldProps$onClear === void 0 || _fieldProps$onClear.call(fieldProps);
          },
          value: dayValue,
          onOpenChange: function onOpenChange(isOpen) {
            var _fieldProps$onOpenCha2;
            if (dayValue) setOpen(isOpen);
            fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha2 = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha2 === void 0 || _fieldProps$onOpenCha2.call(fieldProps, isOpen);
          }
        })) : null,
        allowClear: false,
        bordered,
        ref: lightLabel,
        downIcon: dayValue || open ? false : void 0
      });
    } else {
      _dom = (0, import_jsx_runtime33.jsx)(date_picker_default.RangePicker, _objectSpread2(_objectSpread2(_objectSpread2({
        ref,
        format,
        showTime,
        placeholder: [intl.getMessage("tableForm.selectPlaceholder", "请选择"), intl.getMessage("tableForm.selectPlaceholder", "请选择")]
      }, compatibleBorder(plain === void 0 ? true : !plain)), fieldProps), {}, {
        value: dayValue
      }));
    }
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var RangePicker_default = import_react32.default.forwardRef(FieldRangePicker);

// node_modules/@ant-design/pro-field/es/components/Rate/index.js
var import_react33 = __toESM(require_react());
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
var FieldRate = function FieldRate2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps;
  if (mode === "read") {
    var dom = (0, import_jsx_runtime35.jsx)(rate_default, _objectSpread2(_objectSpread2({
      allowHalf: true,
      disabled: true,
      ref
    }, fieldProps), {}, {
      value: text
    }));
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime35.jsx)(import_jsx_runtime36.Fragment, {
        children: dom
      }));
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var _dom = (0, import_jsx_runtime35.jsx)(rate_default, _objectSpread2({
      allowHalf: true,
      ref
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Rate_default = import_react33.default.forwardRef(FieldRate);

// node_modules/@ant-design/pro-field/es/components/Second/index.js
var import_react34 = __toESM(require_react());
var import_jsx_runtime37 = __toESM(require_jsx_runtime());
function formatSecond(result) {
  var newResult = result;
  var formatText = "";
  var past = false;
  if (newResult < 0) {
    newResult = -newResult;
    past = true;
  }
  var d = Math.floor(newResult / (3600 * 24));
  var h = Math.floor(newResult / 3600 % 24);
  var m = Math.floor(newResult / 60 % 60);
  var s = Math.floor(newResult % 60);
  formatText = "".concat(s, "秒");
  if (m > 0) {
    formatText = "".concat(m, "分钟").concat(formatText);
  }
  if (h > 0) {
    formatText = "".concat(h, "小时").concat(formatText);
  }
  if (d > 0) {
    formatText = "".concat(d, "天").concat(formatText);
  }
  if (past) {
    formatText += "前";
  }
  return formatText;
}
var Second = function Second2(_ref, ref) {
  var text = _ref.text, type = _ref.mode, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, placeholder = _ref.placeholder;
  var intl = useIntl();
  var placeholderValue = placeholder || intl.getMessage("tableForm.inputPlaceholder", "请输入");
  if (type === "read") {
    var secondText = formatSecond(Number(text));
    var dom = (0, import_jsx_runtime37.jsx)("span", {
      ref,
      children: secondText
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode: type
      }, fieldProps), dom);
    }
    return dom;
  }
  if (type === "edit" || type === "update") {
    var _dom = (0, import_jsx_runtime37.jsx)(input_number_default, _objectSpread2({
      ref,
      min: 0,
      style: {
        width: "100%"
      },
      placeholder: placeholderValue
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode: type
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Second_default = import_react34.default.forwardRef(Second);

// node_modules/@ant-design/pro-field/es/components/Segmented/index.js
var import_react35 = __toESM(require_react());
var import_jsx_runtime38 = __toESM(require_jsx_runtime());
var import_jsx_runtime39 = __toESM(require_jsx_runtime());
var _excluded10 = ["mode", "render", "renderFormItem", "fieldProps", "emptyText"];
var FieldSegmented = function FieldSegmented2(props, ref) {
  var mode = props.mode, render3 = props.render, renderFormItem = props.renderFormItem, fieldProps = props.fieldProps, _props$emptyText = props.emptyText, emptyText = _props$emptyText === void 0 ? "-" : _props$emptyText, rest = _objectWithoutProperties(props, _excluded10);
  var inputRef = (0, import_react35.useRef)();
  var _useFieldFetchData = useFieldFetchData(props), _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3), loading = _useFieldFetchData2[0], options = _useFieldFetchData2[1], _fetchData = _useFieldFetchData2[2];
  (0, import_react35.useImperativeHandle)(ref, function() {
    return _objectSpread2(_objectSpread2({}, inputRef.current || {}), {}, {
      fetchData: function fetchData(keyWord) {
        return _fetchData(keyWord);
      }
    });
  }, [_fetchData]);
  if (loading) {
    return (0, import_jsx_runtime38.jsx)(spin_default, {
      size: "small"
    });
  }
  if (mode === "read") {
    var optionsValueEnum = options !== null && options !== void 0 && options.length ? options === null || options === void 0 ? void 0 : options.reduce(function(pre, cur) {
      var _ref;
      return _objectSpread2(_objectSpread2({}, pre), {}, _defineProperty({}, (_ref = cur.value) !== null && _ref !== void 0 ? _ref : "", cur.label));
    }, {}) : void 0;
    var dom = (0, import_jsx_runtime38.jsx)(import_jsx_runtime39.Fragment, {
      children: proFieldParsingText(rest.text, objectToMap(rest.valueEnum || optionsValueEnum))
    });
    if (render3) {
      var _render;
      return (_render = render3(rest.text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime38.jsx)(import_jsx_runtime39.Fragment, {
        children: dom
      }))) !== null && _render !== void 0 ? _render : emptyText;
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var _dom = (0, import_jsx_runtime38.jsx)(segmented_default, _objectSpread2(_objectSpread2({
      ref: inputRef
    }, es_default3(fieldProps || {}, ["allowClear"])), {}, {
      options
    }));
    if (renderFormItem) {
      return renderFormItem(rest.text, _objectSpread2(_objectSpread2({
        mode
      }, fieldProps), {}, {
        options,
        loading
      }), _dom);
    }
    return _dom;
  }
  return null;
};
var Segmented_default = import_react35.default.forwardRef(FieldSegmented);

// node_modules/@ant-design/pro-field/es/components/Slider/index.js
var import_react36 = __toESM(require_react());
var import_jsx_runtime40 = __toESM(require_jsx_runtime());
var import_jsx_runtime41 = __toESM(require_jsx_runtime());
var FieldSlider = function FieldSlider2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps;
  if (mode === "read") {
    var dom = text;
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime41.jsx)(import_jsx_runtime40.Fragment, {
        children: dom
      }));
    }
    return (0, import_jsx_runtime41.jsx)(import_jsx_runtime40.Fragment, {
      children: dom
    });
  }
  if (mode === "edit" || mode === "update") {
    var _dom = (0, import_jsx_runtime41.jsx)(slider_default, _objectSpread2(_objectSpread2({
      ref
    }, fieldProps), {}, {
      style: _objectSpread2({
        minWidth: 120
      }, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.style)
    }));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Slider_default = import_react36.default.forwardRef(FieldSlider);

// node_modules/@ant-design/pro-field/es/components/Status/index.js
var import_react37 = __toESM(require_react());
var import_jsx_runtime42 = __toESM(require_jsx_runtime());
var Status = {
  Success: function Success(_ref) {
    var children = _ref.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "success",
      text: children
    });
  },
  Error: function Error2(_ref2) {
    var children = _ref2.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "error",
      text: children
    });
  },
  Default: function Default(_ref3) {
    var children = _ref3.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "default",
      text: children
    });
  },
  Processing: function Processing(_ref4) {
    var children = _ref4.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "processing",
      text: children
    });
  },
  Warning: function Warning(_ref5) {
    var children = _ref5.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "warning",
      text: children
    });
  },
  success: function success(_ref6) {
    var children = _ref6.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "success",
      text: children
    });
  },
  error: function error(_ref7) {
    var children = _ref7.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "error",
      text: children
    });
  },
  default: function _default(_ref8) {
    var children = _ref8.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "default",
      text: children
    });
  },
  processing: function processing(_ref9) {
    var children = _ref9.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "processing",
      text: children
    });
  },
  warning: function warning(_ref10) {
    var children = _ref10.children;
    return (0, import_jsx_runtime42.jsx)(badge_default, {
      status: "warning",
      text: children
    });
  }
};
var Status_default = Status;

// node_modules/@ant-design/pro-field/es/components/Switch/index.js
var import_react38 = __toESM(require_react());
var import_jsx_runtime43 = __toESM(require_jsx_runtime());
var import_jsx_runtime44 = __toESM(require_jsx_runtime());
var FieldSwitch = function FieldSwitch2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, render3 = _ref.render, light = _ref.light, label = _ref.label, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps;
  var intl = useIntl();
  var dom = (0, import_react38.useMemo)(function() {
    var _fieldProps$checkedCh, _fieldProps$unChecked;
    if (text === void 0 || text === null || "".concat(text).length < 1) return "-";
    return text ? (_fieldProps$checkedCh = fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.checkedChildren) !== null && _fieldProps$checkedCh !== void 0 ? _fieldProps$checkedCh : intl.getMessage("switch.open", "打开") : (_fieldProps$unChecked = fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.unCheckedChildren) !== null && _fieldProps$unChecked !== void 0 ? _fieldProps$unChecked : intl.getMessage("switch.close", "关闭");
  }, [fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.checkedChildren, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.unCheckedChildren, text]);
  if (mode === "read") {
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime44.jsx)(import_jsx_runtime43.Fragment, {
        children: dom
      }));
    }
    return dom !== null && dom !== void 0 ? dom : "-";
  }
  if (mode === "edit" || mode === "update") {
    var _fieldProps$checked;
    var editDom = (0, import_jsx_runtime44.jsx)(switch_default, _objectSpread2(_objectSpread2({
      ref,
      size: light ? "small" : void 0
    }, es_default3(fieldProps, ["value"])), {}, {
      checked: (_fieldProps$checked = fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.checked) !== null && _fieldProps$checked !== void 0 ? _fieldProps$checked : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.value
    }));
    if (light) {
      var disabled = fieldProps.disabled, bordered = fieldProps.bordered;
      return (0, import_jsx_runtime44.jsx)(FieldLabel, {
        label,
        disabled,
        bordered,
        downIcon: false,
        value: (0, import_jsx_runtime44.jsx)("div", {
          style: {
            paddingLeft: 8
          },
          children: editDom
        }),
        allowClear: false
      });
    }
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), editDom);
    }
    return editDom;
  }
  return null;
};
var Switch_default = import_react38.default.forwardRef(FieldSwitch);

// node_modules/@ant-design/pro-field/es/components/Text/index.js
var import_react39 = __toESM(require_react());
var import_jsx_runtime45 = __toESM(require_jsx_runtime());
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var FieldText = function FieldText2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, render3 = _ref.render, renderFormItem = _ref.renderFormItem, fieldProps = _ref.fieldProps, _ref$emptyText = _ref.emptyText, emptyText = _ref$emptyText === void 0 ? "-" : _ref$emptyText;
  var _ref2 = fieldProps || {}, autoFocus = _ref2.autoFocus, _ref2$prefix = _ref2.prefix, prefix = _ref2$prefix === void 0 ? "" : _ref2$prefix, _ref2$suffix = _ref2.suffix, suffix = _ref2$suffix === void 0 ? "" : _ref2$suffix;
  var intl = useIntl();
  var inputRef = (0, import_react39.useRef)();
  (0, import_react39.useImperativeHandle)(ref, function() {
    return inputRef.current;
  }, []);
  (0, import_react39.useEffect)(function() {
    if (autoFocus) {
      var _inputRef$current;
      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 || _inputRef$current.focus();
    }
  }, [autoFocus]);
  if (mode === "read") {
    var dom = (0, import_jsx_runtime46.jsxs)(import_jsx_runtime45.Fragment, {
      children: [prefix, text !== null && text !== void 0 ? text : emptyText, suffix]
    });
    if (render3) {
      var _render;
      return (_render = render3(text, _objectSpread2({
        mode
      }, fieldProps), dom)) !== null && _render !== void 0 ? _render : emptyText;
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var placeholder = intl.getMessage("tableForm.inputPlaceholder", "请输入");
    var _dom = (0, import_jsx_runtime47.jsx)(input_default, _objectSpread2({
      ref: inputRef,
      placeholder,
      allowClear: true
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var Text_default = import_react39.default.forwardRef(FieldText);

// node_modules/@ant-design/pro-field/es/components/TextArea/index.js
var import_react41 = __toESM(require_react());

// node_modules/@ant-design/pro-field/es/components/TextArea/readonly.js
var import_classnames8 = __toESM(require_classnames());
var import_react40 = __toESM(require_react());
var import_jsx_runtime48 = __toESM(require_jsx_runtime());
var FieldTextAreaReadonly = function FieldTextAreaReadonly2(_ref, ref) {
  var text = _ref.text, fieldProps = _ref.fieldProps;
  var _useContext = (0, import_react40.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var readonlyClassName = getPrefixCls("pro-field-readonly");
  var compClassName = "".concat(readonlyClassName, "-textarea");
  var _useStyle = useStyle("TextArea", function() {
    return _defineProperty({}, ".".concat(compClassName), {
      display: "inline-block",
      lineHeight: "1.5715",
      maxWidth: "100%",
      whiteSpace: "pre-wrap"
    });
  }), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  return wrapSSR((0, import_jsx_runtime48.jsx)("span", _objectSpread2(_objectSpread2({
    ref,
    className: (0, import_classnames8.default)(hashId, readonlyClassName, compClassName)
  }, omit_default(fieldProps, ["autoSize", "classNames", "styles"])), {}, {
    children: text !== null && text !== void 0 ? text : "-"
  })));
};
var readonly_default = import_react40.default.forwardRef(FieldTextAreaReadonly);

// node_modules/@ant-design/pro-field/es/components/TextArea/index.js
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
var FieldTextArea = function FieldTextArea2(props, ref) {
  var text = props.text, mode = props.mode, render3 = props.render, renderFormItem = props.renderFormItem, fieldProps = props.fieldProps;
  var intl = useIntl();
  if (mode === "read") {
    var dom = (0, import_jsx_runtime49.jsx)(readonly_default, _objectSpread2(_objectSpread2({}, props), {}, {
      ref
    }));
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), dom);
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var _dom = (0, import_jsx_runtime49.jsx)(input_default.TextArea, _objectSpread2({
      ref,
      rows: 3,
      onKeyPress: function onKeyPress(e) {
        if (e.key === "Enter") e.stopPropagation();
      },
      placeholder: intl.getMessage("tableForm.inputPlaceholder", "请输入")
    }, fieldProps));
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var TextArea_default = import_react41.default.forwardRef(FieldTextArea);

// node_modules/@ant-design/pro-field/es/components/TimePicker/index.js
var import_dayjs4 = __toESM(require_dayjs_min());
var import_react42 = __toESM(require_react());
var import_jsx_runtime50 = __toESM(require_jsx_runtime());
var import_jsx_runtime51 = __toESM(require_jsx_runtime());
var FieldTimePicker = function FieldTimePicker2(_ref, ref) {
  var text = _ref.text, mode = _ref.mode, light = _ref.light, label = _ref.label, format = _ref.format, render3 = _ref.render, renderFormItem = _ref.renderFormItem, plain = _ref.plain, fieldProps = _ref.fieldProps, lightLabel = _ref.lightLabel;
  var _useState = (0, import_react42.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  var intl = useIntl();
  var finalFormat = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || "HH:mm:ss";
  var isNumberOrMoment = import_dayjs4.default.isDayjs(text) || typeof text === "number";
  if (mode === "read") {
    var dom = (0, import_jsx_runtime50.jsx)("span", {
      ref,
      children: text ? (0, import_dayjs4.default)(text, isNumberOrMoment ? void 0 : finalFormat).format(finalFormat) : "-"
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime50.jsx)("span", {
        children: dom
      }));
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var _dom;
    var disabled = fieldProps.disabled, value = fieldProps.value;
    var dayValue = parseValueToDay(value, finalFormat);
    if (light) {
      var _fieldProps$placehold;
      _dom = (0, import_jsx_runtime50.jsx)(FieldLabel, {
        onClick: function onClick() {
          var _fieldProps$onOpenCha;
          fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha === void 0 || _fieldProps$onOpenCha.call(fieldProps, true);
          setOpen(true);
        },
        style: dayValue ? {
          paddingInlineEnd: 0
        } : void 0,
        label,
        disabled,
        value: dayValue || open ? (0, import_jsx_runtime50.jsx)(time_picker_default, _objectSpread2(_objectSpread2(_objectSpread2({}, compatibleBorder(false)), {}, {
          format,
          ref
        }, fieldProps), {}, {
          placeholder: (_fieldProps$placehold = fieldProps.placeholder) !== null && _fieldProps$placehold !== void 0 ? _fieldProps$placehold : intl.getMessage("tableForm.selectPlaceholder", "请选择"),
          value: dayValue,
          onOpenChange: function onOpenChange(isOpen) {
            var _fieldProps$onOpenCha2;
            setOpen(isOpen);
            fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha2 = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha2 === void 0 || _fieldProps$onOpenCha2.call(fieldProps, isOpen);
          },
          open
        })) : null,
        downIcon: dayValue || open ? false : void 0,
        allowClear: false,
        ref: lightLabel
      });
    } else {
      _dom = (0, import_jsx_runtime50.jsx)(date_picker_default.TimePicker, _objectSpread2(_objectSpread2(_objectSpread2({
        ref,
        format
      }, compatibleBorder(plain === void 0 ? true : !plain)), fieldProps), {}, {
        value: dayValue
      }));
    }
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom);
    }
    return _dom;
  }
  return null;
};
var FieldTimeRangePickerComponents = function FieldTimeRangePickerComponents2(_ref2, ref) {
  var text = _ref2.text, light = _ref2.light, label = _ref2.label, mode = _ref2.mode, lightLabel = _ref2.lightLabel, format = _ref2.format, render3 = _ref2.render, renderFormItem = _ref2.renderFormItem, plain = _ref2.plain, fieldProps = _ref2.fieldProps;
  var intl = useIntl();
  var _useState3 = (0, import_react42.useState)(false), _useState4 = _slicedToArray(_useState3, 2), open = _useState4[0], setOpen = _useState4[1];
  var finalFormat = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || format || "HH:mm:ss";
  var _ref3 = Array.isArray(text) ? text : [], _ref4 = _slicedToArray(_ref3, 2), startText = _ref4[0], endText = _ref4[1];
  var startTextIsNumberOrMoment = import_dayjs4.default.isDayjs(startText) || typeof startText === "number";
  var endTextIsNumberOrMoment = import_dayjs4.default.isDayjs(endText) || typeof endText === "number";
  var parsedStartText = startText ? (0, import_dayjs4.default)(startText, startTextIsNumberOrMoment ? void 0 : finalFormat).format(finalFormat) : "";
  var parsedEndText = endText ? (0, import_dayjs4.default)(endText, endTextIsNumberOrMoment ? void 0 : finalFormat).format(finalFormat) : "";
  if (mode === "read") {
    var dom = (0, import_jsx_runtime51.jsxs)("div", {
      ref,
      children: [(0, import_jsx_runtime50.jsx)("div", {
        children: parsedStartText || "-"
      }), (0, import_jsx_runtime50.jsx)("div", {
        children: parsedEndText || "-"
      })]
    });
    if (render3) {
      return render3(text, _objectSpread2({
        mode
      }, fieldProps), (0, import_jsx_runtime50.jsx)("span", {
        children: dom
      }));
    }
    return dom;
  }
  if (mode === "edit" || mode === "update") {
    var dayValue = parseValueToDay(fieldProps.value, finalFormat);
    var _dom2;
    if (light) {
      var disabled = fieldProps.disabled, _fieldProps$placehold2 = fieldProps.placeholder, placeholder = _fieldProps$placehold2 === void 0 ? [intl.getMessage("tableForm.selectPlaceholder", "请选择"), intl.getMessage("tableForm.selectPlaceholder", "请选择")] : _fieldProps$placehold2;
      _dom2 = (0, import_jsx_runtime50.jsx)(FieldLabel, {
        onClick: function onClick() {
          var _fieldProps$onOpenCha3;
          fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha3 = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha3 === void 0 || _fieldProps$onOpenCha3.call(fieldProps, true);
          setOpen(true);
        },
        style: dayValue ? {
          paddingInlineEnd: 0
        } : void 0,
        label,
        disabled,
        placeholder,
        value: dayValue || open ? (0, import_jsx_runtime50.jsx)(time_picker_default.RangePicker, _objectSpread2(_objectSpread2(_objectSpread2({}, compatibleBorder(false)), {}, {
          format,
          ref
        }, fieldProps), {}, {
          placeholder,
          value: dayValue,
          onOpenChange: function onOpenChange(isOpen) {
            var _fieldProps$onOpenCha4;
            setOpen(isOpen);
            fieldProps === null || fieldProps === void 0 || (_fieldProps$onOpenCha4 = fieldProps.onOpenChange) === null || _fieldProps$onOpenCha4 === void 0 || _fieldProps$onOpenCha4.call(fieldProps, isOpen);
          },
          open
        })) : null,
        downIcon: dayValue || open ? false : void 0,
        allowClear: false,
        ref: lightLabel
      });
    } else {
      _dom2 = (0, import_jsx_runtime50.jsx)(time_picker_default.RangePicker, _objectSpread2(_objectSpread2(_objectSpread2({
        ref,
        format
      }, compatibleBorder(plain === void 0 ? true : !plain)), fieldProps), {}, {
        value: dayValue
      }));
    }
    if (renderFormItem) {
      return renderFormItem(text, _objectSpread2({
        mode
      }, fieldProps), _dom2);
    }
    return _dom2;
  }
  return null;
};
var FieldTimeRangePicker = import_react42.default.forwardRef(FieldTimeRangePickerComponents);
var TimePicker_default = import_react42.default.forwardRef(FieldTimePicker);

// node_modules/@ant-design/pro-field/es/components/TreeSelect/index.js
var import_classnames9 = __toESM(require_classnames());
var import_react43 = __toESM(require_react());
var import_jsx_runtime52 = __toESM(require_jsx_runtime());
var import_jsx_runtime53 = __toESM(require_jsx_runtime());
var import_jsx_runtime54 = __toESM(require_jsx_runtime());
var _excluded11 = ["radioType", "renderFormItem", "mode", "light", "label", "render"];
var _excluded26 = ["onSearch", "onClear", "onChange", "onBlur", "showSearch", "autoClearSearchValue", "treeData", "fetchDataOnSearch", "searchValue"];
var FieldTreeSelect = function FieldTreeSelect2(_ref, ref) {
  var radioType = _ref.radioType, renderFormItem = _ref.renderFormItem, mode = _ref.mode, light = _ref.light, label = _ref.label, render3 = _ref.render, rest = _objectWithoutProperties(_ref, _excluded11);
  var _useContext = (0, import_react43.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var layoutClassName = getPrefixCls("pro-field-tree-select");
  var treeSelectRef = (0, import_react43.useRef)(null);
  var _useState = (0, import_react43.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  var _ref2 = rest.fieldProps, onSearch = _ref2.onSearch, _onClear = _ref2.onClear, propsOnChange = _ref2.onChange, _onBlur = _ref2.onBlur, showSearch = _ref2.showSearch, autoClearSearchValue = _ref2.autoClearSearchValue, treeData = _ref2.treeData, fetchDataOnSearch = _ref2.fetchDataOnSearch, propsSearchValue = _ref2.searchValue, fieldProps = _objectWithoutProperties(_ref2, _excluded26);
  var intl = useIntl();
  var _useFieldFetchData = useFieldFetchData(_objectSpread2(_objectSpread2({}, rest), {}, {
    defaultKeyWords: propsSearchValue
  })), _useFieldFetchData2 = _slicedToArray(_useFieldFetchData, 3), loading = _useFieldFetchData2[0], options = _useFieldFetchData2[1], _fetchData = _useFieldFetchData2[2];
  var _useMergedState = useMergedState(void 0, {
    onChange: onSearch,
    value: propsSearchValue
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), searchValue = _useMergedState2[0], setSearchValue = _useMergedState2[1];
  (0, import_react43.useImperativeHandle)(ref, function() {
    return _objectSpread2(_objectSpread2({}, treeSelectRef.current || {}), {}, {
      fetchData: function fetchData(keyWord) {
        return _fetchData(keyWord);
      }
    });
  });
  var optionsValueEnum = (0, import_react43.useMemo)(function() {
    if (mode !== "read") return;
    var _ref3 = (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.fieldNames) || {}, _ref3$value = _ref3.value, valuePropsName = _ref3$value === void 0 ? "value" : _ref3$value, _ref3$label = _ref3.label, labelPropsName = _ref3$label === void 0 ? "label" : _ref3$label, _ref3$children = _ref3.children, childrenPropsName = _ref3$children === void 0 ? "children" : _ref3$children;
    var valuesMap = /* @__PURE__ */ new Map();
    var traverseOptions = function traverseOptions2(_options) {
      if (!(_options !== null && _options !== void 0 && _options.length)) {
        return valuesMap;
      }
      var length = _options.length;
      var i = 0;
      while (i < length) {
        var cur = _options[i++];
        valuesMap.set(cur[valuePropsName], cur[labelPropsName]);
        traverseOptions2(cur[childrenPropsName]);
      }
      return valuesMap;
    };
    return traverseOptions(options);
  }, [fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.fieldNames, mode, options]);
  var onChange = function onChange2(value, optionList, extra) {
    if (showSearch && autoClearSearchValue) {
      _fetchData(void 0);
      setSearchValue(void 0);
    }
    propsOnChange === null || propsOnChange === void 0 || propsOnChange(value, optionList, extra);
  };
  if (mode === "read") {
    var dom = (0, import_jsx_runtime53.jsx)(import_jsx_runtime52.Fragment, {
      children: proFieldParsingText(rest.text, objectToMap(rest.valueEnum || optionsValueEnum))
    });
    if (render3) {
      var _render;
      return (_render = render3(rest.text, _objectSpread2({
        mode
      }, fieldProps), dom)) !== null && _render !== void 0 ? _render : null;
    }
    return dom;
  }
  if (mode === "edit") {
    var _fieldProps$value;
    var valuesLength = Array.isArray(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.value) ? fieldProps === null || fieldProps === void 0 || (_fieldProps$value = fieldProps.value) === null || _fieldProps$value === void 0 ? void 0 : _fieldProps$value.length : 0;
    var _dom = (0, import_jsx_runtime53.jsx)(spin_default, {
      spinning: loading,
      children: (0, import_jsx_runtime53.jsx)(tree_select_default, _objectSpread2(_objectSpread2({
        open,
        onDropdownVisibleChange: function onDropdownVisibleChange(isOpen) {
          var _fieldProps$onDropdow;
          fieldProps === null || fieldProps === void 0 || (_fieldProps$onDropdow = fieldProps.onDropdownVisibleChange) === null || _fieldProps$onDropdow === void 0 || _fieldProps$onDropdow.call(fieldProps, isOpen);
          setOpen(isOpen);
        },
        ref: treeSelectRef,
        popupMatchSelectWidth: !light,
        placeholder: intl.getMessage("tableForm.selectPlaceholder", "请选择"),
        tagRender: light ? function(item) {
          var _fieldProps$value2;
          if (valuesLength < 2) return (0, import_jsx_runtime53.jsx)(import_jsx_runtime52.Fragment, {
            children: item.label
          });
          var itemIndex = fieldProps === null || fieldProps === void 0 || (_fieldProps$value2 = fieldProps.value) === null || _fieldProps$value2 === void 0 ? void 0 : _fieldProps$value2.findIndex(function(v) {
            return v === item.value || v.value === item.value;
          });
          return (0, import_jsx_runtime54.jsxs)(import_jsx_runtime52.Fragment, {
            children: [item.label, " ", itemIndex < valuesLength - 1 ? "," : ""]
          });
        } : void 0,
        bordered: !light
      }, fieldProps), {}, {
        treeData: options,
        showSearch,
        style: _objectSpread2({
          minWidth: 60
        }, fieldProps.style),
        allowClear: fieldProps.allowClear !== false,
        searchValue,
        autoClearSearchValue,
        onClear: function onClear() {
          _onClear === null || _onClear === void 0 || _onClear();
          _fetchData(void 0);
          if (showSearch) {
            setSearchValue(void 0);
          }
        },
        onChange,
        onSearch: function onSearch2(value) {
          if (fetchDataOnSearch && rest !== null && rest !== void 0 && rest.request) {
            _fetchData(value);
          }
          setSearchValue(value);
        },
        onBlur: function onBlur(event) {
          setSearchValue(void 0);
          _fetchData(void 0);
          _onBlur === null || _onBlur === void 0 || _onBlur(event);
        },
        className: (0, import_classnames9.default)(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.className, layoutClassName)
      }))
    });
    if (renderFormItem) {
      var _renderFormItem;
      _dom = (_renderFormItem = renderFormItem(rest.text, _objectSpread2(_objectSpread2({
        mode
      }, fieldProps), {}, {
        options,
        loading
      }), _dom)) !== null && _renderFormItem !== void 0 ? _renderFormItem : null;
    }
    if (light) {
      var _fieldProps$value3;
      var disabled = fieldProps.disabled, placeholder = fieldProps.placeholder;
      var notEmpty = !!fieldProps.value && ((_fieldProps$value3 = fieldProps.value) === null || _fieldProps$value3 === void 0 ? void 0 : _fieldProps$value3.length) !== 0;
      return (0, import_jsx_runtime53.jsx)(FieldLabel, {
        label,
        disabled,
        placeholder,
        onClick: function onClick() {
          var _fieldProps$onDropdow2;
          setOpen(true);
          fieldProps === null || fieldProps === void 0 || (_fieldProps$onDropdow2 = fieldProps.onDropdownVisibleChange) === null || _fieldProps$onDropdow2 === void 0 || _fieldProps$onDropdow2.call(fieldProps, true);
        },
        bordered: rest.bordered,
        value: notEmpty || open ? _dom : null,
        style: notEmpty ? {
          paddingInlineEnd: 0
        } : void 0,
        allowClear: false,
        downIcon: false
      });
    }
    return _dom;
  }
  return null;
};
var TreeSelect_default = import_react43.default.forwardRef(FieldTreeSelect);

// node_modules/@ant-design/pro-field/es/FieldHOC/index.js
var import_react44 = __toESM(require_react());
var import_jsx_runtime55 = __toESM(require_jsx_runtime());
var import_jsx_runtime56 = __toESM(require_jsx_runtime());
function FieldHOC(props) {
  var _useState = (0, import_react44.useState)(false), _useState2 = _slicedToArray(_useState, 2), labelTrigger = _useState2[0], setLabelTrigger = _useState2[1];
  var lightLabel = (0, import_react44.useRef)(null);
  var isTriggeredByLabel = (0, import_react44.useCallback)(function(e) {
    var _lightLabel$current, _lightLabel$current2;
    var isLabelMouseDown = (_lightLabel$current = lightLabel.current) === null || _lightLabel$current === void 0 || (_lightLabel$current = _lightLabel$current.labelRef) === null || _lightLabel$current === void 0 || (_lightLabel$current = _lightLabel$current.current) === null || _lightLabel$current === void 0 ? void 0 : _lightLabel$current.contains(e.target);
    var isClearMouseDown = (_lightLabel$current2 = lightLabel.current) === null || _lightLabel$current2 === void 0 || (_lightLabel$current2 = _lightLabel$current2.clearRef) === null || _lightLabel$current2 === void 0 || (_lightLabel$current2 = _lightLabel$current2.current) === null || _lightLabel$current2 === void 0 ? void 0 : _lightLabel$current2.contains(e.target);
    return isLabelMouseDown && !isClearMouseDown;
  }, [lightLabel]);
  var handleMouseDown = function handleMouseDown2(e) {
    if (isTriggeredByLabel(e)) {
      setLabelTrigger(true);
    }
  };
  var handleMouseUp = function handleMouseUp2() {
    setLabelTrigger(false);
  };
  if (props.isLight) {
    return (0, import_jsx_runtime55.jsx)("div", {
      onMouseDown: handleMouseDown,
      onMouseUp: handleMouseUp,
      children: import_react44.default.cloneElement(props.children, {
        labelTrigger,
        lightLabel
      })
    });
  }
  return (0, import_jsx_runtime55.jsx)(import_jsx_runtime56.Fragment, {
    children: props.children
  });
}
var FieldHOC_default = FieldHOC;

// node_modules/@ant-design/pro-field/es/index.js
var import_advancedFormat = __toESM(require_advancedFormat());
var import_isoWeek = __toESM(require_isoWeek());
var import_localeData = __toESM(require_localeData());
var import_localizedFormat = __toESM(require_localizedFormat());
var import_weekday = __toESM(require_weekday());
var import_weekOfYear2 = __toESM(require_weekOfYear());
var import_dayjs5 = __toESM(require_dayjs_min());
var import_jsx_runtime57 = __toESM(require_jsx_runtime());
var import_jsx_runtime58 = __toESM(require_jsx_runtime());
var _excluded12 = ["fieldProps"];
var _excluded27 = ["fieldProps"];
var _excluded32 = ["fieldProps"];
var _excluded42 = ["fieldProps"];
var _excluded52 = ["text", "valueType", "mode", "onChange", "renderFormItem", "value", "readonly", "fieldProps"];
var _excluded62 = ["placeholder"];
import_dayjs5.default.extend(import_localeData.default);
import_dayjs5.default.extend(import_advancedFormat.default);
import_dayjs5.default.extend(import_isoWeek.default);
import_dayjs5.default.extend(import_weekOfYear2.default);
import_dayjs5.default.extend(import_weekday.default);
import_dayjs5.default.extend(import_localizedFormat.default);
var defaultRenderTextByObject = function defaultRenderTextByObject2(text, valueType15, props) {
  var pickFormItemProps = pickProProps(props.fieldProps);
  if (valueType15.type === "progress") {
    return (0, import_jsx_runtime57.jsx)(Progress_default, _objectSpread2(_objectSpread2({}, props), {}, {
      text,
      fieldProps: _objectSpread2({
        status: valueType15.status ? valueType15.status : void 0
      }, pickFormItemProps)
    }));
  }
  if (valueType15.type === "money") {
    return (0, import_jsx_runtime57.jsx)(Money_default, _objectSpread2(_objectSpread2({
      locale: valueType15.locale
    }, props), {}, {
      fieldProps: pickFormItemProps,
      text,
      moneySymbol: valueType15.moneySymbol
    }));
  }
  if (valueType15.type === "percent") {
    return (0, import_jsx_runtime57.jsx)(Percent_default, _objectSpread2(_objectSpread2({}, props), {}, {
      text,
      showSymbol: valueType15.showSymbol,
      precision: valueType15.precision,
      fieldProps: pickFormItemProps,
      showColor: valueType15.showColor
    }));
  }
  if (valueType15.type === "image") {
    return (0, import_jsx_runtime57.jsx)(Image_default, _objectSpread2(_objectSpread2({}, props), {}, {
      text,
      width: valueType15.width
    }));
  }
  return text;
};
var defaultRenderText = function defaultRenderText2(dataValue, valueType15, props, valueTypeMap) {
  var _props$mode = props.mode, mode = _props$mode === void 0 ? "read" : _props$mode, _props$emptyText = props.emptyText, emptyText = _props$emptyText === void 0 ? "-" : _props$emptyText;
  if (emptyText !== false && mode === "read" && valueType15 !== "option" && valueType15 !== "switch") {
    if (typeof dataValue !== "boolean" && typeof dataValue !== "number" && !dataValue) {
      var fieldProps = props.fieldProps, render3 = props.render;
      if (render3) {
        return render3(dataValue, _objectSpread2({
          mode
        }, fieldProps), (0, import_jsx_runtime57.jsx)(import_jsx_runtime58.Fragment, {
          children: emptyText
        }));
      }
      return (0, import_jsx_runtime57.jsx)(import_jsx_runtime58.Fragment, {
        children: emptyText
      });
    }
  }
  delete props.emptyText;
  if (_typeof(valueType15) === "object") {
    return defaultRenderTextByObject(dataValue, valueType15, props);
  }
  var customValueTypeConfig = valueTypeMap && valueTypeMap[valueType15];
  if (customValueTypeConfig) {
    delete props.ref;
    if (mode === "read") {
      var _customValueTypeConfi;
      return (_customValueTypeConfi = customValueTypeConfig.render) === null || _customValueTypeConfi === void 0 ? void 0 : _customValueTypeConfi.call(customValueTypeConfig, dataValue, _objectSpread2(_objectSpread2({
        text: dataValue
      }, props), {}, {
        mode: mode || "read"
      }), (0, import_jsx_runtime57.jsx)(import_jsx_runtime58.Fragment, {
        children: dataValue
      }));
    }
    if (mode === "update" || mode === "edit") {
      var _customValueTypeConfi2;
      return (_customValueTypeConfi2 = customValueTypeConfig.renderFormItem) === null || _customValueTypeConfi2 === void 0 ? void 0 : _customValueTypeConfi2.call(customValueTypeConfig, dataValue, _objectSpread2({
        text: dataValue
      }, props), (0, import_jsx_runtime57.jsx)(import_jsx_runtime58.Fragment, {
        children: dataValue
      }));
    }
  }
  if (valueType15 === "money") {
    return (0, import_jsx_runtime57.jsx)(Money_default, _objectSpread2(_objectSpread2({}, props), {}, {
      text: dataValue
    }));
  }
  if (valueType15 === "date") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(DatePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-MM-DD"
      }, props))
    });
  }
  if (valueType15 === "dateWeek") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(DatePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-wo",
        picker: "week"
      }, props))
    });
  }
  if (valueType15 === "dateWeekRange") {
    var _fieldProps = props.fieldProps, otherProps = _objectWithoutProperties(props, _excluded12);
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(RangePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-W",
        showTime: true,
        fieldProps: _objectSpread2({
          picker: "week"
        }, _fieldProps)
      }, otherProps))
    });
  }
  if (valueType15 === "dateMonthRange") {
    var _fieldProps2 = props.fieldProps, _otherProps = _objectWithoutProperties(props, _excluded27);
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(RangePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-MM",
        showTime: true,
        fieldProps: _objectSpread2({
          picker: "month"
        }, _fieldProps2)
      }, _otherProps))
    });
  }
  if (valueType15 === "dateQuarterRange") {
    var _fieldProps3 = props.fieldProps, _otherProps2 = _objectWithoutProperties(props, _excluded32);
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(RangePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-Q",
        showTime: true,
        fieldProps: _objectSpread2({
          picker: "quarter"
        }, _fieldProps3)
      }, _otherProps2))
    });
  }
  if (valueType15 === "dateYearRange") {
    var _fieldProps4 = props.fieldProps, _otherProps3 = _objectWithoutProperties(props, _excluded42);
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(RangePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY",
        showTime: true,
        fieldProps: _objectSpread2({
          picker: "year"
        }, _fieldProps4)
      }, _otherProps3))
    });
  }
  if (valueType15 === "dateMonth") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(DatePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-MM",
        picker: "month"
      }, props))
    });
  }
  if (valueType15 === "dateQuarter") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(DatePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-[Q]Q",
        picker: "quarter"
      }, props))
    });
  }
  if (valueType15 === "dateYear") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(DatePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY",
        picker: "year"
      }, props))
    });
  }
  if (valueType15 === "dateRange") {
    return (0, import_jsx_runtime57.jsx)(RangePicker_default, _objectSpread2({
      text: dataValue,
      format: "YYYY-MM-DD"
    }, props));
  }
  if (valueType15 === "dateTime") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(DatePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-MM-DD HH:mm:ss",
        showTime: true
      }, props))
    });
  }
  if (valueType15 === "dateTimeRange") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(RangePicker_default, _objectSpread2({
        text: dataValue,
        format: "YYYY-MM-DD HH:mm:ss",
        showTime: true
      }, props))
    });
  }
  if (valueType15 === "time") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(TimePicker_default, _objectSpread2({
        text: dataValue,
        format: "HH:mm:ss"
      }, props))
    });
  }
  if (valueType15 === "timeRange") {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(FieldTimeRangePicker, _objectSpread2({
        text: dataValue,
        format: "HH:mm:ss"
      }, props))
    });
  }
  if (valueType15 === "fromNow") {
    return (0, import_jsx_runtime57.jsx)(FromNow_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "index") {
    return (0, import_jsx_runtime57.jsx)(IndexColumn_default, {
      children: dataValue + 1
    });
  }
  if (valueType15 === "indexBorder") {
    return (0, import_jsx_runtime57.jsx)(IndexColumn_default, {
      border: true,
      children: dataValue + 1
    });
  }
  if (valueType15 === "progress") {
    return (0, import_jsx_runtime57.jsx)(Progress_default, _objectSpread2(_objectSpread2({}, props), {}, {
      text: dataValue
    }));
  }
  if (valueType15 === "percent") {
    return (0, import_jsx_runtime57.jsx)(Percent_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "avatar" && typeof dataValue === "string" && props.mode === "read") {
    return (0, import_jsx_runtime57.jsx)(avatar_default, {
      src: dataValue,
      size: 22,
      shape: "circle"
    });
  }
  if (valueType15 === "code") {
    return (0, import_jsx_runtime57.jsx)(Code_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "jsonCode") {
    return (0, import_jsx_runtime57.jsx)(Code_default, _objectSpread2({
      text: dataValue,
      language: "json"
    }, props));
  }
  if (valueType15 === "textarea") {
    return (0, import_jsx_runtime57.jsx)(TextArea_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "digit") {
    return (0, import_jsx_runtime57.jsx)(Digit_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "digitRange") {
    return (0, import_jsx_runtime57.jsx)(DigitRange_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "second") {
    return (0, import_jsx_runtime57.jsx)(Second_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "select" || valueType15 === "text" && (props.valueEnum || props.request)) {
    return (0, import_jsx_runtime57.jsx)(FieldHOC_default, {
      isLight: props.light,
      children: (0, import_jsx_runtime57.jsx)(Select_default, _objectSpread2({
        text: dataValue
      }, props))
    });
  }
  if (valueType15 === "checkbox") {
    return (0, import_jsx_runtime57.jsx)(Checkbox_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "radio") {
    return (0, import_jsx_runtime57.jsx)(Radio_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "radioButton") {
    return (0, import_jsx_runtime57.jsx)(Radio_default, _objectSpread2({
      radioType: "button",
      text: dataValue
    }, props));
  }
  if (valueType15 === "rate") {
    return (0, import_jsx_runtime57.jsx)(Rate_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "slider") {
    return (0, import_jsx_runtime57.jsx)(Slider_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "switch") {
    return (0, import_jsx_runtime57.jsx)(Switch_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "option") {
    return (0, import_jsx_runtime57.jsx)(Options_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "password") {
    return (0, import_jsx_runtime57.jsx)(Password_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "image") {
    return (0, import_jsx_runtime57.jsx)(Image_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "cascader") {
    return (0, import_jsx_runtime57.jsx)(Cascader_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "treeSelect") {
    return (0, import_jsx_runtime57.jsx)(TreeSelect_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "color") {
    return (0, import_jsx_runtime57.jsx)(ColorPicker_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  if (valueType15 === "segmented") {
    return (0, import_jsx_runtime57.jsx)(Segmented_default, _objectSpread2({
      text: dataValue
    }, props));
  }
  return (0, import_jsx_runtime57.jsx)(Text_default, _objectSpread2({
    text: dataValue
  }, props));
};
var ProFieldComponent = function ProFieldComponent2(_ref, ref) {
  var _ref2, _fieldProps$value, _ref3, _rest$placeholder, _rest$placeholder2;
  var text = _ref.text, _ref$valueType = _ref.valueType, valueType15 = _ref$valueType === void 0 ? "text" : _ref$valueType, _ref$mode = _ref.mode, mode = _ref$mode === void 0 ? "read" : _ref$mode, onChange = _ref.onChange, renderFormItem = _ref.renderFormItem, value = _ref.value, readonly = _ref.readonly, restFieldProps = _ref.fieldProps, rest = _objectWithoutProperties(_ref, _excluded52);
  var context = (0, import_react45.useContext)(es_default2);
  var onChangeCallBack = useRefFunction(function() {
    var _restFieldProps$onCha;
    for (var _len = arguments.length, restParams = new Array(_len), _key = 0; _key < _len; _key++) {
      restParams[_key] = arguments[_key];
    }
    restFieldProps === null || restFieldProps === void 0 || (_restFieldProps$onCha = restFieldProps.onChange) === null || _restFieldProps$onCha === void 0 || _restFieldProps$onCha.call.apply(_restFieldProps$onCha, [restFieldProps].concat(restParams));
    onChange === null || onChange === void 0 || onChange.apply(void 0, restParams);
  });
  var fieldProps = useDeepCompareMemo_default(function() {
    return (value !== void 0 || restFieldProps) && _objectSpread2(_objectSpread2({
      value
    }, omitUndefined(restFieldProps)), {}, {
      onChange: onChangeCallBack
    });
  }, [value, restFieldProps, onChangeCallBack]);
  var renderedDom = defaultRenderText(mode === "edit" ? (_ref2 = (_fieldProps$value = fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.value) !== null && _fieldProps$value !== void 0 ? _fieldProps$value : text) !== null && _ref2 !== void 0 ? _ref2 : "" : (_ref3 = text !== null && text !== void 0 ? text : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.value) !== null && _ref3 !== void 0 ? _ref3 : "", valueType15 || "text", omitUndefined(_objectSpread2(_objectSpread2({
    ref
  }, rest), {}, {
    mode: readonly ? "read" : mode,
    renderFormItem: renderFormItem ? function(curText, props, dom) {
      var _placeholder = props.placeholder, restProps = _objectWithoutProperties(props, _excluded62);
      var newDom = renderFormItem(curText, restProps, dom);
      if (import_react45.default.isValidElement(newDom)) return import_react45.default.cloneElement(newDom, _objectSpread2(_objectSpread2({}, fieldProps), newDom.props || {}));
      return newDom;
    } : void 0,
    placeholder: renderFormItem ? void 0 : (_rest$placeholder = rest === null || rest === void 0 ? void 0 : rest.placeholder) !== null && _rest$placeholder !== void 0 ? _rest$placeholder : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.placeholder,
    fieldProps: pickProProps(omitUndefined(_objectSpread2(_objectSpread2({}, fieldProps), {}, {
      placeholder: renderFormItem ? void 0 : (_rest$placeholder2 = rest === null || rest === void 0 ? void 0 : rest.placeholder) !== null && _rest$placeholder2 !== void 0 ? _rest$placeholder2 : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.placeholder
    })))
  })), context.valueTypeMap || {});
  return (0, import_jsx_runtime57.jsx)(import_react45.default.Fragment, {
    children: renderedDom
  });
};
var ProField = import_react45.default.forwardRef(ProFieldComponent);
var es_default5 = ProField;

// node_modules/@ant-design/pro-form/es/layouts/ProForm/index.js
var import_react112 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/BaseForm/BaseForm.js
var import_classnames18 = __toESM(require_classnames());
var import_react110 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/FieldContext.js
var import_react46 = __toESM(require_react());
var FieldContext = import_react46.default.createContext({});
var FieldContext_default2 = FieldContext;

// node_modules/@ant-design/pro-form/es/components/Captcha/index.js
var import_react49 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/BaseForm/createField.js
var import_classnames10 = __toESM(require_classnames());
var import_react48 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/helpers/grid.js
var import_react47 = __toESM(require_react());
var import_jsx_runtime59 = __toESM(require_jsx_runtime());
var _excluded13 = ["children", "Wrapper"];
var _excluded28 = ["children", "Wrapper"];
var GridContext = (0, import_react47.createContext)({
  grid: false,
  colProps: void 0,
  rowProps: void 0
});
var gridHelpers = function gridHelpers2(_ref) {
  var grid = _ref.grid, rowProps = _ref.rowProps, colProps = _ref.colProps;
  return {
    grid: !!grid,
    RowWrapper: function RowWrapper() {
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, children = _ref2.children, Wrapper = _ref2.Wrapper, props = _objectWithoutProperties(_ref2, _excluded13);
      if (!grid) {
        return Wrapper ? (0, import_jsx_runtime59.jsx)(Wrapper, {
          children
        }) : children;
      }
      return (0, import_jsx_runtime59.jsx)(row_default, _objectSpread2(_objectSpread2(_objectSpread2({
        gutter: 8
      }, rowProps), props), {}, {
        children
      }));
    },
    ColWrapper: function ColWrapper() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, children = _ref3.children, Wrapper = _ref3.Wrapper, rest = _objectWithoutProperties(_ref3, _excluded28);
      var props = (0, import_react47.useMemo)(function() {
        var originProps = _objectSpread2(_objectSpread2({}, colProps), rest);
        if (typeof originProps.span === "undefined" && typeof originProps.xs === "undefined") {
          originProps.xs = 24;
        }
        return originProps;
      }, [rest]);
      if (!grid) {
        return Wrapper ? (0, import_jsx_runtime59.jsx)(Wrapper, {
          children
        }) : children;
      }
      return (0, import_jsx_runtime59.jsx)(col_default, _objectSpread2(_objectSpread2({}, props), {}, {
        children
      }));
    }
  };
};
var useGridHelpers = function useGridHelpers2(props) {
  var config = (0, import_react47.useMemo)(function() {
    {
      if (_typeof(props) === "object") {
        return props;
      }
      return {
        grid: props
      };
    }
  }, [props]);
  var _useContext = (0, import_react47.useContext)(GridContext), grid = _useContext.grid, colProps = _useContext.colProps;
  return (0, import_react47.useMemo)(
    function() {
      return gridHelpers({
        grid: !!(grid || config.grid),
        rowProps: config === null || config === void 0 ? void 0 : config.rowProps,
        colProps: (config === null || config === void 0 ? void 0 : config.colProps) || colProps,
        Wrapper: config === null || config === void 0 ? void 0 : config.Wrapper
      });
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      config === null || config === void 0 ? void 0 : config.Wrapper,
      config.grid,
      grid,
      // eslint-disable-next-line react-hooks/exhaustive-deps
      JSON.stringify([colProps, config === null || config === void 0 ? void 0 : config.colProps, config === null || config === void 0 ? void 0 : config.rowProps])
    ]
  );
};

// node_modules/@ant-design/pro-form/es/BaseForm/createField.js
var import_jsx_runtime60 = __toESM(require_jsx_runtime());
var _excluded14 = ["valueType", "customLightMode", "lightFilterLabelFormatter", "valuePropName", "ignoreWidth", "defaultProps"];
var _excluded29 = ["label", "tooltip", "placeholder", "width", "bordered", "messageVariables", "ignoreFormItem", "transform", "convertValue", "readonly", "allowClear", "colSize", "getFormItemProps", "getFieldProps", "filedConfig", "cacheForSwr", "proFieldProps"];
var TYPE = Symbol("ProFormComponent");
var WIDTH_SIZE_ENUM = {
  // 适用于短数字，短文本或者选项
  xs: 104,
  s: 216,
  // 适用于较短字段录入、如姓名、电话、ID 等。
  sm: 216,
  m: 328,
  // 标准宽度，适用于大部分字段长度。
  md: 328,
  l: 440,
  // 适用于较长字段录入，如长网址、标签组、文件路径等。
  lg: 440,
  // 适用于长文本录入，如长链接、描述、备注等，通常搭配自适应多行输入框或定高文本域使用。
  xl: 552
};
var ignoreWidthValueType = ["switch", "radioButton", "radio", "rate"];
function createField(Field, config) {
  Field.displayName = "ProFormComponent";
  var FieldWithContext = function FieldWithContext2(props) {
    var _props$filedConfig$co = _objectSpread2(_objectSpread2({}, props === null || props === void 0 ? void 0 : props.filedConfig), config), tmpValueType = _props$filedConfig$co.valueType, customLightMode = _props$filedConfig$co.customLightMode, lightFilterLabelFormatter = _props$filedConfig$co.lightFilterLabelFormatter, _props$filedConfig$co2 = _props$filedConfig$co.valuePropName, valuePropName = _props$filedConfig$co2 === void 0 ? "value" : _props$filedConfig$co2, ignoreWidth = _props$filedConfig$co.ignoreWidth, defaultProps = _props$filedConfig$co.defaultProps, defaultFormItemProps = _objectWithoutProperties(_props$filedConfig$co, _excluded14);
    var _defaultProps$props = _objectSpread2(_objectSpread2({}, defaultProps), props), label = _defaultProps$props.label, tooltip = _defaultProps$props.tooltip, placeholder = _defaultProps$props.placeholder, width = _defaultProps$props.width, bordered = _defaultProps$props.bordered, messageVariables = _defaultProps$props.messageVariables, ignoreFormItem = _defaultProps$props.ignoreFormItem, transform = _defaultProps$props.transform, convertValue = _defaultProps$props.convertValue, readonly = _defaultProps$props.readonly, allowClear = _defaultProps$props.allowClear, colSize = _defaultProps$props.colSize, getFormItemProps = _defaultProps$props.getFormItemProps, getFieldProps = _defaultProps$props.getFieldProps, filedConfig = _defaultProps$props.filedConfig, cacheForSwr = _defaultProps$props.cacheForSwr, proFieldProps = _defaultProps$props.proFieldProps, rest = _objectWithoutProperties(_defaultProps$props, _excluded29);
    var valueType15 = tmpValueType || rest.valueType;
    var isIgnoreWidth = (0, import_react48.useMemo)(function() {
      return ignoreWidth || ignoreWidthValueType.includes(valueType15);
    }, [ignoreWidth, valueType15]);
    var _useState = (0, import_react48.useState)(), _useState2 = _slicedToArray(_useState, 2), forceUpdate = _useState2[1];
    var _useState3 = (0, import_react48.useState)(), _useState4 = _slicedToArray(_useState3, 2), onlyChange = _useState4[0], forceUpdateByOnChange = _useState4[1];
    var contextValue = import_react48.default.useContext(FieldContext_default2);
    var changedProps = useDeepCompareMemo_default(
      function() {
        return {
          formItemProps: getFormItemProps === null || getFormItemProps === void 0 ? void 0 : getFormItemProps(),
          fieldProps: getFieldProps === null || getFieldProps === void 0 ? void 0 : getFieldProps()
        };
      },
      // eslint-disable-next-line react-hooks/exhaustive-deps
      [getFieldProps, getFormItemProps, rest.dependenciesValues, onlyChange]
    );
    var fieldProps = useDeepCompareMemo_default(function() {
      var newFieldProps = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, ignoreFormItem ? omitUndefined({
        value: rest.value
      }) : {}), {}, {
        placeholder,
        disabled: props.disabled
      }, contextValue.fieldProps), changedProps.fieldProps), rest.fieldProps);
      newFieldProps.style = omitUndefined(newFieldProps === null || newFieldProps === void 0 ? void 0 : newFieldProps.style);
      return newFieldProps;
    }, [ignoreFormItem, rest.value, rest.fieldProps, placeholder, props.disabled, contextValue.fieldProps, changedProps.fieldProps]);
    var restFormItemProps = pickProFormItemProps(rest);
    var formItemProps = useDeepCompareMemo_default(function() {
      return _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, contextValue.formItemProps), restFormItemProps), changedProps.formItemProps), rest.formItemProps);
    }, [changedProps.formItemProps, contextValue.formItemProps, rest.formItemProps, restFormItemProps]);
    var otherProps = useDeepCompareMemo_default(function() {
      return _objectSpread2(_objectSpread2({
        messageVariables
      }, defaultFormItemProps), formItemProps);
    }, [defaultFormItemProps, formItemProps, messageVariables]);
    noteOnce(
      // eslint-disable-next-line @typescript-eslint/dot-notation
      !rest["defaultValue"],
      "请不要在 Form 中使用 defaultXXX。如果需要默认值请使用 initialValues 和 initialValue。"
    );
    var _useContext = (0, import_react48.useContext)(FieldContext_default), prefixName = _useContext.prefixName;
    var proFieldKey = useDeepCompareMemo_default(function() {
      var _contextValue$formKey;
      var name = otherProps === null || otherProps === void 0 ? void 0 : otherProps.name;
      if (Array.isArray(name)) name = name.join("_");
      if (Array.isArray(prefixName) && name) name = "".concat(prefixName.join("."), ".").concat(name);
      var key2 = name && "form-".concat((_contextValue$formKey = contextValue.formKey) !== null && _contextValue$formKey !== void 0 ? _contextValue$formKey : "", "-field-").concat(name);
      return key2;
    }, [stringify_default(otherProps === null || otherProps === void 0 ? void 0 : otherProps.name), prefixName, contextValue.formKey]);
    var onChange = useRefFunction(function() {
      var _fieldProps$onChange;
      if (getFormItemProps || getFieldProps) {
        forceUpdateByOnChange([]);
      } else if (rest.renderFormItem) {
        forceUpdate([]);
      }
      for (var _len = arguments.length, restParams = new Array(_len), _key = 0; _key < _len; _key++) {
        restParams[_key] = arguments[_key];
      }
      fieldProps === null || fieldProps === void 0 || (_fieldProps$onChange = fieldProps.onChange) === null || _fieldProps$onChange === void 0 || _fieldProps$onChange.call.apply(_fieldProps$onChange, [fieldProps].concat(restParams));
    });
    var style = useDeepCompareMemo_default(function() {
      var newStyle = _objectSpread2({
        width: width && !WIDTH_SIZE_ENUM[width] ? width : contextValue.grid ? "100%" : void 0
      }, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.style);
      if (isIgnoreWidth) Reflect.deleteProperty(newStyle, "width");
      return omitUndefined(newStyle);
    }, [stringify_default(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.style), contextValue.grid, isIgnoreWidth, width]);
    var className = useDeepCompareMemo_default(function() {
      var isSizeEnum = width && WIDTH_SIZE_ENUM[width];
      return (0, import_classnames10.default)(fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.className, _defineProperty({
        "pro-field": isSizeEnum
      }, "pro-field-".concat(width), isSizeEnum && !isIgnoreWidth)) || void 0;
    }, [width, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.className, isIgnoreWidth]);
    var fieldProFieldProps = useDeepCompareMemo_default(function() {
      return omitUndefined(_objectSpread2(_objectSpread2({}, contextValue.proFieldProps), {}, {
        mode: rest === null || rest === void 0 ? void 0 : rest.mode,
        readonly,
        params: rest.params,
        proFieldKey,
        cacheForSwr
      }, proFieldProps));
    }, [contextValue.proFieldProps, rest === null || rest === void 0 ? void 0 : rest.mode, rest.params, readonly, proFieldKey, cacheForSwr, proFieldProps]);
    var fieldFieldProps = useDeepCompareMemo_default(function() {
      return _objectSpread2(_objectSpread2({
        onChange,
        allowClear
      }, fieldProps), {}, {
        style,
        className
      });
    }, [allowClear, className, onChange, fieldProps, style]);
    var field3 = useDeepCompareMemo_default(function() {
      return (0, import_jsx_runtime60.jsx)(
        Field,
        _objectSpread2(_objectSpread2({}, rest), {}, {
          fieldProps: fieldFieldProps,
          proFieldProps: fieldProFieldProps,
          ref: props === null || props === void 0 ? void 0 : props.fieldRef
        }),
        props.proFormFieldKey || props.name
      );
    }, [fieldProFieldProps, fieldFieldProps, rest]);
    var formItem = useDeepCompareMemo_default(function() {
      var _otherProps$name, _field$props$allowCle, _field$props, _field$props2;
      return (0, import_jsx_runtime60.jsx)(
        FormItem_default,
        _objectSpread2(_objectSpread2({
          label: label && (proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.light) !== true ? label : void 0,
          tooltip: (proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.light) !== true && tooltip,
          valuePropName
          // @ts-ignore
        }, otherProps), {}, {
          ignoreFormItem,
          transform,
          dataFormat: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format,
          valueType: valueType15,
          messageVariables: _objectSpread2({
            label: label || ""
          }, otherProps === null || otherProps === void 0 ? void 0 : otherProps.messageVariables),
          convertValue,
          lightProps: omitUndefined(_objectSpread2(_objectSpread2(_objectSpread2({}, fieldProps), {}, {
            valueType: valueType15,
            bordered,
            allowClear: (_field$props$allowCle = field3 === null || field3 === void 0 || (_field$props = field3.props) === null || _field$props === void 0 ? void 0 : _field$props.allowClear) !== null && _field$props$allowCle !== void 0 ? _field$props$allowCle : allowClear,
            light: proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.light,
            label,
            customLightMode,
            labelFormatter: lightFilterLabelFormatter,
            valuePropName,
            footerRender: field3 === null || field3 === void 0 || (_field$props2 = field3.props) === null || _field$props2 === void 0 ? void 0 : _field$props2.footerRender
          }, rest.lightProps), otherProps.lightProps)),
          children: field3
        }),
        props.proFormFieldKey || ((_otherProps$name = otherProps.name) === null || _otherProps$name === void 0 ? void 0 : _otherProps$name.toString())
      );
    }, [label, proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.light, tooltip, valuePropName, props.proFormFieldKey, otherProps, ignoreFormItem, transform, fieldProps, valueType15, convertValue, bordered, field3, allowClear, customLightMode, lightFilterLabelFormatter, rest.lightProps]);
    var _useGridHelpers = useGridHelpers(rest), ColWrapper = _useGridHelpers.ColWrapper;
    return (0, import_jsx_runtime60.jsx)(ColWrapper, {
      children: formItem
    });
  };
  var DependencyWrapper = function DependencyWrapper2(props) {
    var dependencies = props.dependencies;
    return dependencies ? (0, import_jsx_runtime60.jsx)(Dependency_default, {
      name: dependencies,
      originDependencies: props === null || props === void 0 ? void 0 : props.originDependencies,
      children: function children(values) {
        return (0, import_jsx_runtime60.jsx)(FieldWithContext, _objectSpread2({
          dependenciesValues: values,
          dependencies
        }, props));
      }
    }) : (0, import_jsx_runtime60.jsx)(FieldWithContext, _objectSpread2({
      dependencies
    }, props));
  };
  return DependencyWrapper;
}

// node_modules/@ant-design/pro-form/es/components/Captcha/index.js
var import_jsx_runtime61 = __toESM(require_jsx_runtime());
var import_jsx_runtime62 = __toESM(require_jsx_runtime());
var _excluded15 = ["rules", "name", "phoneName", "fieldProps", "onTiming", "captchaTextRender", "captchaProps"];
var BaseProFormCaptcha = import_react49.default.forwardRef(function(props, ref) {
  var form = form_default.useFormInstance();
  var _useState = (0, import_react49.useState)(props.countDown || 60), _useState2 = _slicedToArray(_useState, 2), count = _useState2[0], setCount = _useState2[1];
  var _useState3 = (0, import_react49.useState)(false), _useState4 = _slicedToArray(_useState3, 2), timing = _useState4[0], setTiming = _useState4[1];
  var _useState5 = (0, import_react49.useState)(), _useState6 = _slicedToArray(_useState5, 2), loading = _useState6[0], setLoading = _useState6[1];
  var rules = props.rules, name = props.name, phoneName = props.phoneName, fieldProps = props.fieldProps, onTiming = props.onTiming, _props$captchaTextRen = props.captchaTextRender, captchaTextRender = _props$captchaTextRen === void 0 ? function(paramsTiming, paramsCount) {
    return paramsTiming ? "".concat(paramsCount, " 秒后重新获取") : "获取验证码";
  } : _props$captchaTextRen, captchaProps = props.captchaProps, restProps = _objectWithoutProperties(props, _excluded15);
  var onGetCaptcha = function() {
    var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(mobile) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            setLoading(true);
            _context.next = 4;
            return restProps.onGetCaptcha(mobile);
          case 4:
            setLoading(false);
            setTiming(true);
            _context.next = 13;
            break;
          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](0);
            setTiming(false);
            setLoading(false);
            console.log(_context.t0);
          case 13:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[0, 8]]);
    }));
    return function onGetCaptcha2(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  (0, import_react49.useImperativeHandle)(ref, function() {
    return {
      startTiming: function startTiming() {
        return setTiming(true);
      },
      endTiming: function endTiming() {
        return setTiming(false);
      }
    };
  });
  (0, import_react49.useEffect)(function() {
    var interval = 0;
    var countDown = props.countDown;
    if (timing) {
      interval = window.setInterval(function() {
        setCount(function(preSecond) {
          if (preSecond <= 1) {
            setTiming(false);
            clearInterval(interval);
            return countDown || 60;
          }
          return preSecond - 1;
        });
      }, 1e3);
    }
    return function() {
      return clearInterval(interval);
    };
  }, [timing]);
  (0, import_react49.useEffect)(function() {
    if (onTiming) {
      onTiming(count);
    }
  }, [count, onTiming]);
  return (0, import_jsx_runtime62.jsxs)("div", {
    style: _objectSpread2(_objectSpread2({}, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.style), {}, {
      display: "flex",
      alignItems: "center"
    }),
    ref,
    children: [(0, import_jsx_runtime61.jsx)(input_default, _objectSpread2(_objectSpread2({}, fieldProps), {}, {
      style: _objectSpread2({
        flex: 1,
        transition: "width .3s",
        marginRight: 8
      }, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.style)
    })), (0, import_jsx_runtime61.jsx)(button_default, _objectSpread2(_objectSpread2({
      style: {
        display: "block"
      },
      disabled: timing,
      loading
    }, captchaProps), {}, {
      onClick: _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
        var _mobile;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              if (!phoneName) {
                _context2.next = 9;
                break;
              }
              _context2.next = 4;
              return form.validateFields([phoneName].flat(1));
            case 4:
              _mobile = form.getFieldValue([phoneName].flat(1));
              _context2.next = 7;
              return onGetCaptcha(_mobile);
            case 7:
              _context2.next = 11;
              break;
            case 9:
              _context2.next = 11;
              return onGetCaptcha("");
            case 11:
              _context2.next = 16;
              break;
            case 13:
              _context2.prev = 13;
              _context2.t0 = _context2["catch"](0);
              console.log(_context2.t0);
            case 16:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[0, 13]]);
      })),
      children: captchaTextRender(timing, count)
    }))]
  });
});
var ProFormCaptcha = createField(BaseProFormCaptcha);

// node_modules/@ant-design/pro-form/es/components/Cascader/index.js
var import_react52 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/components/Field/index.js
var import_react51 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/BaseForm/EditOrReadOnlyContext.js
var import_react50 = __toESM(require_react());
var EditOrReadOnlyContext = import_react50.default.createContext({
  mode: "edit"
});

// node_modules/@ant-design/pro-form/es/components/Field/index.js
var import_jsx_runtime63 = __toESM(require_jsx_runtime());
var import_jsx_runtime64 = __toESM(require_jsx_runtime());
var _excluded16 = ["fieldProps", "children", "labelCol", "label", "autoFocus", "isDefaultDom", "render", "proFieldProps", "renderFormItem", "valueType", "initialValue", "onChange", "valueEnum", "params", "name", "dependenciesValues", "cacheForSwr", "valuePropName"];
var BaseProFormField = function BaseProFormField2(props) {
  var fieldProps = props.fieldProps, children = props.children, labelCol = props.labelCol, label = props.label, autoFocus = props.autoFocus, isDefaultDom = props.isDefaultDom, render3 = props.render, proFieldProps = props.proFieldProps, renderFormItem = props.renderFormItem, valueType15 = props.valueType, initialValue = props.initialValue, _onChange = props.onChange, valueEnum = props.valueEnum, params = props.params, name = props.name, dependenciesValues = props.dependenciesValues, _props$cacheForSwr = props.cacheForSwr, cacheForSwr = _props$cacheForSwr === void 0 ? false : _props$cacheForSwr, _props$valuePropName = props.valuePropName, valuePropName = _props$valuePropName === void 0 ? "value" : _props$valuePropName, restProps = _objectWithoutProperties(props, _excluded16);
  var modeContext = (0, import_react51.useContext)(EditOrReadOnlyContext);
  var propsParams = (0, import_react51.useMemo)(function() {
    return dependenciesValues && restProps.request ? _objectSpread2(_objectSpread2({}, params), dependenciesValues || {}) : params;
  }, [dependenciesValues, params, restProps.request]);
  var memoUnChange = useRefFunction(function() {
    if (fieldProps !== null && fieldProps !== void 0 && fieldProps.onChange) {
      var _fieldProps$onChange;
      for (var _len = arguments.length, restParams = new Array(_len), _key = 0; _key < _len; _key++) {
        restParams[_key] = arguments[_key];
      }
      fieldProps === null || fieldProps === void 0 || (_fieldProps$onChange = fieldProps.onChange) === null || _fieldProps$onChange === void 0 || _fieldProps$onChange.call.apply(_fieldProps$onChange, [fieldProps].concat(restParams));
      return;
    }
  });
  var memoFieldProps = (0, import_react51.useMemo)(function() {
    return _objectSpread2(_objectSpread2({
      autoFocus
    }, fieldProps), {}, {
      onChange: memoUnChange
    });
  }, [autoFocus, fieldProps, memoUnChange]);
  var childrenRender = (0, import_react51.useMemo)(function() {
    if (children) {
      if (import_react51.default.isValidElement(children)) {
        return import_react51.default.cloneElement(children, _objectSpread2(_objectSpread2({}, restProps), {}, {
          onChange: function onChange() {
            for (var _len2 = arguments.length, restParams = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              restParams[_key2] = arguments[_key2];
            }
            if (fieldProps !== null && fieldProps !== void 0 && fieldProps.onChange) {
              var _fieldProps$onChange2;
              fieldProps === null || fieldProps === void 0 || (_fieldProps$onChange2 = fieldProps.onChange) === null || _fieldProps$onChange2 === void 0 || _fieldProps$onChange2.call.apply(_fieldProps$onChange2, [fieldProps].concat(restParams));
              return;
            }
            _onChange === null || _onChange === void 0 || _onChange.apply(void 0, restParams);
          }
        }, (children === null || children === void 0 ? void 0 : children.props) || {}));
      }
      return (0, import_jsx_runtime64.jsx)(import_jsx_runtime63.Fragment, {
        children
      });
    }
    return;
  }, [children, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.onChange, _onChange, restProps]);
  if (childrenRender) {
    return childrenRender;
  }
  return (0, import_jsx_runtime64.jsx)(es_default5, _objectSpread2(_objectSpread2(_objectSpread2({
    text: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps[valuePropName],
    render: render3,
    renderFormItem,
    valueType: valueType15 || "text",
    cacheForSwr,
    fieldProps: memoFieldProps,
    valueEnum: runFunction(valueEnum)
  }, proFieldProps), restProps), {}, {
    mode: (proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.mode) || modeContext.mode || "edit",
    params: propsParams
  }));
};
var ProFormField = createField((0, import_react51.memo)(BaseProFormField, function(prevProps, nextProps) {
  return isDeepEqualReact(nextProps, prevProps, ["onChange", "onBlur"]);
}));
var Field_default = ProFormField;

// node_modules/@ant-design/pro-form/es/components/Cascader/index.js
var import_jsx_runtime65 = __toESM(require_jsx_runtime());
var _excluded17 = ["fieldProps", "request", "params", "proFieldProps"];
var ProFormCascader = function ProFormCascader2(_ref, ref) {
  var fieldProps = _ref.fieldProps, request = _ref.request, params = _ref.params, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded17);
  var context = (0, import_react52.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime65.jsx)(Field_default, _objectSpread2({
    valueType: "cascader",
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    ref,
    request,
    params,
    filedConfig: {
      customLightMode: true
    },
    proFieldProps
  }, rest));
};
var Cascader_default2 = import_react52.default.forwardRef(ProFormCascader);

// node_modules/@ant-design/pro-form/es/components/Checkbox/index.js
var import_react53 = __toESM(require_react());
var import_jsx_runtime66 = __toESM(require_jsx_runtime());
var _excluded18 = ["options", "fieldProps", "proFieldProps", "valueEnum"];
var CheckboxGroup = import_react53.default.forwardRef(function(_ref, ref) {
  var options = _ref.options, fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, valueEnum = _ref.valueEnum, rest = _objectWithoutProperties(_ref, _excluded18);
  return (0, import_jsx_runtime66.jsx)(Field_default, _objectSpread2({
    ref,
    valueType: "checkbox",
    valueEnum: runFunction(valueEnum, void 0),
    fieldProps: _objectSpread2({
      options
    }, fieldProps),
    lightProps: _objectSpread2({
      labelFormatter: function labelFormatter() {
        return (0, import_jsx_runtime66.jsx)(Field_default, _objectSpread2({
          ref,
          valueType: "checkbox",
          mode: "read",
          valueEnum: runFunction(valueEnum, void 0),
          filedConfig: {
            customLightMode: true
          },
          fieldProps: _objectSpread2({
            options
          }, fieldProps),
          proFieldProps
        }, rest));
      }
    }, rest.lightProps),
    proFieldProps
  }, rest));
});
var ProFormCheckboxComponents = import_react53.default.forwardRef(function(_ref2, ref) {
  var fieldProps = _ref2.fieldProps, children = _ref2.children;
  return (0, import_jsx_runtime66.jsx)(checkbox_default, _objectSpread2(_objectSpread2({
    ref
  }, fieldProps), {}, {
    children
  }));
});
var ProFormCheckbox = createField(ProFormCheckboxComponents, {
  valuePropName: "checked"
});
var WrappedProFormCheckbox = ProFormCheckbox;
WrappedProFormCheckbox.Group = CheckboxGroup;

// node_modules/@ant-design/pro-form/es/components/ColorPicker/index.js
var import_react54 = __toESM(require_react());
var import_jsx_runtime67 = __toESM(require_jsx_runtime());
var _excluded19 = ["fieldProps", "popoverProps", "proFieldProps", "colors"];
var ProFormColorPicker = function ProFormColorPicker2(_ref, ref) {
  var fieldProps = _ref.fieldProps, popoverProps = _ref.popoverProps, proFieldProps = _ref.proFieldProps, colors = _ref.colors, rest = _objectWithoutProperties(_ref, _excluded19);
  return (0, import_jsx_runtime67.jsx)(Field_default, _objectSpread2({
    valueType: "color",
    fieldProps: _objectSpread2({
      popoverProps,
      colors
    }, fieldProps),
    ref,
    proFieldProps,
    filedConfig: {
      defaultProps: {
        width: "100%"
      }
    }
  }, rest));
};
var ColorPicker_default2 = import_react54.default.forwardRef(ProFormColorPicker);

// node_modules/@ant-design/pro-form/es/components/DateMonthRangePicker/index.js
var import_react55 = __toESM(require_react());
var import_jsx_runtime68 = __toESM(require_jsx_runtime());
var _excluded20 = ["fieldProps", "proFieldProps"];
var valueType = "dateMonthRange";
var DateMonthRangePicker = import_react55.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded20);
  var context = (0, import_react55.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime68.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType,
    proFieldProps,
    filedConfig: {
      valueType,
      customLightMode: true,
      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {
        return dateArrayFormatter(value, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || "YYYY-MM");
      }
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/DatePicker/DatePicker.js
var import_react56 = __toESM(require_react());
var import_jsx_runtime69 = __toESM(require_jsx_runtime());
var _excluded21 = ["proFieldProps", "fieldProps"];
var valueType2 = "date";
var ProFormDatePicker = import_react56.default.forwardRef(function(_ref, ref) {
  var proFieldProps = _ref.proFieldProps, fieldProps = _ref.fieldProps, rest = _objectWithoutProperties(_ref, _excluded21);
  var context = (0, import_react56.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime69.jsx)(Field_default, _objectSpread2({
    ref,
    valueType: valueType2,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    proFieldProps,
    filedConfig: {
      valueType: valueType2,
      customLightMode: true
    }
  }, rest));
});
var DatePicker_default2 = ProFormDatePicker;

// node_modules/@ant-design/pro-form/es/components/DatePicker/MonthPicker.js
var import_react57 = __toESM(require_react());
var import_jsx_runtime70 = __toESM(require_jsx_runtime());
var _excluded30 = ["proFieldProps", "fieldProps"];
var valueType3 = "dateMonth";
var ProFormDatePickerMonth = import_react57.default.forwardRef(function(_ref, ref) {
  var proFieldProps = _ref.proFieldProps, fieldProps = _ref.fieldProps, rest = _objectWithoutProperties(_ref, _excluded30);
  var context = (0, import_react57.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime70.jsx)(Field_default, _objectSpread2({
    ref,
    valueType: valueType3,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    proFieldProps,
    filedConfig: {
      valueType: valueType3,
      customLightMode: true
    }
  }, rest));
});
var MonthPicker_default = ProFormDatePickerMonth;

// node_modules/@ant-design/pro-form/es/components/DatePicker/QuarterPicker.js
var import_react58 = __toESM(require_react());
var import_jsx_runtime71 = __toESM(require_jsx_runtime());
var _excluded31 = ["fieldProps"];
var valueType4 = "dateQuarter";
var ProFormDatePickerQuarter = import_react58.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, rest = _objectWithoutProperties(_ref, _excluded31);
  var context = (0, import_react58.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime71.jsx)(Field_default, _objectSpread2({
    ref,
    valueType: valueType4,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    filedConfig: {
      valueType: valueType4,
      customLightMode: true
    }
  }, rest));
});
var QuarterPicker_default = ProFormDatePickerQuarter;

// node_modules/@ant-design/pro-form/es/components/DatePicker/WeekPicker.js
var import_react59 = __toESM(require_react());
var import_jsx_runtime72 = __toESM(require_jsx_runtime());
var _excluded33 = ["proFieldProps", "fieldProps"];
var valueType5 = "dateWeek";
var ProFormDatePickerWeek = import_react59.default.forwardRef(function(_ref, ref) {
  var proFieldProps = _ref.proFieldProps, fieldProps = _ref.fieldProps, rest = _objectWithoutProperties(_ref, _excluded33);
  var context = (0, import_react59.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime72.jsx)(Field_default, _objectSpread2({
    ref,
    valueType: valueType5,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    proFieldProps,
    filedConfig: {
      valueType: valueType5,
      customLightMode: true
    }
  }, rest));
});
var WeekPicker_default = ProFormDatePickerWeek;

// node_modules/@ant-design/pro-form/es/components/DatePicker/YearPicker.js
var import_react60 = __toESM(require_react());
var import_jsx_runtime73 = __toESM(require_jsx_runtime());
var _excluded34 = ["proFieldProps", "fieldProps"];
var valueType6 = "dateYear";
var ProFormDatePickerYear = import_react60.default.forwardRef(function(_ref, ref) {
  var proFieldProps = _ref.proFieldProps, fieldProps = _ref.fieldProps, rest = _objectWithoutProperties(_ref, _excluded34);
  var context = (0, import_react60.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime73.jsx)(Field_default, _objectSpread2({
    ref,
    valueType: valueType6,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    proFieldProps,
    filedConfig: {
      valueType: valueType6,
      customLightMode: true
    }
  }, rest));
});
var YearPicker_default = ProFormDatePickerYear;

// node_modules/@ant-design/pro-form/es/components/DatePicker/index.js
var ExportComponent = DatePicker_default2;
ExportComponent.Week = WeekPicker_default;
ExportComponent.Month = MonthPicker_default;
ExportComponent.Quarter = QuarterPicker_default;
ExportComponent.Year = YearPicker_default;
ExportComponent.displayName = "ProFormComponent";

// node_modules/@ant-design/pro-form/es/components/DateQuarterRangePicker/index.js
var import_react61 = __toESM(require_react());
var import_jsx_runtime74 = __toESM(require_jsx_runtime());
var _excluded35 = ["fieldProps", "proFieldProps"];
var valueType7 = "dateQuarterRange";
var DateQuarterRangePicker = import_react61.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded35);
  var context = (0, import_react61.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime74.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: valueType7,
    proFieldProps,
    filedConfig: {
      valueType: valueType7,
      customLightMode: true,
      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {
        return dateArrayFormatter(value, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || "YYYY-W");
      }
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/DateRangePicker/index.js
var import_react62 = __toESM(require_react());
var import_jsx_runtime75 = __toESM(require_jsx_runtime());
var _excluded36 = ["fieldProps", "proFieldProps"];
var valueType8 = "dateRange";
var ProFormDateRangePicker = import_react62.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded36);
  var context = (0, import_react62.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime75.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: valueType8,
    proFieldProps,
    filedConfig: {
      valueType: valueType8,
      customLightMode: true,
      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {
        return dateArrayFormatter(value, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || "YYYY-MM-DD");
      }
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/DateTimePicker/index.js
var import_react63 = __toESM(require_react());
var import_jsx_runtime76 = __toESM(require_jsx_runtime());
var _excluded37 = ["fieldProps", "proFieldProps"];
var valueType9 = "dateTime";
var ProFormDateTimePicker = import_react63.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded37);
  var context = (0, import_react63.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime76.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: valueType9,
    proFieldProps,
    filedConfig: {
      valueType: valueType9,
      customLightMode: true
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/DateTimeRangePicker/index.js
var import_react64 = __toESM(require_react());
var import_jsx_runtime77 = __toESM(require_jsx_runtime());
var _excluded38 = ["fieldProps", "proFieldProps"];
var valueType10 = "dateTimeRange";
var ProFormDateTimeRangePicker = import_react64.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded38);
  var context = (0, import_react64.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime77.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: valueType10,
    proFieldProps,
    filedConfig: {
      valueType: valueType10,
      customLightMode: true,
      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {
        return dateArrayFormatter(value, "YYYY-MM-DD HH:mm:ss");
      }
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/DateWeekRangePicker/index.js
var import_react65 = __toESM(require_react());
var import_jsx_runtime78 = __toESM(require_jsx_runtime());
var _excluded39 = ["fieldProps", "proFieldProps"];
var valueType11 = "dateWeekRange";
var DateWeekRangePicker = import_react65.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded39);
  var context = (0, import_react65.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime78.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: valueType11,
    proFieldProps,
    filedConfig: {
      valueType: valueType11,
      customLightMode: true,
      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {
        return dateArrayFormatter(value, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || "YYYY-MM-DD");
      }
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/DateYearRangePicker/index.js
var import_react66 = __toESM(require_react());
var import_jsx_runtime79 = __toESM(require_jsx_runtime());
var _excluded40 = ["fieldProps", "proFieldProps"];
var valueType12 = "dateYearRange";
var DateYearRangePicker = import_react66.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded40);
  var context = (0, import_react66.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime79.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: valueType12,
    proFieldProps,
    filedConfig: {
      valueType: valueType12,
      customLightMode: true,
      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {
        return dateArrayFormatter(value, (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.format) || "YYYY");
      }
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/Dependency/index.js
var import_react71 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/components/List/index.js
var import_classnames12 = __toESM(require_classnames());
var import_react70 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/components/List/ListContainer.js
var import_react68 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/components/List/ListItem.js
var import_classnames11 = __toESM(require_classnames());
var import_react67 = __toESM(require_react());
var import_jsx_runtime80 = __toESM(require_jsx_runtime());
var import_jsx_runtime81 = __toESM(require_jsx_runtime());
var _excluded41 = ["creatorButtonProps", "deleteIconProps", "copyIconProps", "itemContainerRender", "itemRender", "alwaysShowItemLabel", "prefixCls", "creatorRecord", "action", "actionGuard", "children", "actionRender", "fields", "meta", "field", "index", "formInstance", "originName", "containerClassName", "containerStyle", "min", "max", "count"];
var listToArray = function listToArray2(children) {
  if (Array.isArray(children)) {
    return children;
  }
  if (typeof children === "function") {
    return [children];
  }
  return toArray(children);
};
var ProFormListItem = function ProFormListItem2(props) {
  var _ConfigProvider$useCo, _formInstance$getFiel2;
  var creatorButtonProps = props.creatorButtonProps, deleteIconProps = props.deleteIconProps, copyIconProps = props.copyIconProps, itemContainerRender = props.itemContainerRender, itemRender = props.itemRender, alwaysShowItemLabel = props.alwaysShowItemLabel, prefixCls = props.prefixCls, creatorRecord = props.creatorRecord, action = props.action, actionGuard = props.actionGuard, children = props.children, actionRender = props.actionRender, fields = props.fields, meta = props.meta, field3 = props.field, index = props.index, formInstance = props.formInstance, originName = props.originName, containerClassName = props.containerClassName, containerStyle = props.containerStyle, min = props.min, max = props.max, count = props.count, rest = _objectWithoutProperties(props, _excluded41);
  var _useContext = (0, import_react67.useContext)(ProProvider), hashId = _useContext.hashId;
  var _ref = ((_ConfigProvider$useCo = config_provider_default.useConfig) === null || _ConfigProvider$useCo === void 0 ? void 0 : _ConfigProvider$useCo.call(config_provider_default)) || {
    componentSize: "middle"
  }, componentSize = _ref.componentSize;
  var listContext = (0, import_react67.useContext)(FormListContext);
  var unmountedRef = (0, import_react67.useRef)(false);
  var _useContext2 = (0, import_react67.useContext)(EditOrReadOnlyContext), mode = _useContext2.mode;
  var _useState = (0, import_react67.useState)(false), _useState2 = _slicedToArray(_useState, 2), loadingRemove = _useState2[0], setLoadingRemove = _useState2[1];
  var _useState3 = (0, import_react67.useState)(false), _useState4 = _slicedToArray(_useState3, 2), loadingCopy = _useState4[0], setLoadingCopy = _useState4[1];
  (0, import_react67.useEffect)(function() {
    return function() {
      unmountedRef.current = true;
    };
  }, []);
  var getCurrentRowData = function getCurrentRowData2() {
    return formInstance.getFieldValue([listContext.listName, originName, index === null || index === void 0 ? void 0 : index.toString()].flat(1).filter(function(item) {
      return item !== null && item !== void 0;
    }));
  };
  var formListAction = {
    getCurrentRowData,
    setCurrentRowData: function setCurrentRowData(data) {
      var _formInstance$getFiel;
      var oldTableDate = (formInstance === null || formInstance === void 0 || (_formInstance$getFiel = formInstance.getFieldsValue) === null || _formInstance$getFiel === void 0 ? void 0 : _formInstance$getFiel.call(formInstance)) || {};
      var rowKeyName = [listContext.listName, originName, index === null || index === void 0 ? void 0 : index.toString()].flat(1).filter(function(item) {
        return item !== null && item !== void 0;
      });
      var updateValues = set(oldTableDate, rowKeyName, _objectSpread2(_objectSpread2({}, getCurrentRowData()), data || {}));
      return formInstance.setFieldsValue(updateValues);
    }
  };
  var childrenArray = listToArray(children).map(function(childrenItem) {
    if (typeof childrenItem === "function") {
      return childrenItem === null || childrenItem === void 0 ? void 0 : childrenItem(field3, index, _objectSpread2(_objectSpread2({}, action), formListAction), count);
    }
    return childrenItem;
  }).map(function(childrenItem, itemIndex) {
    if (import_react67.default.isValidElement(childrenItem)) {
      var _childrenItem$props;
      return import_react67.default.cloneElement(childrenItem, _objectSpread2({
        key: childrenItem.key || (childrenItem === null || childrenItem === void 0 || (_childrenItem$props = childrenItem.props) === null || _childrenItem$props === void 0 ? void 0 : _childrenItem$props.name) || itemIndex
      }, (childrenItem === null || childrenItem === void 0 ? void 0 : childrenItem.props) || {}));
    }
    return childrenItem;
  });
  var copyIcon = (0, import_react67.useMemo)(function() {
    if (mode === "read") return null;
    if (copyIconProps === false || max === count) return null;
    var _ref2 = copyIconProps, _ref2$Icon = _ref2.Icon, Icon = _ref2$Icon === void 0 ? CopyOutlined_default : _ref2$Icon, tooltipText = _ref2.tooltipText;
    return (0, import_jsx_runtime80.jsx)(tooltip_default, {
      title: tooltipText,
      children: loadingCopy ? (0, import_jsx_runtime80.jsx)(LoadingOutlined_default, {}) : (0, import_jsx_runtime80.jsx)(Icon, {
        className: (0, import_classnames11.default)("".concat(prefixCls, "-action-icon action-copy"), hashId),
        onClick: _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
          var row;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                setLoadingCopy(true);
                row = formInstance === null || formInstance === void 0 ? void 0 : formInstance.getFieldValue([listContext.listName, originName, field3.name].filter(function(item) {
                  return item !== void 0;
                }).flat(1));
                _context.next = 4;
                return action.add(row);
              case 4:
                setLoadingCopy(false);
              case 5:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }))
      })
    }, "copy");
  }, [copyIconProps, max, count, loadingCopy, prefixCls, hashId, formInstance, listContext.listName, field3.name, originName, action]);
  var deleteIcon = (0, import_react67.useMemo)(function() {
    if (mode === "read") return null;
    if (deleteIconProps === false || min === count) return null;
    var _ref4 = deleteIconProps, _ref4$Icon = _ref4.Icon, Icon = _ref4$Icon === void 0 ? DeleteOutlined_default : _ref4$Icon, tooltipText = _ref4.tooltipText;
    return (0, import_jsx_runtime80.jsx)(tooltip_default, {
      title: tooltipText,
      children: loadingRemove ? (0, import_jsx_runtime80.jsx)(LoadingOutlined_default, {}) : (0, import_jsx_runtime80.jsx)(Icon, {
        className: (0, import_classnames11.default)("".concat(prefixCls, "-action-icon action-remove"), hashId),
        onClick: _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
          return _regeneratorRuntime().wrap(function _callee2$(_context2) {
            while (1) switch (_context2.prev = _context2.next) {
              case 0:
                setLoadingRemove(true);
                _context2.next = 3;
                return action.remove(field3.name);
              case 3:
                if (!unmountedRef.current) {
                  setLoadingRemove(false);
                }
              case 4:
              case "end":
                return _context2.stop();
            }
          }, _callee2);
        }))
      })
    }, "delete");
  }, [deleteIconProps, min, count, loadingRemove, prefixCls, hashId, action, field3.name]);
  var defaultActionDom = (0, import_react67.useMemo)(function() {
    return [copyIcon, deleteIcon].filter(function(item) {
      return item !== null && item !== void 0;
    });
  }, [copyIcon, deleteIcon]);
  var actions = (actionRender === null || actionRender === void 0 ? void 0 : actionRender(field3, action, defaultActionDom, count)) || defaultActionDom;
  var dom = actions.length > 0 && mode !== "read" ? (0, import_jsx_runtime80.jsx)("div", {
    className: (0, import_classnames11.default)("".concat(prefixCls, "-action"), _defineProperty({}, "".concat(prefixCls, "-action-small"), componentSize === "small"), hashId),
    children: actions
  }) : null;
  var options = {
    name: rest.name,
    field: field3,
    index,
    record: formInstance === null || formInstance === void 0 || (_formInstance$getFiel2 = formInstance.getFieldValue) === null || _formInstance$getFiel2 === void 0 ? void 0 : _formInstance$getFiel2.call(formInstance, [listContext.listName, originName, field3.name].filter(function(item) {
      return item !== void 0;
    }).flat(1)),
    fields,
    operation: action,
    meta
  };
  var _useGridHelpers = useGridHelpers(), grid = _useGridHelpers.grid;
  var itemContainer = (itemContainerRender === null || itemContainerRender === void 0 ? void 0 : itemContainerRender(childrenArray, options)) || childrenArray;
  var contentDom = (itemRender === null || itemRender === void 0 ? void 0 : itemRender({
    listDom: (0, import_jsx_runtime80.jsx)("div", {
      className: (0, import_classnames11.default)("".concat(prefixCls, "-container"), containerClassName, hashId),
      style: _objectSpread2({
        width: grid ? "100%" : void 0
      }, containerStyle),
      children: itemContainer
    }),
    action: dom
  }, options)) || (0, import_jsx_runtime81.jsxs)("div", {
    className: (0, import_classnames11.default)("".concat(prefixCls, "-item"), hashId, _defineProperty(_defineProperty({}, "".concat(prefixCls, "-item-default"), alwaysShowItemLabel === void 0), "".concat(prefixCls, "-item-show-label"), alwaysShowItemLabel)),
    style: {
      display: "flex",
      alignItems: "flex-end"
    },
    children: [(0, import_jsx_runtime80.jsx)("div", {
      className: (0, import_classnames11.default)("".concat(prefixCls, "-container"), containerClassName, hashId),
      style: _objectSpread2({
        width: grid ? "100%" : void 0
      }, containerStyle),
      children: itemContainer
    }), dom]
  });
  return (0, import_jsx_runtime80.jsx)(FormListContext.Provider, {
    value: _objectSpread2(_objectSpread2({}, field3), {}, {
      listName: [listContext.listName, originName, field3.name].filter(function(item) {
        return item !== void 0;
      }).flat(1)
    }),
    children: contentDom
  });
};

// node_modules/@ant-design/pro-form/es/components/List/ListContainer.js
var import_jsx_runtime82 = __toESM(require_jsx_runtime());
var import_react69 = __toESM(require_react());
var import_jsx_runtime83 = __toESM(require_jsx_runtime());
var import_jsx_runtime84 = __toESM(require_jsx_runtime());
var ProFormListContainer = function ProFormListContainer2(props) {
  var intl = useIntl();
  var creatorButtonProps = props.creatorButtonProps, prefixCls = props.prefixCls, children = props.children, creatorRecord = props.creatorRecord, action = props.action, fields = props.fields, actionGuard = props.actionGuard, max = props.max, fieldExtraRender = props.fieldExtraRender, meta = props.meta, containerClassName = props.containerClassName, containerStyle = props.containerStyle, onAfterAdd = props.onAfterAdd, onAfterRemove = props.onAfterRemove;
  var _useContext = (0, import_react68.useContext)(ProProvider), hashId = _useContext.hashId;
  var fieldKeyMap = (0, import_react68.useRef)(/* @__PURE__ */ new Map());
  var _useState = (0, import_react68.useState)(false), _useState2 = _slicedToArray(_useState, 2), loading = _useState2[0], setLoading = _useState2[1];
  var uuidFields = (0, import_react68.useMemo)(function() {
    return fields.map(function(field3) {
      var _fieldKeyMap$current, _fieldKeyMap$current3;
      if (!((_fieldKeyMap$current = fieldKeyMap.current) !== null && _fieldKeyMap$current !== void 0 && _fieldKeyMap$current.has(field3.key.toString()))) {
        var _fieldKeyMap$current2;
        (_fieldKeyMap$current2 = fieldKeyMap.current) === null || _fieldKeyMap$current2 === void 0 || _fieldKeyMap$current2.set(field3.key.toString(), nanoid());
      }
      var uuid = (_fieldKeyMap$current3 = fieldKeyMap.current) === null || _fieldKeyMap$current3 === void 0 ? void 0 : _fieldKeyMap$current3.get(field3.key.toString());
      return _objectSpread2(_objectSpread2({}, field3), {}, {
        uuid
      });
    });
  }, [fields]);
  var wrapperAction = (0, import_react68.useMemo)(function() {
    var wrapAction = _objectSpread2({}, action);
    var count = uuidFields.length;
    if (actionGuard !== null && actionGuard !== void 0 && actionGuard.beforeAddRow) {
      wrapAction.add = _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
        var _len, rest, _key, success2, res, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              for (_len = _args.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {
                rest[_key] = _args[_key];
              }
              _context.next = 3;
              return actionGuard.beforeAddRow.apply(actionGuard, rest.concat([count]));
            case 3:
              success2 = _context.sent;
              if (!success2) {
                _context.next = 8;
                break;
              }
              res = action.add.apply(action, rest);
              onAfterAdd === null || onAfterAdd === void 0 || onAfterAdd.apply(void 0, rest.concat([count + 1]));
              return _context.abrupt("return", res);
            case 8:
              return _context.abrupt("return", false);
            case 9:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
    } else {
      wrapAction.add = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
        var _len2, rest, _key2, res, _args2 = arguments;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              for (_len2 = _args2.length, rest = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                rest[_key2] = _args2[_key2];
              }
              res = action.add.apply(action, rest);
              onAfterAdd === null || onAfterAdd === void 0 || onAfterAdd.apply(void 0, rest.concat([count + 1]));
              return _context2.abrupt("return", res);
            case 4:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
    }
    if (actionGuard !== null && actionGuard !== void 0 && actionGuard.beforeRemoveRow) {
      wrapAction.remove = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
        var _len3, rest, _key3, success2, res, _args3 = arguments;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              for (_len3 = _args3.length, rest = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                rest[_key3] = _args3[_key3];
              }
              _context3.next = 3;
              return actionGuard.beforeRemoveRow.apply(actionGuard, rest.concat([count]));
            case 3:
              success2 = _context3.sent;
              if (!success2) {
                _context3.next = 8;
                break;
              }
              res = action.remove.apply(action, rest);
              onAfterRemove === null || onAfterRemove === void 0 || onAfterRemove.apply(void 0, rest.concat([count - 1]));
              return _context3.abrupt("return", res);
            case 8:
              return _context3.abrupt("return", false);
            case 9:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
    } else {
      wrapAction.remove = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {
        var _len4, rest, _key4, res, _args4 = arguments;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              for (_len4 = _args4.length, rest = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
                rest[_key4] = _args4[_key4];
              }
              res = action.remove.apply(action, rest);
              onAfterRemove === null || onAfterRemove === void 0 || onAfterRemove.apply(void 0, rest.concat([count - 1]));
              return _context4.abrupt("return", res);
            case 4:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
    }
    return wrapAction;
  }, [action, actionGuard === null || actionGuard === void 0 ? void 0 : actionGuard.beforeAddRow, actionGuard === null || actionGuard === void 0 ? void 0 : actionGuard.beforeRemoveRow, onAfterAdd, onAfterRemove, uuidFields.length]);
  var creatorButton = (0, import_react68.useMemo)(function() {
    if (creatorButtonProps === false || uuidFields.length === max) return null;
    var _ref5 = creatorButtonProps || {}, _ref5$position = _ref5.position, position = _ref5$position === void 0 ? "bottom" : _ref5$position, _ref5$creatorButtonTe = _ref5.creatorButtonText, creatorButtonText = _ref5$creatorButtonTe === void 0 ? intl.getMessage("editableTable.action.add", "添加一行数据") : _ref5$creatorButtonTe;
    return (0, import_jsx_runtime82.jsx)(button_default, _objectSpread2(_objectSpread2({
      className: "".concat(prefixCls, "-creator-button-").concat(position, " ").concat(hashId || "").trim(),
      type: "dashed",
      loading,
      block: true,
      icon: (0, import_jsx_runtime82.jsx)(PlusOutlined_default, {})
    }, es_default3(creatorButtonProps || {}, ["position", "creatorButtonText"])), {}, {
      onClick: _asyncToGenerator(_regeneratorRuntime().mark(function _callee5() {
        var _runFunction;
        var index;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              setLoading(true);
              index = uuidFields.length;
              if (position === "top") index = 0;
              _context5.next = 5;
              return wrapperAction.add((_runFunction = runFunction(creatorRecord)) !== null && _runFunction !== void 0 ? _runFunction : {}, index);
            case 5:
              setLoading(false);
            case 6:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      })),
      children: creatorButtonText
    }));
  }, [creatorButtonProps, uuidFields.length, max, intl, prefixCls, hashId, loading, wrapperAction, creatorRecord]);
  var readOnlyContext = (0, import_react68.useContext)(EditOrReadOnlyContext);
  var defaultStyle = _objectSpread2({
    width: "max-content",
    maxWidth: "100%",
    minWidth: "100%"
  }, containerStyle);
  var itemList = (0, import_react68.useMemo)(function() {
    return uuidFields.map(function(field3, index) {
      return (0, import_react69.createElement)(ProFormListItem, _objectSpread2(_objectSpread2({}, props), {}, {
        key: field3.uuid,
        field: field3,
        index,
        action: wrapperAction,
        count: uuidFields.length
      }), children);
    });
  }, [children, props, uuidFields, wrapperAction]);
  if (readOnlyContext.mode === "read" || props.readonly === true) {
    return (0, import_jsx_runtime82.jsx)(import_jsx_runtime83.Fragment, {
      children: itemList
    });
  }
  return (0, import_jsx_runtime84.jsxs)("div", {
    style: defaultStyle,
    className: containerClassName,
    children: [creatorButtonProps !== false && (creatorButtonProps === null || creatorButtonProps === void 0 ? void 0 : creatorButtonProps.position) === "top" && creatorButton, itemList, fieldExtraRender && fieldExtraRender(wrapperAction, meta), creatorButtonProps !== false && (creatorButtonProps === null || creatorButtonProps === void 0 ? void 0 : creatorButtonProps.position) !== "top" && creatorButton]
  });
};

// node_modules/@ant-design/pro-form/es/components/List/style.js
var genProStyle = function genProStyle2(token) {
  return _defineProperty(_defineProperty({}, "".concat(token.antCls, "-pro"), _defineProperty({}, "".concat(token.antCls, "-form:not(").concat(token.antCls, "-form-horizontal)"), _defineProperty({}, token.componentCls, _defineProperty({}, "&-item:not(".concat(token.componentCls, "-item-show-label)"), _defineProperty({}, "".concat(token.antCls, "-form-item-label"), {
    display: "none"
  }))))), token.componentCls, _defineProperty(_defineProperty({
    maxWidth: "100%",
    "&-item": {
      "&&-show-label": _defineProperty({}, "".concat(token.antCls, "-form-item-label"), {
        display: "inline-block"
      }),
      "&&-default:first-child": {
        "div:first-of-type": _defineProperty({}, "".concat(token.antCls, "-form-item"), _defineProperty({}, "".concat(token.antCls, "-form-item-label"), {
          display: "inline-block"
        }))
      },
      "&&-default:not(:first-child)": {
        "div:first-of-type": _defineProperty({}, "".concat(token.antCls, "-form-item"), _defineProperty({}, "".concat(token.antCls, "-form-item-label"), {
          display: "none"
        }))
      }
    },
    "&-action": {
      display: "flex",
      height: token.controlHeight,
      marginBlockEnd: token.marginLG,
      lineHeight: token.controlHeight + "px",
      "&-small": {
        height: token.controlHeightSM,
        lineHeight: token.controlHeightSM
      }
    },
    "&-action-icon": {
      marginInlineStart: 8,
      cursor: "pointer",
      transition: "color 0.3s ease-in-out",
      "&:hover": {
        color: token.colorPrimaryTextHover
      }
    }
  }, "".concat(token.proComponentsCls, "-card ").concat(token.proComponentsCls, "-card-extra"), _defineProperty({}, token.componentCls, {
    "&-action": {
      marginBlockEnd: 0
    }
  })), "&-creator-button-top", {
    marginBlockEnd: 24
  }));
};
function useStyle2(prefixCls) {
  return useStyle("ProFormList", function(token) {
    var proToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle(proToken)];
  });
}

// node_modules/@ant-design/pro-form/es/components/List/index.js
var import_jsx_runtime85 = __toESM(require_jsx_runtime());
var import_jsx_runtime86 = __toESM(require_jsx_runtime());
var _excluded43 = ["transform", "actionRender", "creatorButtonProps", "label", "alwaysShowItemLabel", "tooltip", "creatorRecord", "itemRender", "rules", "itemContainerRender", "fieldExtraRender", "copyIconProps", "children", "deleteIconProps", "actionRef", "style", "prefixCls", "actionGuard", "min", "max", "colProps", "wrapperCol", "rowProps", "onAfterAdd", "onAfterRemove", "isValidateList", "emptyListMessage", "className", "containerClassName", "containerStyle", "readonly"];
var FormListContext = import_react70.default.createContext({});
function ProFormList(props) {
  var actionRefs = (0, import_react70.useRef)();
  var context = (0, import_react70.useContext)(config_provider_default.ConfigContext);
  var listContext = (0, import_react70.useContext)(FormListContext);
  var baseClassName = context.getPrefixCls("pro-form-list");
  var intl = useIntl();
  var _React$useContext = import_react70.default.useContext(FieldContext_default2), setFieldValueType = _React$useContext.setFieldValueType;
  var transform = props.transform, actionRender = props.actionRender, creatorButtonProps = props.creatorButtonProps, label = props.label, alwaysShowItemLabel = props.alwaysShowItemLabel, tooltip = props.tooltip, creatorRecord = props.creatorRecord, itemRender = props.itemRender, rules = props.rules, itemContainerRender = props.itemContainerRender, fieldExtraRender = props.fieldExtraRender, _props$copyIconProps = props.copyIconProps, copyIconProps = _props$copyIconProps === void 0 ? {
    Icon: CopyOutlined_default,
    tooltipText: intl.getMessage("copyThisLine", "复制此项")
  } : _props$copyIconProps, _children = props.children, _props$deleteIconProp = props.deleteIconProps, deleteIconProps = _props$deleteIconProp === void 0 ? {
    Icon: DeleteOutlined_default,
    tooltipText: intl.getMessage("deleteThisLine", "删除此项")
  } : _props$deleteIconProp, actionRef = props.actionRef, style = props.style, prefixCls = props.prefixCls, actionGuard = props.actionGuard, min = props.min, max = props.max, colProps = props.colProps, wrapperCol = props.wrapperCol, rowProps = props.rowProps, _onAfterAdd = props.onAfterAdd, _onAfterRemove = props.onAfterRemove, _props$isValidateList = props.isValidateList, isValidateList = _props$isValidateList === void 0 ? false : _props$isValidateList, _props$emptyListMessa = props.emptyListMessage, emptyListMessage = _props$emptyListMessa === void 0 ? "列表不能为空" : _props$emptyListMessa, className = props.className, containerClassName = props.containerClassName, containerStyle = props.containerStyle, readonly = props.readonly, rest = _objectWithoutProperties(props, _excluded43);
  var _useGridHelpers = useGridHelpers({
    colProps,
    rowProps
  }), ColWrapper = _useGridHelpers.ColWrapper, RowWrapper = _useGridHelpers.RowWrapper;
  var proFormContext = (0, import_react70.useContext)(ProFormContext);
  var name = (0, import_react70.useMemo)(function() {
    if (listContext.name === void 0) {
      return [rest.name].flat(1);
    }
    return [listContext.name, rest.name].flat(1);
  }, [listContext.name, rest.name]);
  (0, import_react70.useImperativeHandle)(actionRef, function() {
    return _objectSpread2(_objectSpread2({}, actionRefs.current), {}, {
      get: function get4(index) {
        return proFormContext.formRef.current.getFieldValue([].concat(_toConsumableArray(name), [index]));
      },
      getList: function getList() {
        return proFormContext.formRef.current.getFieldValue(_toConsumableArray(name));
      }
    });
  }, [name, proFormContext.formRef]);
  (0, import_react70.useEffect)(function() {
    noteOnce(!!proFormContext.formRef, "ProFormList 必须要放到 ProForm 中,否则会造成行为异常。");
    noteOnce(!!proFormContext.formRef, "Proformlist must be placed in ProForm, otherwise it will cause abnormal behavior.");
  }, [proFormContext.formRef]);
  (0, import_react70.useEffect)(function() {
    if (!setFieldValueType || !props.name) {
      return;
    }
    setFieldValueType([props.name].flat(1).filter(function(itemName) {
      return itemName !== void 0;
    }), {
      valueType: "formList",
      transform
    });
  }, [props.name, setFieldValueType, transform]);
  var _useStyle = useStyle2(baseClassName), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  if (!proFormContext.formRef) return null;
  return wrapSSR((0, import_jsx_runtime85.jsx)(ColWrapper, {
    children: (0, import_jsx_runtime85.jsx)("div", {
      className: (0, import_classnames12.default)(baseClassName, hashId),
      style,
      children: (0, import_jsx_runtime85.jsx)(form_default.Item, _objectSpread2(_objectSpread2({
        label,
        prefixCls,
        tooltip,
        style,
        required: rules === null || rules === void 0 ? void 0 : rules.some(function(rule) {
          return rule.required;
        }),
        wrapperCol,
        className
      }, rest), {}, {
        name: isValidateList ? name : void 0,
        rules: isValidateList ? [{
          validator: function validator(rule, value) {
            if (!value || value.length === 0) {
              return Promise.reject(new Error(emptyListMessage));
            }
            return Promise.resolve();
          },
          required: true
        }] : void 0,
        children: (0, import_jsx_runtime85.jsx)(form_default.List, _objectSpread2(_objectSpread2({
          rules
        }, rest), {}, {
          name,
          children: function children(fields, action, meta) {
            actionRefs.current = action;
            return (0, import_jsx_runtime86.jsxs)(RowWrapper, {
              children: [(0, import_jsx_runtime85.jsx)(ProFormListContainer, {
                name,
                readonly: !!readonly,
                originName: rest.name,
                copyIconProps,
                deleteIconProps,
                formInstance: proFormContext.formRef.current,
                prefixCls: baseClassName,
                meta,
                fields,
                itemContainerRender,
                itemRender,
                fieldExtraRender,
                creatorButtonProps,
                creatorRecord,
                actionRender,
                action,
                actionGuard,
                alwaysShowItemLabel,
                min,
                max,
                count: fields.length,
                onAfterAdd: function onAfterAdd(defaultValue2, insertIndex, count) {
                  if (isValidateList) {
                    proFormContext.formRef.current.validateFields([name]);
                  }
                  _onAfterAdd === null || _onAfterAdd === void 0 || _onAfterAdd(defaultValue2, insertIndex, count);
                },
                onAfterRemove: function onAfterRemove(index, count) {
                  if (isValidateList) {
                    if (count === 0) {
                      proFormContext.formRef.current.validateFields([name]);
                    }
                  }
                  _onAfterRemove === null || _onAfterRemove === void 0 || _onAfterRemove(index, count);
                },
                containerClassName,
                containerStyle,
                children: _children
              }), (0, import_jsx_runtime85.jsx)(form_default.ErrorList, {
                errors: meta.errors
              })]
            });
          }
        }))
      }))
    })
  }));
}

// node_modules/@ant-design/pro-form/es/components/Dependency/index.js
var import_jsx_runtime87 = __toESM(require_jsx_runtime());
var _excluded44 = ["name", "originDependencies", "children", "ignoreFormListField"];
var ProFormDependency = function ProFormDependency2(_ref) {
  var nameList = _ref.name, _ref$originDependenci = _ref.originDependencies, originDependencies = _ref$originDependenci === void 0 ? nameList : _ref$originDependenci, _children = _ref.children, ignoreFormListField = _ref.ignoreFormListField, rest = _objectWithoutProperties(_ref, _excluded44);
  var context = (0, import_react71.useContext)(ProFormContext);
  var formListField = (0, import_react71.useContext)(FormListContext);
  var flattenNames = (0, import_react71.useMemo)(function() {
    return nameList.map(function(itemName) {
      var _formListField$listNa;
      var name = [itemName];
      if (!ignoreFormListField && formListField.name !== void 0 && (_formListField$listNa = formListField.listName) !== null && _formListField$listNa !== void 0 && _formListField$listNa.length) {
        name.unshift(formListField.listName);
      }
      return name.flat(1);
    });
  }, [formListField.listName, formListField.name, ignoreFormListField, nameList === null || nameList === void 0 ? void 0 : nameList.toString()]);
  return (0, import_jsx_runtime87.jsx)(form_default.Item, _objectSpread2(_objectSpread2({}, rest), {}, {
    noStyle: true,
    shouldUpdate: function shouldUpdate(prevValues, nextValues, info) {
      if (typeof rest.shouldUpdate === "boolean") {
        return rest.shouldUpdate;
      } else if (typeof rest.shouldUpdate === "function") {
        var _rest$shouldUpdate;
        return (_rest$shouldUpdate = rest.shouldUpdate) === null || _rest$shouldUpdate === void 0 ? void 0 : _rest$shouldUpdate.call(rest, prevValues, nextValues, info);
      }
      return flattenNames.some(function(name) {
        return !isDeepEqualReact(get(prevValues, name), get(nextValues, name));
      });
    },
    children: function children(form) {
      var values = {};
      for (var i = 0; i < nameList.length; i++) {
        var _context$getFieldForm;
        var itemName = flattenNames[i], itemOriginName = originDependencies[i];
        var finalName = [itemOriginName].flat(1);
        var value = (_context$getFieldForm = context.getFieldFormatValueObject) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, itemName);
        if (value && Object.keys(value).length) {
          values = merge({}, values, value);
          if (get(value, itemName)) {
            values = set(values, finalName, get(value, itemName));
          }
        } else {
          var _form$getFieldValue;
          value = (_form$getFieldValue = form.getFieldValue) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.call(form, itemName);
          if (typeof value !== "undefined") {
            values = set(values, finalName, value);
          }
        }
      }
      return _children === null || _children === void 0 ? void 0 : _children(values, _objectSpread2(_objectSpread2({}, form), context));
    }
  }));
};
ProFormDependency.displayName = "ProFormDependency";
var Dependency_default = ProFormDependency;

// node_modules/@ant-design/pro-form/es/components/Digit/index.js
var import_react72 = __toESM(require_react());
var import_jsx_runtime88 = __toESM(require_jsx_runtime());
var _excluded45 = ["fieldProps", "min", "proFieldProps", "max"];
var ProFormDigit = function ProFormDigit2(_ref, ref) {
  var fieldProps = _ref.fieldProps, min = _ref.min, proFieldProps = _ref.proFieldProps, max = _ref.max, rest = _objectWithoutProperties(_ref, _excluded45);
  return (0, import_jsx_runtime88.jsx)(Field_default, _objectSpread2({
    valueType: "digit",
    fieldProps: _objectSpread2({
      min,
      max
    }, fieldProps),
    ref,
    filedConfig: {
      defaultProps: {
        width: "100%"
      }
    },
    proFieldProps
  }, rest));
};
var ForwardRefProFormDigit = import_react72.default.forwardRef(ProFormDigit);

// node_modules/@ant-design/pro-form/es/components/DigitRange/index.js
var import_react73 = __toESM(require_react());
var import_jsx_runtime89 = __toESM(require_jsx_runtime());
var _excluded46 = ["fieldProps", "proFieldProps"];
var ProFormDigit3 = function ProFormDigit4(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded46);
  return (0, import_jsx_runtime89.jsx)(Field_default, _objectSpread2({
    valueType: "digitRange",
    fieldProps: _objectSpread2({}, fieldProps),
    ref,
    filedConfig: {
      defaultProps: {
        width: "100%"
      }
    },
    proFieldProps
  }, rest));
};
var DigitRange_default2 = import_react73.default.forwardRef(ProFormDigit3);

// node_modules/@ant-design/pro-form/es/components/FieldSet/index.js
var import_react74 = __toESM(require_react());
var import_jsx_runtime90 = __toESM(require_jsx_runtime());
var _excluded47 = ["children", "value", "valuePropName", "onChange", "fieldProps", "space", "type", "transform", "convertValue", "lightProps"];
var _excluded210 = ["children", "space", "valuePropName"];
var FieldSetType = {
  space: space_default,
  group: input_default.Group
};
function defaultGetValueFromEvent(valuePropName) {
  var event = arguments.length <= 1 ? void 0 : arguments[1];
  if (event && event.target && valuePropName in event.target) {
    return event.target[valuePropName];
  }
  return event;
}
var FieldSet = function FieldSet2(props) {
  var children = props.children, _props$value = props.value, value = _props$value === void 0 ? [] : _props$value, valuePropName = props.valuePropName, onChange = props.onChange, fieldProps = props.fieldProps, space = props.space, _props$type = props.type, type = _props$type === void 0 ? "space" : _props$type, transform = props.transform, convertValue = props.convertValue, lightProps = props.lightProps, rest = _objectWithoutProperties(props, _excluded47);
  var fieldSetOnChange = useRefFunction(function(fileValue, index) {
    var _fieldProps$onChange;
    var newValues = _toConsumableArray(value);
    newValues[index] = defaultGetValueFromEvent(valuePropName || "value", fileValue);
    onChange === null || onChange === void 0 || onChange(newValues);
    fieldProps === null || fieldProps === void 0 || (_fieldProps$onChange = fieldProps.onChange) === null || _fieldProps$onChange === void 0 || _fieldProps$onChange.call(fieldProps, newValues);
  });
  var itemIndex = -1;
  var list = toArray(runFunction(children, value, props)).map(function(item) {
    if (import_react74.default.isValidElement(item)) {
      var _item$type, _item$props, _item$props2;
      itemIndex += 1;
      var index = itemIndex;
      var isProFromItem = (
        // @ts-ignore
        (item === null || item === void 0 || (_item$type = item.type) === null || _item$type === void 0 ? void 0 : _item$type.displayName) === "ProFormComponent" || (item === null || item === void 0 || (_item$props = item.props) === null || _item$props === void 0 ? void 0 : _item$props.readonly)
      );
      var forkProps = isProFromItem ? _objectSpread2(_objectSpread2({
        key: index,
        ignoreFormItem: true
      }, item.props || {}), {}, {
        // 如果不是我们自定义的组件 fieldProps 无法识别
        fieldProps: _objectSpread2(_objectSpread2({}, item === null || item === void 0 || (_item$props2 = item.props) === null || _item$props2 === void 0 ? void 0 : _item$props2.fieldProps), {}, {
          onChange: function onChange2() {
            fieldSetOnChange(arguments.length <= 0 ? void 0 : arguments[0], index);
          }
        }),
        value: value === null || value === void 0 ? void 0 : value[index],
        onChange: void 0
      }) : _objectSpread2(_objectSpread2({
        key: index
      }, item.props || {}), {}, {
        value: value === null || value === void 0 ? void 0 : value[index],
        onChange: function onChange2(itemValue) {
          var _props$onChange, _props;
          fieldSetOnChange(itemValue, index);
          (_props$onChange = (_props = item.props).onChange) === null || _props$onChange === void 0 || _props$onChange.call(_props, itemValue);
        }
      });
      return import_react74.default.cloneElement(item, forkProps);
    }
    return item;
  });
  var Components = FieldSetType[type];
  var _useGridHelpers = useGridHelpers(rest), RowWrapper = _useGridHelpers.RowWrapper;
  var typeProps = (0, import_react74.useMemo)(function() {
    return _objectSpread2({}, type === "group" ? {
      compact: true
    } : {});
  }, [type]);
  var Wrapper = (0, import_react74.useCallback)(function(_ref) {
    var dom = _ref.children;
    return (0, import_jsx_runtime90.jsx)(Components, _objectSpread2(_objectSpread2(_objectSpread2({}, typeProps), space), {}, {
      align: "start",
      wrap: true,
      children: dom
    }));
  }, [Components, space, typeProps]);
  return (0, import_jsx_runtime90.jsx)(RowWrapper, {
    Wrapper,
    children: list
  });
};
var BaseProFormFieldSet = import_react74.default.forwardRef(function(_ref2, ref) {
  var children = _ref2.children, space = _ref2.space, valuePropName = _ref2.valuePropName, rest = _objectWithoutProperties(_ref2, _excluded210);
  (0, import_react74.useImperativeHandle)(ref, function() {
    return {};
  });
  return (0, import_jsx_runtime90.jsx)(FieldSet, _objectSpread2(_objectSpread2(_objectSpread2({
    space,
    valuePropName
  }, rest.fieldProps), {}, {
    // 把 fieldProps 里的重置掉
    onChange: void 0
  }, rest), {}, {
    children
  }));
});
var ProFormFieldSet = createField(BaseProFormFieldSet);
var FieldSet_default = ProFormFieldSet;

// node_modules/@ant-design/pro-form/es/components/FormItem/index.js
var import_react75 = __toESM(require_react());
var import_jsx_runtime91 = __toESM(require_jsx_runtime());
var import_jsx_runtime92 = __toESM(require_jsx_runtime());
var import_jsx_runtime93 = __toESM(require_jsx_runtime());
var import_react76 = __toESM(require_react());
var _excluded48 = ["children", "onChange", "onBlur", "ignoreFormItem", "valuePropName"];
var _excluded211 = ["children", "addonAfter", "addonBefore", "valuePropName", "addonWarpStyle", "convertValue", "help"];
var _excluded310 = ["valueType", "transform", "dataFormat", "ignoreFormItem", "lightProps", "children"];
var FormItemProvide = import_react75.default.createContext({});
var WithValueFomFiledProps = function WithValueFomFiledProps2(formFieldProps) {
  var _filedChildren$type, _filedChildren$props9;
  var filedChildren = formFieldProps.children, onChange = formFieldProps.onChange, onBlur = formFieldProps.onBlur, ignoreFormItem = formFieldProps.ignoreFormItem, _formFieldProps$value = formFieldProps.valuePropName, valuePropName = _formFieldProps$value === void 0 ? "value" : _formFieldProps$value, restProps = _objectWithoutProperties(formFieldProps, _excluded48);
  var isProFormComponent = (
    // @ts-ignore
    (filedChildren === null || filedChildren === void 0 || (_filedChildren$type = filedChildren.type) === null || _filedChildren$type === void 0 ? void 0 : _filedChildren$type.displayName) !== "ProFormComponent"
  );
  var isValidElementForFiledChildren = !import_react75.default.isValidElement(filedChildren);
  var onChangeMemo = useRefFunction(function() {
    var _filedChildren$props, _filedChildren$props$, _filedChildren$props2, _filedChildren$props3;
    for (var _len = arguments.length, restParams = new Array(_len), _key = 0; _key < _len; _key++) {
      restParams[_key] = arguments[_key];
    }
    onChange === null || onChange === void 0 || onChange.apply(void 0, restParams);
    if (isProFormComponent) return;
    if (isValidElementForFiledChildren) return void 0;
    filedChildren === null || filedChildren === void 0 || (_filedChildren$props = filedChildren.props) === null || _filedChildren$props === void 0 || (_filedChildren$props$ = _filedChildren$props.onChange) === null || _filedChildren$props$ === void 0 || _filedChildren$props$.call.apply(_filedChildren$props$, [_filedChildren$props].concat(restParams));
    filedChildren === null || filedChildren === void 0 || (_filedChildren$props2 = filedChildren.props) === null || _filedChildren$props2 === void 0 || (_filedChildren$props2 = _filedChildren$props2.fieldProps) === null || _filedChildren$props2 === void 0 || (_filedChildren$props3 = _filedChildren$props2.onChange) === null || _filedChildren$props3 === void 0 || _filedChildren$props3.call.apply(_filedChildren$props3, [_filedChildren$props2].concat(restParams));
  });
  var onBlurMemo = useRefFunction(function() {
    var _filedChildren$props4, _filedChildren$props5, _filedChildren$props6, _filedChildren$props7;
    if (isProFormComponent) return;
    if (isValidElementForFiledChildren) return;
    for (var _len2 = arguments.length, restParams = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      restParams[_key2] = arguments[_key2];
    }
    onBlur === null || onBlur === void 0 || onBlur.apply(void 0, restParams);
    filedChildren === null || filedChildren === void 0 || (_filedChildren$props4 = filedChildren.props) === null || _filedChildren$props4 === void 0 || (_filedChildren$props5 = _filedChildren$props4.onBlur) === null || _filedChildren$props5 === void 0 || _filedChildren$props5.call.apply(_filedChildren$props5, [_filedChildren$props4].concat(restParams));
    filedChildren === null || filedChildren === void 0 || (_filedChildren$props6 = filedChildren.props) === null || _filedChildren$props6 === void 0 || (_filedChildren$props6 = _filedChildren$props6.fieldProps) === null || _filedChildren$props6 === void 0 || (_filedChildren$props7 = _filedChildren$props6.onBlur) === null || _filedChildren$props7 === void 0 || _filedChildren$props7.call.apply(_filedChildren$props7, [_filedChildren$props6].concat(restParams));
  });
  var omitOnBlurAndOnChangeProps = useDeepCompareMemo_default(function() {
    var _filedChildren$props8;
    return es_default3(
      // @ts-ignore
      (filedChildren === null || filedChildren === void 0 || (_filedChildren$props8 = filedChildren.props) === null || _filedChildren$props8 === void 0 ? void 0 : _filedChildren$props8.fieldProps) || {},
      ["onBlur", "onChange"]
    );
  }, [es_default3(
    // @ts-ignore
    (filedChildren === null || filedChildren === void 0 || (_filedChildren$props9 = filedChildren.props) === null || _filedChildren$props9 === void 0 ? void 0 : _filedChildren$props9.fieldProps) || {},
    ["onBlur", "onChange"]
  )]);
  var propsValuePropName = formFieldProps[valuePropName];
  var fieldProps = (0, import_react75.useMemo)(function() {
    if (isProFormComponent) return void 0;
    if (isValidElementForFiledChildren) return void 0;
    return omitUndefined(_objectSpread2(_objectSpread2(_defineProperty({
      id: restProps.id
    }, valuePropName, propsValuePropName), omitOnBlurAndOnChangeProps), {}, {
      onBlur: onBlurMemo,
      // 这个 onChange 是 Form.Item 添加上的，
      // 要通过 fieldProps 透传给 ProField 调用
      onChange: onChangeMemo
    }));
  }, [propsValuePropName, omitOnBlurAndOnChangeProps, onBlurMemo, onChangeMemo, restProps.id, valuePropName]);
  var finalChange = (0, import_react75.useMemo)(function() {
    if (fieldProps) return void 0;
    if (!import_react75.default.isValidElement(filedChildren)) return void 0;
    return function() {
      var _filedChildren$props10, _filedChildren$props11;
      for (var _len3 = arguments.length, restParams = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        restParams[_key3] = arguments[_key3];
      }
      onChange === null || onChange === void 0 || onChange.apply(void 0, restParams);
      filedChildren === null || filedChildren === void 0 || (_filedChildren$props10 = filedChildren.props) === null || _filedChildren$props10 === void 0 || (_filedChildren$props11 = _filedChildren$props10.onChange) === null || _filedChildren$props11 === void 0 || _filedChildren$props11.call.apply(_filedChildren$props11, [_filedChildren$props10].concat(restParams));
    };
  }, [fieldProps, filedChildren, onChange]);
  if (!import_react75.default.isValidElement(filedChildren)) return (0, import_jsx_runtime92.jsx)(import_jsx_runtime91.Fragment, {
    children: filedChildren
  });
  return import_react75.default.cloneElement(filedChildren, omitUndefined(_objectSpread2(_objectSpread2(_objectSpread2({}, restProps), {}, _defineProperty({}, valuePropName, formFieldProps[valuePropName]), filedChildren.props), {}, {
    onChange: finalChange,
    fieldProps,
    onBlur: isProFormComponent && !isValidElementForFiledChildren && onBlur
  })));
};
var WarpFormItem = function WarpFormItem2(_ref) {
  var children = _ref.children, addonAfter = _ref.addonAfter, addonBefore = _ref.addonBefore, valuePropName = _ref.valuePropName, addonWarpStyle = _ref.addonWarpStyle, convertValue = _ref.convertValue, help = _ref.help, props = _objectWithoutProperties(_ref, _excluded211);
  var formDom = (0, import_react75.useMemo)(function() {
    var getValuePropsFunc = function getValuePropsFunc2(value) {
      var _convertValue;
      var newValue = (_convertValue = convertValue === null || convertValue === void 0 ? void 0 : convertValue(value, props.name)) !== null && _convertValue !== void 0 ? _convertValue : value;
      if (props.getValueProps) return props.getValueProps(newValue);
      return _defineProperty({}, valuePropName || "value", newValue);
    };
    if (!convertValue && !props.getValueProps) {
      getValuePropsFunc = void 0;
    }
    if (!addonAfter && !addonBefore) {
      return (0, import_jsx_runtime92.jsx)(form_default.Item, _objectSpread2(_objectSpread2({}, props), {}, {
        help: typeof help !== "function" ? help : void 0,
        valuePropName,
        getValueProps: getValuePropsFunc,
        _internalItemRender: {
          mark: "pro_table_render",
          render: function render3(inputProps, doms) {
            return (0, import_jsx_runtime93.jsxs)(import_jsx_runtime91.Fragment, {
              children: [doms.input, typeof help === "function" ? help({
                errors: inputProps.errors,
                warnings: inputProps.warnings
              }) : doms.errorList, doms.extra]
            });
          }
        },
        children
      }));
    }
    return (0, import_jsx_runtime92.jsx)(form_default.Item, _objectSpread2(_objectSpread2(_objectSpread2({}, props), {}, {
      help: typeof help !== "function" ? help : void 0,
      valuePropName,
      _internalItemRender: {
        mark: "pro_table_render",
        render: function render3(inputProps, doms) {
          return (0, import_jsx_runtime93.jsxs)(import_jsx_runtime91.Fragment, {
            children: [(0, import_jsx_runtime93.jsxs)("div", {
              style: _objectSpread2({
                display: "flex",
                alignItems: "center",
                flexWrap: "wrap"
              }, addonWarpStyle),
              children: [addonBefore ? (0, import_jsx_runtime92.jsx)("div", {
                style: {
                  marginInlineEnd: 8
                },
                children: addonBefore
              }) : null, doms.input, addonAfter ? (0, import_jsx_runtime92.jsx)("div", {
                style: {
                  marginInlineStart: 8
                },
                children: addonAfter
              }) : null]
            }), typeof help === "function" ? help({
              errors: inputProps.errors,
              warnings: inputProps.warnings
            }) : doms.errorList, doms.extra]
          });
        }
      }
    }, props), {}, {
      getValueProps: getValuePropsFunc,
      children
    }));
  }, [addonAfter, addonBefore, children, convertValue === null || convertValue === void 0 ? void 0 : convertValue.toString(), props]);
  return (0, import_jsx_runtime92.jsx)(FormItemProvide.Provider, {
    value: {
      name: props.name,
      label: props.label
    },
    children: formDom
  });
};
var ProFormItem = function ProFormItem2(props) {
  var _ConfigProvider$useCo, _rest$name2, _rest$name3, _rest$name4;
  var _ref3 = (config_provider_default === null || config_provider_default === void 0 || (_ConfigProvider$useCo = config_provider_default.useConfig) === null || _ConfigProvider$useCo === void 0 ? void 0 : _ConfigProvider$useCo.call(config_provider_default)) || {
    componentSize: "middle"
  }, componentSize = _ref3.componentSize;
  var size = componentSize;
  var valueType15 = props.valueType, transform = props.transform, dataFormat = props.dataFormat, ignoreFormItem = props.ignoreFormItem, lightProps = props.lightProps, unusedChildren = props.children, rest = _objectWithoutProperties(props, _excluded310);
  var formListField = (0, import_react75.useContext)(FormListContext);
  var name = (0, import_react75.useMemo)(function() {
    if (props.name === void 0) return props.name;
    if (formListField.name !== void 0) {
      return [formListField.name, props.name].flat(1);
    }
    return props.name;
  }, [formListField.name, props.name]);
  var _React$useContext = import_react75.default.useContext(FieldContext_default2), setFieldValueType = _React$useContext.setFieldValueType, formItemProps = _React$useContext.formItemProps;
  (0, import_react75.useEffect)(function() {
    if (!setFieldValueType || !props.name) {
      return;
    }
    setFieldValueType([formListField.listName, props.name].flat(1).filter(function(itemName) {
      return itemName !== void 0;
    }), {
      valueType: valueType15 || "text",
      dateFormat: dataFormat,
      transform
    });
  }, [formListField.listName, name, dataFormat, props.name, setFieldValueType, transform, valueType15]);
  var isDropdown = import_react75.default.isValidElement(props.children) && isDropdownValueType(valueType15 || props.children.props.valueType);
  var noLightFormItem = (0, import_react75.useMemo)(function() {
    if (!(lightProps !== null && lightProps !== void 0 && lightProps.light) || lightProps !== null && lightProps !== void 0 && lightProps.customLightMode || isDropdown) {
      return true;
    }
    return false;
  }, [lightProps === null || lightProps === void 0 ? void 0 : lightProps.customLightMode, isDropdown, lightProps === null || lightProps === void 0 ? void 0 : lightProps.light]);
  if (typeof props.children === "function") {
    var _rest$name;
    return (0, import_react76.createElement)(WarpFormItem, _objectSpread2(_objectSpread2({}, rest), {}, {
      name,
      key: rest.proFormFieldKey || ((_rest$name = rest.name) === null || _rest$name === void 0 ? void 0 : _rest$name.toString())
    }), props.children);
  }
  var children = (0, import_jsx_runtime92.jsx)(WithValueFomFiledProps, {
    valuePropName: props.valuePropName,
    children: props.children
  }, rest.proFormFieldKey || ((_rest$name2 = rest.name) === null || _rest$name2 === void 0 ? void 0 : _rest$name2.toString()));
  var lightDom = noLightFormItem ? children : (0, import_react76.createElement)(LightWrapper, _objectSpread2(_objectSpread2({}, lightProps), {}, {
    key: rest.proFormFieldKey || ((_rest$name3 = rest.name) === null || _rest$name3 === void 0 ? void 0 : _rest$name3.toString()),
    size
  }), children);
  if (ignoreFormItem) {
    return (0, import_jsx_runtime92.jsx)(import_jsx_runtime91.Fragment, {
      children: lightDom
    });
  }
  return (0, import_jsx_runtime92.jsx)(WarpFormItem, _objectSpread2(_objectSpread2(_objectSpread2({}, formItemProps), rest), {}, {
    name,
    isListField: formListField.name !== void 0,
    children: lightDom
  }), rest.proFormFieldKey || ((_rest$name4 = rest.name) === null || _rest$name4 === void 0 ? void 0 : _rest$name4.toString()));
};
var FormItem_default = ProFormItem;

// node_modules/@ant-design/pro-form/es/components/FormItemRender/index.js
var import_react77 = __toESM(require_react());
var import_jsx_runtime94 = __toESM(require_jsx_runtime());
var _excluded49 = ["children"];
var _excluded212 = ["children"];
function FormControlRender(props) {
  var children = props.children, restProps = _objectWithoutProperties(props, _excluded49);
  var _Form$Item$useStatus = form_default.Item.useStatus(), status = _Form$Item$useStatus.status, errors = _Form$Item$useStatus.errors, warnings = _Form$Item$useStatus.warnings;
  return children(_objectSpread2({
    status,
    errors,
    warnings
  }, restProps));
}
function withFormItemRender(Comp) {
  return function(props) {
    var children = props.children, restProps = _objectWithoutProperties(props, _excluded212);
    return (0, import_jsx_runtime94.jsx)(Comp, _objectSpread2(_objectSpread2({}, restProps), {}, {
      children: (0, import_jsx_runtime94.jsx)(FormControlRender, {
        children
      })
    }));
  };
}
var FormItemRender = withFormItemRender(form_default.Item);
var ProFormItemRender = withFormItemRender(FormItem_default);

// node_modules/@ant-design/pro-form/es/components/Group/index.js
var import_classnames13 = __toESM(require_classnames());
var import_react78 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/components/Group/style.js
var genProStyle3 = function genProStyle4(token) {
  return _defineProperty({}, token.componentCls, {
    "&-title": {
      marginBlockEnd: token.marginXL,
      fontWeight: "bold"
    },
    "&-container": _defineProperty({
      flexWrap: "wrap",
      maxWidth: "100%"
    }, "> div".concat(token.antCls, "-space-item"), {
      maxWidth: "100%"
    }),
    "&-twoLine": _defineProperty(_defineProperty(_defineProperty(_defineProperty({
      display: "block",
      width: "100%"
    }, "".concat(token.componentCls, "-title"), {
      width: "100%",
      margin: "8px 0"
    }), "".concat(token.componentCls, "-container"), {
      paddingInlineStart: 16
    }), "".concat(token.antCls, "-space-item,").concat(token.antCls, "-form-item"), {
      width: "100%"
    }), "".concat(token.antCls, "-form-item"), {
      "&-control": {
        display: "flex",
        alignItems: "center",
        justifyContent: "flex-end",
        "&-input": {
          alignItems: "center",
          justifyContent: "flex-end",
          "&-content": {
            flex: "none"
          }
        }
      }
    })
  });
};
function useStyle3(prefixCls) {
  return useStyle("ProFormGroup", function(token) {
    var proToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle3(proToken)];
  });
}

// node_modules/@ant-design/pro-form/es/components/Group/index.js
var import_jsx_runtime95 = __toESM(require_jsx_runtime());
var import_jsx_runtime96 = __toESM(require_jsx_runtime());
var Group = import_react78.default.forwardRef(function(props, ref) {
  var _React$useContext = import_react78.default.useContext(FieldContext_default2), groupProps = _React$useContext.groupProps;
  var _groupProps$props = _objectSpread2(_objectSpread2({}, groupProps), props), children = _groupProps$props.children, collapsible = _groupProps$props.collapsible, defaultCollapsed = _groupProps$props.defaultCollapsed, style = _groupProps$props.style, labelLayout = _groupProps$props.labelLayout, _groupProps$props$tit = _groupProps$props.title, title = _groupProps$props$tit === void 0 ? props.label : _groupProps$props$tit, tooltip = _groupProps$props.tooltip, _groupProps$props$ali = _groupProps$props.align, align = _groupProps$props$ali === void 0 ? "start" : _groupProps$props$ali, direction = _groupProps$props.direction, _groupProps$props$siz = _groupProps$props.size, size = _groupProps$props$siz === void 0 ? 32 : _groupProps$props$siz, titleStyle = _groupProps$props.titleStyle, titleRender = _groupProps$props.titleRender, spaceProps = _groupProps$props.spaceProps, extra = _groupProps$props.extra, autoFocus = _groupProps$props.autoFocus;
  var _useMountMergeState = useMergedState(function() {
    return defaultCollapsed || false;
  }, {
    value: props.collapsed,
    onChange: props.onCollapse
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), collapsed = _useMountMergeState2[0], setCollapsed = _useMountMergeState2[1];
  var _useContext = (0, import_react78.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var _useGridHelpers = useGridHelpers(props), ColWrapper = _useGridHelpers.ColWrapper, RowWrapper = _useGridHelpers.RowWrapper;
  var className = getPrefixCls("pro-form-group");
  var _useStyle = useStyle3(className), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var collapsibleButton = collapsible && (0, import_jsx_runtime95.jsx)(RightOutlined_default, {
    style: {
      marginInlineEnd: 8
    },
    rotate: !collapsed ? 90 : void 0
  });
  var label = (0, import_jsx_runtime95.jsx)(LabelIconTip, {
    label: collapsibleButton ? (0, import_jsx_runtime96.jsxs)("div", {
      children: [collapsibleButton, title]
    }) : title,
    tooltip
  });
  var Wrapper = (0, import_react78.useCallback)(function(_ref) {
    var dom = _ref.children;
    return (0, import_jsx_runtime95.jsx)(space_default, _objectSpread2(_objectSpread2({}, spaceProps), {}, {
      className: (0, import_classnames13.default)("".concat(className, "-container ").concat(hashId), spaceProps === null || spaceProps === void 0 ? void 0 : spaceProps.className),
      size,
      align,
      direction,
      style: _objectSpread2({
        rowGap: 0
      }, spaceProps === null || spaceProps === void 0 ? void 0 : spaceProps.style),
      children: dom
    }));
  }, [align, className, direction, hashId, size, spaceProps]);
  var titleDom = titleRender ? titleRender(label, props) : label;
  var _useMemo = (0, import_react78.useMemo)(function() {
    var hiddenChildren = [];
    var childrenList = import_react78.default.Children.toArray(children).map(function(element, index) {
      var _element$props;
      if (import_react78.default.isValidElement(element) && element !== null && element !== void 0 && (_element$props = element.props) !== null && _element$props !== void 0 && _element$props.hidden) {
        hiddenChildren.push(element);
        return null;
      }
      if (index === 0 && import_react78.default.isValidElement(element) && autoFocus) {
        return import_react78.default.cloneElement(element, _objectSpread2(_objectSpread2({}, element.props), {}, {
          autoFocus
        }));
      }
      return element;
    });
    return [(0, import_jsx_runtime95.jsx)(RowWrapper, {
      Wrapper,
      children: childrenList
    }, "children"), hiddenChildren.length > 0 ? (0, import_jsx_runtime95.jsx)("div", {
      style: {
        display: "none"
      },
      children: hiddenChildren
    }) : null];
  }, [children, RowWrapper, Wrapper, autoFocus]), _useMemo2 = _slicedToArray(_useMemo, 2), childrenDoms = _useMemo2[0], hiddenDoms = _useMemo2[1];
  return wrapSSR((0, import_jsx_runtime95.jsx)(ColWrapper, {
    children: (0, import_jsx_runtime96.jsxs)("div", {
      className: (0, import_classnames13.default)(className, hashId, _defineProperty({}, "".concat(className, "-twoLine"), labelLayout === "twoLine")),
      style,
      ref,
      children: [hiddenDoms, (title || tooltip || extra) && (0, import_jsx_runtime95.jsx)("div", {
        className: "".concat(className, "-title ").concat(hashId).trim(),
        style: titleStyle,
        onClick: function onClick() {
          setCollapsed(!collapsed);
        },
        children: extra ? (0, import_jsx_runtime96.jsxs)("div", {
          style: {
            display: "flex",
            width: "100%",
            alignItems: "center",
            justifyContent: "space-between"
          },
          children: [titleDom, (0, import_jsx_runtime95.jsx)("span", {
            onClick: function onClick(e) {
              return e.stopPropagation();
            },
            children: extra
          })]
        }) : titleDom
      }), (0, import_jsx_runtime95.jsx)("div", {
        style: {
          display: collapsible && collapsed ? "none" : void 0
        },
        children: childrenDoms
      })]
    })
  }));
});
Group.displayName = "ProForm-Group";
var Group_default = Group;

// node_modules/@ant-design/pro-form/es/components/Money/index.js
var import_react79 = __toESM(require_react());
var import_jsx_runtime97 = __toESM(require_jsx_runtime());
var _excluded50 = ["fieldProps", "proFieldProps", "locale", "min", "max"];
var ProFormMoney = function ProFormMoney2(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, locale = _ref.locale, min = _ref.min, max = _ref.max, rest = _objectWithoutProperties(_ref, _excluded50);
  return (0, import_jsx_runtime97.jsx)(Field_default, _objectSpread2({
    valueType: {
      type: "money",
      locale
    },
    fieldProps: _objectSpread2({
      min,
      max
    }, fieldProps),
    ref,
    filedConfig: {
      defaultProps: {
        width: "100%"
      }
    },
    proFieldProps
  }, rest));
};
var Money_default2 = import_react79.default.forwardRef(ProFormMoney);

// node_modules/@ant-design/pro-form/es/components/Radio/index.js
var import_react80 = __toESM(require_react());
var import_jsx_runtime98 = __toESM(require_jsx_runtime());
var _excluded51 = ["fieldProps", "options", "radioType", "layout", "proFieldProps", "valueEnum"];
var RadioGroup = import_react80.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, options = _ref.options, radioType = _ref.radioType, layout = _ref.layout, proFieldProps = _ref.proFieldProps, valueEnum = _ref.valueEnum, rest = _objectWithoutProperties(_ref, _excluded51);
  return (0, import_jsx_runtime98.jsx)(Field_default, _objectSpread2(_objectSpread2({
    valueType: radioType === "button" ? "radioButton" : "radio",
    ref,
    valueEnum: runFunction(valueEnum, void 0)
  }, rest), {}, {
    fieldProps: _objectSpread2({
      options,
      layout
    }, fieldProps),
    proFieldProps,
    filedConfig: {
      customLightMode: true
    }
  }));
});
var ProFormRadioComponents = import_react80.default.forwardRef(function(_ref2, ref) {
  var fieldProps = _ref2.fieldProps, children = _ref2.children;
  return (0, import_jsx_runtime98.jsx)(radio_default, _objectSpread2(_objectSpread2({}, fieldProps), {}, {
    ref,
    children
  }));
});
var ProFormRadio = createField(ProFormRadioComponents, {
  valuePropName: "checked",
  ignoreWidth: true
});
var WrappedProFormRadio = ProFormRadio;
WrappedProFormRadio.Group = RadioGroup;
WrappedProFormRadio.Button = radio_default.Button;
WrappedProFormRadio.displayName = "ProFormComponent";

// node_modules/@ant-design/pro-form/es/components/Rate/index.js
var import_react81 = __toESM(require_react());
var import_jsx_runtime99 = __toESM(require_jsx_runtime());
var _excluded53 = ["fieldProps", "proFieldProps"];
var ProFormRate = function ProFormRate2(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded53);
  return (0, import_jsx_runtime99.jsx)(Field_default, _objectSpread2({
    valueType: "rate",
    fieldProps,
    ref,
    proFieldProps,
    filedConfig: {
      ignoreWidth: true
    }
  }, rest));
};
var Rate_default2 = import_react81.default.forwardRef(ProFormRate);

// node_modules/@ant-design/pro-form/es/components/SchemaForm/index.js
var import_react97 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/layouts/DrawerForm/index.js
var import_classnames14 = __toESM(require_classnames());
var import_react82 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@ant-design/pro-form/es/layouts/DrawerForm/style.js
var genDrawerFormStyle = function genDrawerFormStyle2(token) {
  return _defineProperty({}, token.componentCls, {
    "&-sidebar-dragger": {
      width: "5px",
      cursor: "ew-resize",
      padding: "4px 0 0",
      borderTop: "1px solid transparent",
      position: "absolute",
      top: 0,
      left: 0,
      bottom: 0,
      zIndex: 100,
      backgroundColor: "transparent",
      "&-min-disabled": {
        cursor: "w-resize"
      },
      "&-max-disabled": {
        cursor: "e-resize"
      }
    }
  });
};
function useStyle4(prefixCls) {
  return useStyle("DrawerForm", function(token) {
    var drawerFormToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genDrawerFormStyle(drawerFormToken)];
  });
}

// node_modules/@ant-design/pro-form/es/layouts/DrawerForm/index.js
var import_jsx_runtime100 = __toESM(require_jsx_runtime());
var import_jsx_runtime101 = __toESM(require_jsx_runtime());
var import_jsx_runtime102 = __toESM(require_jsx_runtime());
var _excluded54 = ["children", "trigger", "onVisibleChange", "drawerProps", "onFinish", "submitTimeout", "title", "width", "resize", "onOpenChange", "visible", "open"];
function DrawerForm(_ref) {
  var _context$locale3, _context$locale4;
  var children = _ref.children, trigger = _ref.trigger, onVisibleChange = _ref.onVisibleChange, drawerProps = _ref.drawerProps, onFinish = _ref.onFinish, submitTimeout = _ref.submitTimeout, title = _ref.title, width = _ref.width, resize = _ref.resize, onOpenChange = _ref.onOpenChange, propVisible = _ref.visible, propsOpen = _ref.open, rest = _objectWithoutProperties(_ref, _excluded54);
  noteOnce(
    // eslint-disable-next-line @typescript-eslint/dot-notation
    !rest["footer"] || !(drawerProps !== null && drawerProps !== void 0 && drawerProps.footer),
    "DrawerForm 是一个 ProForm 的特殊布局，如果想自定义按钮，请使用 submit.render 自定义。"
  );
  var resizeInfo = import_react82.default.useMemo(function() {
    var _resize$onResize, _resize$maxWidth, _resize$minWidth;
    var defaultResize = {
      onResize: function onResize() {
      },
      maxWidth: isBrowser() ? window.innerWidth * 0.8 : void 0,
      minWidth: 300
    };
    if (typeof resize === "boolean") {
      if (resize) {
        return defaultResize;
      } else {
        return {};
      }
    }
    return omitUndefined({
      onResize: (_resize$onResize = resize === null || resize === void 0 ? void 0 : resize.onResize) !== null && _resize$onResize !== void 0 ? _resize$onResize : defaultResize.onResize,
      maxWidth: (_resize$maxWidth = resize === null || resize === void 0 ? void 0 : resize.maxWidth) !== null && _resize$maxWidth !== void 0 ? _resize$maxWidth : defaultResize.maxWidth,
      minWidth: (_resize$minWidth = resize === null || resize === void 0 ? void 0 : resize.minWidth) !== null && _resize$minWidth !== void 0 ? _resize$minWidth : defaultResize.minWidth
    });
  }, [resize]);
  var context = (0, import_react82.useContext)(config_provider_default.ConfigContext);
  var baseClassName = context.getPrefixCls("pro-form-drawer");
  var _useStyle = useStyle4(baseClassName), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var getCls = function getCls2(className) {
    return "".concat(baseClassName, "-").concat(className, " ").concat(hashId);
  };
  var _useState = (0, import_react82.useState)([]), _useState2 = _slicedToArray(_useState, 2), forceUpdate = _useState2[1];
  var _useState3 = (0, import_react82.useState)(false), _useState4 = _slicedToArray(_useState3, 2), loading = _useState4[0], setLoading = _useState4[1];
  var _useState5 = (0, import_react82.useState)(false), _useState6 = _slicedToArray(_useState5, 2), resizableDrawer = _useState6[0], setResizableDrawer = _useState6[1];
  var _useState7 = (0, import_react82.useState)(width ? width : resize ? resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.minWidth : 800), _useState8 = _slicedToArray(_useState7, 2), drawerWidth = _useState8[0], setDrawerWidth = _useState8[1];
  var _useMergedState = useMergedState(!!propVisible, {
    value: propsOpen || propVisible,
    onChange: onOpenChange || onVisibleChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), open = _useMergedState2[0], setOpen = _useMergedState2[1];
  var footerRef = (0, import_react82.useRef)(null);
  var footerDomRef = (0, import_react82.useCallback)(function(element) {
    if (footerRef.current === null && element) {
      forceUpdate([]);
    }
    footerRef.current = element;
  }, []);
  var formRef = (0, import_react82.useRef)();
  var resetFields = (0, import_react82.useCallback)(function() {
    var _ref2, _rest$formRef$current, _rest$formRef;
    var form = (_ref2 = (_rest$formRef$current = (_rest$formRef = rest.formRef) === null || _rest$formRef === void 0 ? void 0 : _rest$formRef.current) !== null && _rest$formRef$current !== void 0 ? _rest$formRef$current : rest.form) !== null && _ref2 !== void 0 ? _ref2 : formRef.current;
    if (form && drawerProps !== null && drawerProps !== void 0 && drawerProps.destroyOnClose) {
      form.resetFields();
    }
  }, [drawerProps === null || drawerProps === void 0 ? void 0 : drawerProps.destroyOnClose, rest.form, rest.formRef]);
  (0, import_react82.useEffect)(function() {
    if (open && (propsOpen || propVisible)) {
      onOpenChange === null || onOpenChange === void 0 || onOpenChange(true);
      onVisibleChange === null || onVisibleChange === void 0 || onVisibleChange(true);
    }
    if (resizableDrawer) {
      setDrawerWidth(resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.minWidth);
    }
  }, [propVisible, open, resizableDrawer]);
  (0, import_react82.useImperativeHandle)(rest.formRef, function() {
    return formRef.current;
  }, [formRef.current]);
  var triggerDom = (0, import_react82.useMemo)(function() {
    if (!trigger) {
      return null;
    }
    return import_react82.default.cloneElement(trigger, _objectSpread2(_objectSpread2({
      key: "trigger"
    }, trigger.props), {}, {
      onClick: function() {
        var _onClick = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(e) {
          var _trigger$props, _trigger$props$onClic;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                setOpen(!open);
                setResizableDrawer(!Object.keys(resizeInfo));
                (_trigger$props = trigger.props) === null || _trigger$props === void 0 || (_trigger$props$onClic = _trigger$props.onClick) === null || _trigger$props$onClic === void 0 || _trigger$props$onClic.call(_trigger$props, e);
              case 3:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        function onClick(_x) {
          return _onClick.apply(this, arguments);
        }
        return onClick;
      }()
    }));
  }, [setOpen, trigger, open, setResizableDrawer, resizableDrawer]);
  var submitterConfig = (0, import_react82.useMemo)(function() {
    var _context$locale$Modal, _context$locale, _context$locale$Modal2, _context$locale2;
    if (rest.submitter === false) {
      return false;
    }
    return merge_default({
      searchConfig: {
        submitText: (_context$locale$Modal = (_context$locale = context.locale) === null || _context$locale === void 0 || (_context$locale = _context$locale.Modal) === null || _context$locale === void 0 ? void 0 : _context$locale.okText) !== null && _context$locale$Modal !== void 0 ? _context$locale$Modal : "确认",
        resetText: (_context$locale$Modal2 = (_context$locale2 = context.locale) === null || _context$locale2 === void 0 || (_context$locale2 = _context$locale2.Modal) === null || _context$locale2 === void 0 ? void 0 : _context$locale2.cancelText) !== null && _context$locale$Modal2 !== void 0 ? _context$locale$Modal2 : "取消"
      },
      resetButtonProps: {
        preventDefault: true,
        // 提交表单loading时，不可关闭弹框
        disabled: submitTimeout ? loading : void 0,
        onClick: function onClick(e) {
          var _drawerProps$onClose;
          setOpen(false);
          drawerProps === null || drawerProps === void 0 || (_drawerProps$onClose = drawerProps.onClose) === null || _drawerProps$onClose === void 0 || _drawerProps$onClose.call(drawerProps, e);
        }
      }
    }, rest.submitter);
  }, [rest.submitter, (_context$locale3 = context.locale) === null || _context$locale3 === void 0 || (_context$locale3 = _context$locale3.Modal) === null || _context$locale3 === void 0 ? void 0 : _context$locale3.okText, (_context$locale4 = context.locale) === null || _context$locale4 === void 0 || (_context$locale4 = _context$locale4.Modal) === null || _context$locale4 === void 0 ? void 0 : _context$locale4.cancelText, submitTimeout, loading, setOpen, drawerProps]);
  var contentRender = (0, import_react82.useCallback)(function(formDom, submitter) {
    return (0, import_jsx_runtime102.jsxs)(import_jsx_runtime101.Fragment, {
      children: [formDom, footerRef.current && submitter ? (0, import_jsx_runtime100.jsx)(import_react82.default.Fragment, {
        children: (0, import_react_dom.createPortal)(submitter, footerRef.current)
      }, "submitter") : submitter]
    });
  }, []);
  var onFinishHandle = useRefFunction(function() {
    var _ref3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(values) {
      var response, timer, result;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            response = onFinish === null || onFinish === void 0 ? void 0 : onFinish(values);
            if (submitTimeout && response instanceof Promise) {
              setLoading(true);
              timer = setTimeout(function() {
                return setLoading(false);
              }, submitTimeout);
              response.finally(function() {
                clearTimeout(timer);
                setLoading(false);
              });
            }
            _context2.next = 4;
            return response;
          case 4:
            result = _context2.sent;
            if (result) {
              setOpen(false);
            }
            return _context2.abrupt("return", result);
          case 7:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function(_x2) {
      return _ref3.apply(this, arguments);
    };
  }());
  var drawerOpenProps = openVisibleCompatible(open, onVisibleChange);
  var cbHandleMouseMove = (0, import_react82.useCallback)(function(e) {
    var _resizeInfo$minWidth, _resizeInfo$maxWidth;
    var offsetRight = (document.body.offsetWidth || 1e3) - (e.clientX - document.body.offsetLeft);
    var minWidth = (_resizeInfo$minWidth = resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.minWidth) !== null && _resizeInfo$minWidth !== void 0 ? _resizeInfo$minWidth : width || 800;
    var maxWidth = (_resizeInfo$maxWidth = resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.maxWidth) !== null && _resizeInfo$maxWidth !== void 0 ? _resizeInfo$maxWidth : window.innerWidth * 0.8;
    if (offsetRight < minWidth) {
      setDrawerWidth(minWidth);
      return;
    }
    if (offsetRight > maxWidth) {
      setDrawerWidth(maxWidth);
      return;
    }
    setDrawerWidth(offsetRight);
  }, [resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.maxWidth, resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.minWidth, width]);
  var cbHandleMouseUp = (0, import_react82.useCallback)(function() {
    document.removeEventListener("mousemove", cbHandleMouseMove);
    document.removeEventListener("mouseup", cbHandleMouseUp);
  }, [cbHandleMouseMove]);
  return wrapSSR((0, import_jsx_runtime102.jsxs)(import_jsx_runtime101.Fragment, {
    children: [(0, import_jsx_runtime102.jsxs)(drawer_default, _objectSpread2(_objectSpread2(_objectSpread2({
      title,
      width: drawerWidth
    }, drawerProps), drawerOpenProps), {}, {
      afterOpenChange: function afterOpenChange(e) {
        var _drawerProps$afterOpe;
        if (!e) resetFields();
        drawerProps === null || drawerProps === void 0 || (_drawerProps$afterOpe = drawerProps.afterOpenChange) === null || _drawerProps$afterOpe === void 0 || _drawerProps$afterOpe.call(drawerProps, e);
      },
      onClose: function onClose(e) {
        var _drawerProps$onClose2;
        if (submitTimeout && loading) return;
        setOpen(false);
        drawerProps === null || drawerProps === void 0 || (_drawerProps$onClose2 = drawerProps.onClose) === null || _drawerProps$onClose2 === void 0 || _drawerProps$onClose2.call(drawerProps, e);
      },
      footer: rest.submitter !== false && (0, import_jsx_runtime100.jsx)("div", {
        ref: footerDomRef,
        style: {
          display: "flex",
          justifyContent: "flex-end"
        }
      }),
      children: [resize ? (0, import_jsx_runtime100.jsx)("div", {
        className: (0, import_classnames14.default)(getCls("sidebar-dragger"), hashId, _defineProperty(_defineProperty({}, getCls("sidebar-dragger-min-disabled"), drawerWidth === (resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.minWidth)), getCls("sidebar-dragger-max-disabled"), drawerWidth === (resizeInfo === null || resizeInfo === void 0 ? void 0 : resizeInfo.maxWidth))),
        onMouseDown: function onMouseDown(e) {
          var _resizeInfo$onResize;
          resizeInfo === null || resizeInfo === void 0 || (_resizeInfo$onResize = resizeInfo.onResize) === null || _resizeInfo$onResize === void 0 || _resizeInfo$onResize.call(resizeInfo);
          e.stopPropagation();
          e.preventDefault();
          document.addEventListener("mousemove", cbHandleMouseMove);
          document.addEventListener("mouseup", cbHandleMouseUp);
          setResizableDrawer(true);
        }
      }) : null, (0, import_jsx_runtime100.jsx)(import_jsx_runtime101.Fragment, {
        children: (0, import_jsx_runtime100.jsx)(BaseForm, _objectSpread2(_objectSpread2({
          formComponentType: "DrawerForm",
          layout: "vertical"
        }, rest), {}, {
          formRef,
          onInit: function onInit(_, form) {
            var _rest$onInit;
            if (rest.formRef) {
              rest.formRef.current = form;
            }
            rest === null || rest === void 0 || (_rest$onInit = rest.onInit) === null || _rest$onInit === void 0 || _rest$onInit.call(rest, _, form);
            formRef.current = form;
          },
          submitter: submitterConfig,
          onFinish: function() {
            var _ref4 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(values) {
              var result;
              return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                while (1) switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return onFinishHandle(values);
                  case 2:
                    result = _context3.sent;
                    return _context3.abrupt("return", result);
                  case 4:
                  case "end":
                    return _context3.stop();
                }
              }, _callee3);
            }));
            return function(_x3) {
              return _ref4.apply(this, arguments);
            };
          }(),
          contentRender,
          children
        }))
      })]
    })), triggerDom]
  }));
}

// node_modules/@ant-design/pro-form/es/layouts/LightFilter/index.js
var import_classnames15 = __toESM(require_classnames());
var import_react83 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/layouts/LightFilter/style.js
var genLightFilterStyle = function genLightFilterStyle2(token) {
  return _defineProperty({}, token.componentCls, {
    lineHeight: "30px",
    // @see https://yuque.antfin-inc.com/tech-ui/topics/523
    "&::before": {
      display: "block",
      height: 0,
      visibility: "hidden",
      content: "'.'"
    },
    "&-small": {
      lineHeight: token.lineHeight
    },
    "&-container": {
      display: "flex",
      flexWrap: "wrap",
      gap: token.marginXS
    },
    "&-item": _defineProperty({
      whiteSpace: "nowrap"
    }, "".concat(token.antCls, "-form-item"), {
      marginBlock: 0
    }),
    "&-line": {
      minWidth: "198px"
    },
    "&-line:not(:first-child)": {
      marginBlockStart: "16px",
      marginBlockEnd: 8
    },
    "&-collapse-icon": {
      width: token.controlHeight,
      height: token.controlHeight,
      borderRadius: "50%",
      display: "flex",
      alignItems: "center",
      justifyContent: "center"
    },
    "&-effective": _defineProperty({}, "".concat(token.componentCls, "-collapse-icon"), {
      backgroundColor: token.colorBgTextHover
    })
  });
};
function useStyle5(prefixCls) {
  return useStyle("LightFilter", function(token) {
    var proCardToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genLightFilterStyle(proCardToken)];
  });
}

// node_modules/@ant-design/pro-form/es/layouts/LightFilter/index.js
var import_jsx_runtime103 = __toESM(require_jsx_runtime());
var import_jsx_runtime104 = __toESM(require_jsx_runtime());
var _excluded55 = ["size", "collapse", "collapseLabel", "initialValues", "onValuesChange", "form", "placement", "formRef", "bordered", "ignoreRules", "footerRender"];
var LightFilterContainer = function LightFilterContainer2(props) {
  var items = props.items, prefixCls = props.prefixCls, _props$size = props.size, size = _props$size === void 0 ? "middle" : _props$size, collapse = props.collapse, collapseLabel = props.collapseLabel, onValuesChange = props.onValuesChange, bordered = props.bordered, values = props.values, footerRender = props.footerRender, placement = props.placement;
  var intl = useIntl();
  var lightFilterClassName = "".concat(prefixCls, "-light-filter");
  var _useStyle = useStyle5(lightFilterClassName), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var _useState = (0, import_react83.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  var _useState3 = (0, import_react83.useState)(function() {
    return _objectSpread2({}, values);
  }), _useState4 = _slicedToArray(_useState3, 2), moreValues = _useState4[0], setMoreValues = _useState4[1];
  (0, import_react83.useEffect)(function() {
    setMoreValues(_objectSpread2({}, values));
  }, [values]);
  var _useMemo = (0, import_react83.useMemo)(function() {
    var collapseItemsArr = [];
    var outsideItemsArr = [];
    items.forEach(function(item) {
      var _ref = item.props || {}, secondary = _ref.secondary;
      if (secondary || collapse) {
        collapseItemsArr.push(item);
      } else {
        outsideItemsArr.push(item);
      }
    });
    return {
      collapseItems: collapseItemsArr,
      outsideItems: outsideItemsArr
    };
  }, [props.items]), collapseItems = _useMemo.collapseItems, outsideItems = _useMemo.outsideItems;
  var renderCollapseLabelRender = function renderCollapseLabelRender2() {
    if (collapseLabel) {
      return collapseLabel;
    }
    if (collapse) {
      return (0, import_jsx_runtime103.jsx)(FilterOutlined_default, {
        className: "".concat(lightFilterClassName, "-collapse-icon ").concat(hashId).trim()
      });
    }
    return (0, import_jsx_runtime103.jsx)(FieldLabel, {
      size,
      label: intl.getMessage("form.lightFilter.more", "更多筛选")
    });
  };
  return wrapSSR((0, import_jsx_runtime103.jsx)("div", {
    className: (0, import_classnames15.default)(lightFilterClassName, hashId, "".concat(lightFilterClassName, "-").concat(size), _defineProperty({}, "".concat(lightFilterClassName, "-effective"), Object.keys(values).some(function(key2) {
      return Array.isArray(values[key2]) ? values[key2].length > 0 : values[key2];
    }))),
    children: (0, import_jsx_runtime104.jsxs)("div", {
      className: "".concat(lightFilterClassName, "-container ").concat(hashId).trim(),
      children: [outsideItems.map(function(child, index) {
        var key2 = child.key;
        var fieldProps = child.props.fieldProps;
        var newPlacement = fieldProps !== null && fieldProps !== void 0 && fieldProps.placement ? fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.placement : placement;
        return (0, import_jsx_runtime103.jsx)("div", {
          className: "".concat(lightFilterClassName, "-item ").concat(hashId).trim(),
          children: import_react83.default.cloneElement(child, {
            fieldProps: _objectSpread2(_objectSpread2({}, child.props.fieldProps), {}, {
              placement: newPlacement
            }),
            // proFieldProps 会直接作为 ProField 的 props 传递过去
            proFieldProps: _objectSpread2(_objectSpread2({}, child.props.proFieldProps), {}, {
              light: true,
              label: child.props.label,
              bordered
            }),
            bordered
          })
        }, key2 || index);
      }), collapseItems.length ? (0, import_jsx_runtime103.jsx)("div", {
        className: "".concat(lightFilterClassName, "-item ").concat(hashId).trim(),
        children: (0, import_jsx_runtime103.jsx)(FilterDropdown, {
          padding: 24,
          open,
          onOpenChange: function onOpenChange(changeOpen) {
            setOpen(changeOpen);
          },
          placement,
          label: renderCollapseLabelRender(),
          footerRender,
          footer: {
            onConfirm: function onConfirm() {
              onValuesChange(_objectSpread2({}, moreValues));
              setOpen(false);
            },
            onClear: function onClear() {
              var clearValues = {};
              collapseItems.forEach(function(child) {
                var name = child.props.name;
                clearValues[name] = void 0;
              });
              onValuesChange(clearValues);
            }
          },
          children: collapseItems.map(function(child) {
            var key2 = child.key;
            var _child$props = child.props, name = _child$props.name, fieldProps = _child$props.fieldProps;
            var newFieldProps = _objectSpread2(_objectSpread2({}, fieldProps), {}, {
              onChange: function onChange(e) {
                setMoreValues(_objectSpread2(_objectSpread2({}, moreValues), {}, _defineProperty({}, name, e !== null && e !== void 0 && e.target ? e.target.value : e)));
                return false;
              }
            });
            if (moreValues.hasOwnProperty(name)) {
              newFieldProps[child.props.valuePropName || "value"] = moreValues[name];
            }
            var newPlacement = fieldProps !== null && fieldProps !== void 0 && fieldProps.placement ? fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.placement : placement;
            return (0, import_jsx_runtime103.jsx)("div", {
              className: "".concat(lightFilterClassName, "-line ").concat(hashId).trim(),
              children: import_react83.default.cloneElement(child, {
                fieldProps: _objectSpread2(_objectSpread2({}, newFieldProps), {}, {
                  placement: newPlacement
                })
              })
            }, key2);
          })
        })
      }, "more") : null]
    })
  }));
};
function LightFilter(props) {
  var size = props.size, collapse = props.collapse, collapseLabel = props.collapseLabel, initialValues = props.initialValues, _onValuesChange = props.onValuesChange, userForm = props.form, placement = props.placement, userFormRef = props.formRef, bordered = props.bordered, ignoreRules = props.ignoreRules, footerRender = props.footerRender, reset = _objectWithoutProperties(props, _excluded55);
  var _useContext = (0, import_react83.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-form");
  var _useState5 = (0, import_react83.useState)(function() {
    return _objectSpread2({}, initialValues);
  }), _useState6 = _slicedToArray(_useState5, 2), values = _useState6[0], setValues = _useState6[1];
  var formRef = (0, import_react83.useRef)();
  (0, import_react83.useImperativeHandle)(userFormRef, function() {
    return formRef.current;
  }, [formRef.current]);
  return (0, import_jsx_runtime103.jsx)(BaseForm, _objectSpread2(_objectSpread2({
    size,
    initialValues,
    form: userForm,
    contentRender: function contentRender(items) {
      return (0, import_jsx_runtime103.jsx)(LightFilterContainer, {
        prefixCls,
        items: items === null || items === void 0 ? void 0 : items.flatMap(function(item) {
          if ((item === null || item === void 0 ? void 0 : item.type.displayName) === "ProForm-Group") return item.props.children;
          return item;
        }),
        size,
        bordered,
        collapse,
        collapseLabel,
        placement,
        values: values || {},
        footerRender,
        onValuesChange: function onValuesChange(newValues) {
          var _formRef$current, _formRef$current2;
          var newAllValues = _objectSpread2(_objectSpread2({}, values), newValues);
          setValues(newAllValues);
          (_formRef$current = formRef.current) === null || _formRef$current === void 0 || _formRef$current.setFieldsValue(newAllValues);
          (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 || _formRef$current2.submit();
          if (_onValuesChange) {
            _onValuesChange(newValues, newAllValues);
          }
        }
      });
    },
    formRef,
    formItemProps: {
      colon: false,
      labelAlign: "left"
    },
    fieldProps: {
      style: {
        width: void 0
      }
    }
  }, es_default3(reset, ["labelWidth"])), {}, {
    onValuesChange: function onValuesChange(_, allValues) {
      var _formRef$current3;
      setValues(allValues);
      _onValuesChange === null || _onValuesChange === void 0 || _onValuesChange(_, allValues);
      (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 || _formRef$current3.submit();
    }
  }));
}

// node_modules/@ant-design/pro-form/es/layouts/ModalForm/index.js
var import_react84 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());
var import_jsx_runtime105 = __toESM(require_jsx_runtime());
var import_jsx_runtime106 = __toESM(require_jsx_runtime());
var import_jsx_runtime107 = __toESM(require_jsx_runtime());
var _excluded56 = ["children", "trigger", "onVisibleChange", "onOpenChange", "modalProps", "onFinish", "submitTimeout", "title", "width", "visible", "open"];
function ModalForm(_ref) {
  var _context$locale3, _context$locale4;
  var children = _ref.children, trigger = _ref.trigger, onVisibleChange = _ref.onVisibleChange, onOpenChange = _ref.onOpenChange, modalProps = _ref.modalProps, onFinish = _ref.onFinish, submitTimeout = _ref.submitTimeout, title = _ref.title, width = _ref.width, propVisible = _ref.visible, propsOpen = _ref.open, rest = _objectWithoutProperties(_ref, _excluded56);
  noteOnce(
    // eslint-disable-next-line @typescript-eslint/dot-notation
    !rest["footer"] || !(modalProps !== null && modalProps !== void 0 && modalProps.footer),
    "ModalForm 是一个 ProForm 的特殊布局，如果想自定义按钮，请使用 submit.render 自定义。"
  );
  var context = (0, import_react84.useContext)(config_provider_default.ConfigContext);
  var _useState = (0, import_react84.useState)([]), _useState2 = _slicedToArray(_useState, 2), forceUpdate = _useState2[1];
  var _useState3 = (0, import_react84.useState)(false), _useState4 = _slicedToArray(_useState3, 2), loading = _useState4[0], setLoading = _useState4[1];
  var _useMergedState = useMergedState(!!propVisible, {
    value: propsOpen || propVisible,
    onChange: onOpenChange || onVisibleChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), open = _useMergedState2[0], setOpen = _useMergedState2[1];
  var footerRef = (0, import_react84.useRef)(null);
  var footerDomRef = (0, import_react84.useCallback)(function(element) {
    if (footerRef.current === null && element) {
      forceUpdate([]);
    }
    footerRef.current = element;
  }, []);
  var formRef = (0, import_react84.useRef)();
  var resetFields = (0, import_react84.useCallback)(function() {
    var _ref2, _rest$form, _rest$formRef;
    var form = (_ref2 = (_rest$form = rest.form) !== null && _rest$form !== void 0 ? _rest$form : (_rest$formRef = rest.formRef) === null || _rest$formRef === void 0 ? void 0 : _rest$formRef.current) !== null && _ref2 !== void 0 ? _ref2 : formRef.current;
    if (form && modalProps !== null && modalProps !== void 0 && modalProps.destroyOnClose) {
      form.resetFields();
    }
  }, [modalProps === null || modalProps === void 0 ? void 0 : modalProps.destroyOnClose, rest.form, rest.formRef]);
  (0, import_react84.useImperativeHandle)(rest.formRef, function() {
    return formRef.current;
  }, [formRef.current]);
  (0, import_react84.useEffect)(function() {
    if (propsOpen || propVisible) {
      onOpenChange === null || onOpenChange === void 0 || onOpenChange(true);
      onVisibleChange === null || onVisibleChange === void 0 || onVisibleChange(true);
    }
  }, [propVisible, propsOpen]);
  var triggerDom = (0, import_react84.useMemo)(function() {
    if (!trigger) {
      return null;
    }
    return import_react84.default.cloneElement(trigger, _objectSpread2(_objectSpread2({
      key: "trigger"
    }, trigger.props), {}, {
      onClick: function() {
        var _onClick = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(e) {
          var _trigger$props, _trigger$props$onClic;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                setOpen(!open);
                (_trigger$props = trigger.props) === null || _trigger$props === void 0 || (_trigger$props$onClic = _trigger$props.onClick) === null || _trigger$props$onClic === void 0 || _trigger$props$onClic.call(_trigger$props, e);
              case 2:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        function onClick(_x) {
          return _onClick.apply(this, arguments);
        }
        return onClick;
      }()
    }));
  }, [setOpen, trigger, open]);
  var submitterConfig = (0, import_react84.useMemo)(function() {
    var _ref3, _modalProps$okText, _context$locale, _ref4, _modalProps$cancelTex, _context$locale2;
    if (rest.submitter === false) {
      return false;
    }
    return merge_default({
      searchConfig: {
        submitText: (_ref3 = (_modalProps$okText = modalProps === null || modalProps === void 0 ? void 0 : modalProps.okText) !== null && _modalProps$okText !== void 0 ? _modalProps$okText : (_context$locale = context.locale) === null || _context$locale === void 0 || (_context$locale = _context$locale.Modal) === null || _context$locale === void 0 ? void 0 : _context$locale.okText) !== null && _ref3 !== void 0 ? _ref3 : "确认",
        resetText: (_ref4 = (_modalProps$cancelTex = modalProps === null || modalProps === void 0 ? void 0 : modalProps.cancelText) !== null && _modalProps$cancelTex !== void 0 ? _modalProps$cancelTex : (_context$locale2 = context.locale) === null || _context$locale2 === void 0 || (_context$locale2 = _context$locale2.Modal) === null || _context$locale2 === void 0 ? void 0 : _context$locale2.cancelText) !== null && _ref4 !== void 0 ? _ref4 : "取消"
      },
      resetButtonProps: {
        preventDefault: true,
        // 提交表单loading时，不可关闭弹框
        disabled: submitTimeout ? loading : void 0,
        onClick: function onClick(e) {
          var _modalProps$onCancel;
          setOpen(false);
          modalProps === null || modalProps === void 0 || (_modalProps$onCancel = modalProps.onCancel) === null || _modalProps$onCancel === void 0 || _modalProps$onCancel.call(modalProps, e);
        }
      }
    }, rest.submitter);
  }, [(_context$locale3 = context.locale) === null || _context$locale3 === void 0 || (_context$locale3 = _context$locale3.Modal) === null || _context$locale3 === void 0 ? void 0 : _context$locale3.cancelText, (_context$locale4 = context.locale) === null || _context$locale4 === void 0 || (_context$locale4 = _context$locale4.Modal) === null || _context$locale4 === void 0 ? void 0 : _context$locale4.okText, modalProps, rest.submitter, setOpen, loading, submitTimeout]);
  var contentRender = (0, import_react84.useCallback)(function(formDom, submitter) {
    return (0, import_jsx_runtime107.jsxs)(import_jsx_runtime106.Fragment, {
      children: [formDom, footerRef.current && submitter ? (0, import_jsx_runtime105.jsx)(import_react84.default.Fragment, {
        children: (0, import_react_dom2.createPortal)(submitter, footerRef.current)
      }, "submitter") : submitter]
    });
  }, []);
  var onFinishHandle = (0, import_react84.useCallback)(function() {
    var _ref5 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(values) {
      var response, timer, result;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            response = onFinish === null || onFinish === void 0 ? void 0 : onFinish(values);
            if (submitTimeout && response instanceof Promise) {
              setLoading(true);
              timer = setTimeout(function() {
                return setLoading(false);
              }, submitTimeout);
              response.finally(function() {
                clearTimeout(timer);
                setLoading(false);
              });
            }
            _context2.next = 4;
            return response;
          case 4:
            result = _context2.sent;
            if (result) {
              setOpen(false);
            }
            return _context2.abrupt("return", result);
          case 7:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function(_x2) {
      return _ref5.apply(this, arguments);
    };
  }(), [onFinish, setOpen, submitTimeout]);
  var modalOpenProps = openVisibleCompatible(open);
  return (0, import_jsx_runtime107.jsxs)(import_jsx_runtime106.Fragment, {
    children: [(0, import_jsx_runtime105.jsx)(modal_default, _objectSpread2(_objectSpread2(_objectSpread2({
      title,
      width: width || 800
    }, modalProps), modalOpenProps), {}, {
      onCancel: function onCancel(e) {
        var _modalProps$onCancel2;
        if (submitTimeout && loading) return;
        setOpen(false);
        modalProps === null || modalProps === void 0 || (_modalProps$onCancel2 = modalProps.onCancel) === null || _modalProps$onCancel2 === void 0 || _modalProps$onCancel2.call(modalProps, e);
      },
      afterClose: function afterClose() {
        var _modalProps$afterClos;
        resetFields();
        if (open) {
          setOpen(false);
        }
        modalProps === null || modalProps === void 0 || (_modalProps$afterClos = modalProps.afterClose) === null || _modalProps$afterClos === void 0 || _modalProps$afterClos.call(modalProps);
      },
      footer: rest.submitter !== false ? (0, import_jsx_runtime105.jsx)("div", {
        ref: footerDomRef,
        style: {
          display: "flex",
          justifyContent: "flex-end"
        }
      }) : null,
      children: (0, import_jsx_runtime105.jsx)(BaseForm, _objectSpread2(_objectSpread2({
        formComponentType: "ModalForm",
        layout: "vertical"
      }, rest), {}, {
        onInit: function onInit(_, form) {
          var _rest$onInit;
          if (rest.formRef) {
            rest.formRef.current = form;
          }
          rest === null || rest === void 0 || (_rest$onInit = rest.onInit) === null || _rest$onInit === void 0 || _rest$onInit.call(rest, _, form);
          formRef.current = form;
        },
        formRef,
        submitter: submitterConfig,
        onFinish: function() {
          var _ref6 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(values) {
            var result;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.next = 2;
                  return onFinishHandle(values);
                case 2:
                  result = _context3.sent;
                  return _context3.abrupt("return", result);
                case 4:
                case "end":
                  return _context3.stop();
              }
            }, _callee3);
          }));
          return function(_x3) {
            return _ref6.apply(this, arguments);
          };
        }(),
        contentRender,
        children
      }))
    })), triggerDom]
  });
}

// node_modules/@ant-design/pro-form/es/layouts/QueryFilter/index.js
var import_classnames16 = __toESM(require_classnames());
var import_react86 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/layouts/QueryFilter/Actions.js
var import_react85 = __toESM(require_react());
var import_jsx_runtime108 = __toESM(require_jsx_runtime());
var import_jsx_runtime109 = __toESM(require_jsx_runtime());
var import_jsx_runtime110 = __toESM(require_jsx_runtime());
var defaultCollapseRender = function defaultCollapseRender2(collapsed, _, intl, hiddenNum) {
  if (collapsed) {
    return (0, import_jsx_runtime110.jsxs)(import_jsx_runtime109.Fragment, {
      children: [intl.getMessage("tableForm.collapsed", "展开"), hiddenNum && "(".concat(hiddenNum, ")"), (0, import_jsx_runtime108.jsx)(DownOutlined_default, {
        style: {
          marginInlineStart: "0.5em",
          transition: "0.3s all",
          transform: "rotate(".concat(collapsed ? 0 : 0.5, "turn)")
        }
      })]
    });
  }
  return (0, import_jsx_runtime110.jsxs)(import_jsx_runtime109.Fragment, {
    children: [intl.getMessage("tableForm.expand", "收起"), (0, import_jsx_runtime108.jsx)(DownOutlined_default, {
      style: {
        marginInlineStart: "0.5em",
        transition: "0.3s all",
        transform: "rotate(".concat(collapsed ? 0 : 0.5, "turn)")
      }
    })]
  });
};
var Actions = function Actions2(props) {
  var setCollapsed = props.setCollapsed, _props$collapsed = props.collapsed, collapsed = _props$collapsed === void 0 ? false : _props$collapsed, submitter = props.submitter, style = props.style, hiddenNum = props.hiddenNum;
  var _useContext = (0, import_react85.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var intl = useIntl();
  var _useContext2 = (0, import_react85.useContext)(ProProvider), hashId = _useContext2.hashId;
  var collapseRender = omitBoolean(props.collapseRender) || defaultCollapseRender;
  return (0, import_jsx_runtime110.jsxs)(space_default, {
    style,
    size: 16,
    children: [submitter, props.collapseRender !== false && (0, import_jsx_runtime108.jsx)("a", {
      className: "".concat(getPrefixCls("pro-query-filter-collapse-button"), " ").concat(hashId).trim(),
      onClick: function onClick() {
        return setCollapsed(!collapsed);
      },
      children: collapseRender === null || collapseRender === void 0 ? void 0 : collapseRender(collapsed, props, intl, hiddenNum)
    })]
  });
};
var Actions_default = Actions;

// node_modules/@ant-design/pro-form/es/layouts/QueryFilter/style.js
var genProStyle5 = function genProStyle6(token) {
  return _defineProperty({}, token.componentCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty({
    "&&": {
      padding: 24
    }
  }, "".concat(token.antCls, "-form-item"), {
    marginBlock: 0
  }), "".concat(token.proComponentsCls, "-form-group-title"), {
    marginBlock: 0
  }), "&-row", {
    rowGap: 24,
    "&-split": _defineProperty(_defineProperty({}, "".concat(token.proComponentsCls, "-form-group"), {
      display: "flex",
      alignItems: "center",
      gap: token.marginXS
    }), "&:last-child", {
      marginBlockEnd: 12
    }),
    "&-split-line": {
      "&:after": {
        position: "absolute",
        width: "100%",
        content: '""',
        height: 1,
        insetBlockEnd: -12,
        borderBlockEnd: "1px dashed ".concat(token.colorSplit)
      }
    }
  }), "&-collapse-button", {
    display: "flex",
    alignItems: "center",
    color: token.colorPrimary
  }));
};
function useStyle6(prefixCls) {
  return useStyle("QueryFilter", function(token) {
    var proToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle5(proToken)];
  });
}

// node_modules/@ant-design/pro-form/es/layouts/QueryFilter/index.js
var import_jsx_runtime111 = __toESM(require_jsx_runtime());
var import_jsx_runtime112 = __toESM(require_jsx_runtime());
var _excluded57 = ["collapsed", "layout", "defaultCollapsed", "defaultColsNumber", "span", "searchGutter", "searchText", "resetText", "optionRender", "collapseRender", "onReset", "onCollapse", "labelWidth", "style", "split", "preserve", "ignoreRules", "showHiddenNum", "submitterColSpanProps"];
var _document;
var CONFIG_SPAN_BREAKPOINTS = {
  xs: 513,
  sm: 513,
  md: 785,
  lg: 992,
  xl: 1057,
  xxl: Infinity
};
var BREAKPOINTS = {
  vertical: [
    // [breakpoint, cols, layout]
    [513, 1, "vertical"],
    [785, 2, "vertical"],
    [1057, 3, "vertical"],
    [Infinity, 4, "vertical"]
  ],
  default: [[513, 1, "vertical"], [701, 2, "vertical"], [1062, 3, "horizontal"], [1352, 3, "horizontal"], [Infinity, 4, "horizontal"]]
};
var getSpanConfig = function getSpanConfig2(layout, width, span) {
  if (span && typeof span === "number") {
    return {
      span,
      layout
    };
  }
  var spanConfig = span ? ["xs", "sm", "md", "lg", "xl", "xxl"].map(function(key2) {
    return [CONFIG_SPAN_BREAKPOINTS[key2], 24 / span[key2], "horizontal"];
  }) : BREAKPOINTS[layout || "default"];
  var breakPoint = (spanConfig || BREAKPOINTS.default).find(
    function(item) {
      return width < item[0] + 16;
    }
    // 16 = 2 * (ant-row -8px margin)
  );
  if (!breakPoint) {
    return {
      span: 8,
      layout: "horizontal"
    };
  }
  return {
    span: 24 / breakPoint[1],
    layout: breakPoint === null || breakPoint === void 0 ? void 0 : breakPoint[2]
  };
};
var flatMapItems = function flatMapItems2(items, ignoreRules) {
  return items === null || items === void 0 ? void 0 : items.flatMap(function(item) {
    var _item$props;
    if ((item === null || item === void 0 ? void 0 : item.type.displayName) === "ProForm-Group" && !((_item$props = item.props) !== null && _item$props !== void 0 && _item$props.title)) {
      return item.props.children;
    }
    if (ignoreRules && import_react86.default.isValidElement(item)) {
      var _item$props2;
      return import_react86.default.cloneElement(item, _objectSpread2(_objectSpread2({}, item.props), {}, {
        formItemProps: _objectSpread2(_objectSpread2({}, (_item$props2 = item.props) === null || _item$props2 === void 0 ? void 0 : _item$props2.formItemProps), {}, {
          rules: []
        })
      }));
    }
    return item;
  });
};
var QueryFilterContent = function QueryFilterContent2(props) {
  var _props$submitterColSp5, _props$submitterColSp6, _props$submitterColSp7, _props$submitterColSp8;
  var intl = useIntl();
  var _useContext = (0, import_react86.useContext)(ProProvider), hashId = _useContext.hashId;
  var resetText = props.resetText || intl.getMessage("tableForm.reset", "重置");
  var searchText = props.searchText || intl.getMessage("tableForm.search", "搜索");
  var _useMergedState = useMergedState(function() {
    return props.defaultCollapsed && !!props.submitter;
  }, {
    value: props.collapsed,
    onChange: props.onCollapse
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), collapsed = _useMergedState2[0], setCollapsed = _useMergedState2[1];
  var optionRender = props.optionRender, collapseRender = props.collapseRender, split = props.split, items = props.items, spanSize = props.spanSize, showLength = props.showLength, searchGutter = props.searchGutter, showHiddenNum = props.showHiddenNum;
  var submitter = (0, import_react86.useMemo)(function() {
    if (!props.submitter || optionRender === false) {
      return null;
    }
    return import_react86.default.cloneElement(props.submitter, _objectSpread2({
      searchConfig: {
        resetText,
        submitText: searchText
      },
      render: optionRender ? function(_, dom) {
        return optionRender(_objectSpread2(_objectSpread2({}, props), {}, {
          resetText,
          searchText
        }), props, dom);
      } : optionRender
    }, props.submitter.props));
  }, [props, resetText, searchText, optionRender]);
  var totalSpan = 0;
  var itemLength = 0;
  var firstRowFull = false;
  var totalSize = 0;
  var currentSpan = 0;
  var processedList = flatMapItems(items, props.ignoreRules).map(function(item, index) {
    var _item$props$colSize, _item$props3, _props2, _item$props4;
    var colSize = import_react86.default.isValidElement(item) ? (_item$props$colSize = item === null || item === void 0 || (_item$props3 = item.props) === null || _item$props3 === void 0 ? void 0 : _item$props3.colSize) !== null && _item$props$colSize !== void 0 ? _item$props$colSize : 1 : 1;
    var colSpan = Math.min(spanSize.span * (colSize || 1), 24);
    totalSpan += colSpan;
    totalSize += colSize;
    if (index === 0) {
      var _props;
      firstRowFull = colSpan === 24 && !(item !== null && item !== void 0 && (_props = item.props) !== null && _props !== void 0 && _props.hidden);
    }
    var hidden = (item === null || item === void 0 || (_props2 = item.props) === null || _props2 === void 0 ? void 0 : _props2.hidden) || // 如果收起了
    collapsed && (firstRowFull || // 如果 超过显示长度 且 总长度超过了 24
    totalSize > showLength - 1) && !!index && totalSpan >= 24;
    itemLength += 1;
    var itemKey = import_react86.default.isValidElement(item) && (item.key || "".concat((_item$props4 = item.props) === null || _item$props4 === void 0 ? void 0 : _item$props4.name)) || index;
    if (import_react86.default.isValidElement(item) && hidden) {
      if (!props.preserve) {
        return {
          itemDom: null,
          colSpan: 0,
          hidden: true
        };
      }
      return {
        itemDom: import_react86.default.cloneElement(item, {
          hidden: true,
          key: itemKey || index
        }),
        hidden: true,
        colSpan
      };
    }
    return {
      itemDom: item,
      colSpan,
      hidden: false
    };
  });
  var doms = processedList.map(function(itemProps, index) {
    var _props3, _itemDom$props;
    var itemDom = itemProps.itemDom, colSpan = itemProps.colSpan;
    var hidden = itemDom === null || itemDom === void 0 || (_props3 = itemDom.props) === null || _props3 === void 0 ? void 0 : _props3.hidden;
    if (hidden) return itemDom;
    var itemKey = import_react86.default.isValidElement(itemDom) && (itemDom.key || "".concat((_itemDom$props = itemDom.props) === null || _itemDom$props === void 0 ? void 0 : _itemDom$props.name)) || index;
    if (24 - currentSpan % 24 < colSpan) {
      totalSpan += 24 - currentSpan % 24;
      currentSpan += 24 - currentSpan % 24;
    }
    currentSpan += colSpan;
    if (split && currentSpan % 24 === 0 && index < itemLength - 1) {
      return (0, import_jsx_runtime111.jsx)(col_default, {
        span: colSpan,
        className: "".concat(props.baseClassName, "-row-split-line ").concat(props.baseClassName, "-row-split ").concat(hashId).trim(),
        children: itemDom
      }, itemKey);
    }
    return (0, import_jsx_runtime111.jsx)(col_default, {
      className: "".concat(props.baseClassName, "-row-split ").concat(hashId).trim(),
      span: colSpan,
      children: itemDom
    }, itemKey);
  });
  var hiddenNum = showHiddenNum && processedList.filter(function(item) {
    return item.hidden;
  }).length;
  var needCollapseRender = (0, import_react86.useMemo)(function() {
    if (totalSpan < 24 || totalSize <= showLength) {
      return false;
    }
    return true;
  }, [totalSize, showLength, totalSpan]);
  var offset = (0, import_react86.useMemo)(function() {
    var _props$submitterColSp, _props$submitterColSp2;
    var offsetSpan = currentSpan % 24 + ((_props$submitterColSp = (_props$submitterColSp2 = props.submitterColSpanProps) === null || _props$submitterColSp2 === void 0 ? void 0 : _props$submitterColSp2.span) !== null && _props$submitterColSp !== void 0 ? _props$submitterColSp : spanSize.span);
    if (offsetSpan > 24) {
      var _props$submitterColSp3, _props$submitterColSp4;
      return 24 - ((_props$submitterColSp3 = (_props$submitterColSp4 = props.submitterColSpanProps) === null || _props$submitterColSp4 === void 0 ? void 0 : _props$submitterColSp4.span) !== null && _props$submitterColSp3 !== void 0 ? _props$submitterColSp3 : spanSize.span);
    }
    return 24 - offsetSpan;
  }, [currentSpan, currentSpan % 24 + ((_props$submitterColSp5 = (_props$submitterColSp6 = props.submitterColSpanProps) === null || _props$submitterColSp6 === void 0 ? void 0 : _props$submitterColSp6.span) !== null && _props$submitterColSp5 !== void 0 ? _props$submitterColSp5 : spanSize.span), (_props$submitterColSp7 = props.submitterColSpanProps) === null || _props$submitterColSp7 === void 0 ? void 0 : _props$submitterColSp7.span]);
  var context = (0, import_react86.useContext)(config_provider_default.ConfigContext);
  var baseClassName = context.getPrefixCls("pro-query-filter");
  return (0, import_jsx_runtime112.jsxs)(row_default, {
    gutter: searchGutter,
    justify: "start",
    className: (0, import_classnames16.default)("".concat(baseClassName, "-row"), hashId),
    children: [doms, submitter && (0, import_jsx_runtime111.jsx)(col_default, _objectSpread2(_objectSpread2({
      span: spanSize.span,
      offset,
      className: (0, import_classnames16.default)((_props$submitterColSp8 = props.submitterColSpanProps) === null || _props$submitterColSp8 === void 0 ? void 0 : _props$submitterColSp8.className)
    }, props.submitterColSpanProps), {}, {
      style: {
        textAlign: "end"
      },
      children: (0, import_jsx_runtime111.jsx)(form_default.Item, {
        label: " ",
        colon: false,
        shouldUpdate: false,
        className: "".concat(baseClassName, "-actions ").concat(hashId).trim(),
        children: (0, import_jsx_runtime111.jsx)(Actions_default, {
          hiddenNum,
          collapsed,
          collapseRender: needCollapseRender ? collapseRender : false,
          submitter,
          setCollapsed
        }, "pro-form-query-filter-actions")
      })
    }), "submitter")]
  }, "resize-observer-row");
};
var defaultWidth = isBrowser() ? (_document = document) === null || _document === void 0 || (_document = _document.body) === null || _document === void 0 ? void 0 : _document.clientWidth : 1024;
function QueryFilter(props) {
  var controlCollapsed = props.collapsed, layout = props.layout, _props$defaultCollaps = props.defaultCollapsed, defaultCollapsed = _props$defaultCollaps === void 0 ? true : _props$defaultCollaps, defaultColsNumber = props.defaultColsNumber, span = props.span, _props$searchGutter = props.searchGutter, searchGutter = _props$searchGutter === void 0 ? 24 : _props$searchGutter, searchText = props.searchText, resetText = props.resetText, optionRender = props.optionRender, collapseRender = props.collapseRender, onReset = props.onReset, onCollapse = props.onCollapse, _props$labelWidth = props.labelWidth, labelWidth = _props$labelWidth === void 0 ? "80" : _props$labelWidth, style = props.style, split = props.split, _props$preserve = props.preserve, preserve = _props$preserve === void 0 ? true : _props$preserve, ignoreRules = props.ignoreRules, _props$showHiddenNum = props.showHiddenNum, showHiddenNum = _props$showHiddenNum === void 0 ? false : _props$showHiddenNum, submitterColSpanProps = props.submitterColSpanProps, rest = _objectWithoutProperties(props, _excluded57);
  var context = (0, import_react86.useContext)(config_provider_default.ConfigContext);
  var baseClassName = context.getPrefixCls("pro-query-filter");
  var _useStyle = useStyle6(baseClassName), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var _useMountMergeState = useMergedState(function() {
    return typeof (style === null || style === void 0 ? void 0 : style.width) === "number" ? style === null || style === void 0 ? void 0 : style.width : defaultWidth;
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), width = _useMountMergeState2[0], setWidth = _useMountMergeState2[1];
  var spanSize = (0, import_react86.useMemo)(function() {
    return getSpanConfig(layout, width + 16, span);
  }, [layout, width, span]);
  var showLength = (0, import_react86.useMemo)(function() {
    if (defaultColsNumber !== void 0) {
      return defaultColsNumber - 1;
    }
    return Math.max(1, 24 / spanSize.span - 1);
  }, [defaultColsNumber, spanSize.span]);
  var formItemFixStyle = (0, import_react86.useMemo)(function() {
    if (labelWidth && spanSize.layout !== "vertical" && labelWidth !== "auto") {
      return {
        labelCol: {
          flex: "0 0 ".concat(labelWidth, "px")
        },
        wrapperCol: {
          style: {
            maxWidth: "calc(100% - ".concat(labelWidth, "px)")
          }
        },
        style: {
          flexWrap: "nowrap"
        }
      };
    }
    return void 0;
  }, [spanSize.layout, labelWidth]);
  return wrapSSR((0, import_jsx_runtime111.jsx)(es_default, {
    onResize: function onResize(offset) {
      if (width !== offset.width && offset.width > 17) {
        setWidth(offset.width);
      }
    },
    children: (0, import_jsx_runtime111.jsx)(BaseForm, _objectSpread2(_objectSpread2({
      isKeyPressSubmit: true,
      preserve
    }, rest), {}, {
      className: (0, import_classnames16.default)(baseClassName, hashId, rest.className),
      onReset,
      style,
      layout: spanSize.layout,
      fieldProps: {
        style: {
          width: "100%"
        }
      },
      formItemProps: formItemFixStyle,
      groupProps: {
        titleStyle: {
          display: "inline-block",
          marginInlineEnd: 16
        }
      },
      contentRender: function contentRender(items, renderSubmitter, form) {
        return (0, import_jsx_runtime111.jsx)(QueryFilterContent, {
          spanSize,
          collapsed: controlCollapsed,
          form,
          submitterColSpanProps,
          collapseRender,
          defaultCollapsed,
          onCollapse,
          optionRender,
          submitter: renderSubmitter,
          items,
          split,
          baseClassName,
          resetText: props.resetText,
          searchText: props.searchText,
          searchGutter,
          preserve,
          ignoreRules,
          showLength,
          showHiddenNum
        });
      }
    }))
  }, "resize-observer"));
}

// node_modules/@ant-design/pro-form/es/layouts/StepsForm/index.js
var import_classnames17 = __toESM(require_classnames());
var import_react88 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/layouts/StepsForm/StepForm.js
var import_react87 = __toESM(require_react());
var import_jsx_runtime113 = __toESM(require_jsx_runtime());
var _excluded58 = ["onFinish", "step", "formRef", "title", "stepProps"];
function StepForm(stepNativeProps) {
  var formRef = (0, import_react87.useRef)();
  var context = (0, import_react87.useContext)(StepsFormProvide);
  var stepContext = (0, import_react87.useContext)(StepFormProvide);
  var props = _objectSpread2(_objectSpread2({}, stepNativeProps), stepContext);
  var onFinish = props.onFinish, step = props.step, propFormRef = props.formRef, title = props.title, stepProps = props.stepProps, restProps = _objectWithoutProperties(props, _excluded58);
  noteOnce(!restProps.submitter, "StepForm 不包含提交按钮，请在 StepsForm 上");
  (0, import_react87.useImperativeHandle)(propFormRef, function() {
    return formRef.current;
  }, [propFormRef === null || propFormRef === void 0 ? void 0 : propFormRef.current]);
  (0, import_react87.useEffect)(function() {
    if (!(props.name || props.step)) return;
    var name = (props.name || props.step).toString();
    context === null || context === void 0 || context.regForm(name, props);
    return function() {
      context === null || context === void 0 || context.unRegForm(name);
    };
  }, []);
  if (context && context !== null && context !== void 0 && context.formArrayRef) {
    context.formArrayRef.current[step || 0] = formRef;
  }
  return (0, import_jsx_runtime113.jsx)(BaseForm, _objectSpread2({
    formRef,
    onFinish: function() {
      var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(values) {
        var success2;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (restProps.name) {
                context === null || context === void 0 || context.onFormFinish(restProps.name, values);
              }
              if (!onFinish) {
                _context.next = 9;
                break;
              }
              context === null || context === void 0 || context.setLoading(true);
              _context.next = 5;
              return onFinish === null || onFinish === void 0 ? void 0 : onFinish(values);
            case 5:
              success2 = _context.sent;
              if (success2) {
                context === null || context === void 0 || context.next();
              }
              context === null || context === void 0 || context.setLoading(false);
              return _context.abrupt("return");
            case 9:
              if (!(context !== null && context !== void 0 && context.lastStep)) context === null || context === void 0 || context.next();
            case 10:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(),
    onInit: function onInit(_, form) {
      var _restProps$onInit;
      formRef.current = form;
      if (context && context !== null && context !== void 0 && context.formArrayRef) {
        context.formArrayRef.current[step || 0] = formRef;
      }
      restProps === null || restProps === void 0 || (_restProps$onInit = restProps.onInit) === null || _restProps$onInit === void 0 || _restProps$onInit.call(restProps, _, form);
    },
    layout: "vertical"
  }, es_default3(restProps, ["layoutType", "columns"])));
}
var StepForm_default = StepForm;

// node_modules/@ant-design/pro-form/es/layouts/StepsForm/style.js
var genStepsFormStyle = function genStepsFormStyle2(token) {
  return _defineProperty({}, token.componentCls, {
    "&-container": {
      width: "max-content",
      minWidth: "420px",
      maxWidth: "100%",
      margin: "auto"
    },
    "&-steps-container": _defineProperty({
      maxWidth: "1160px",
      margin: "auto"
    }, "".concat(token.antCls, "-steps-vertical"), {
      height: "100%"
    }),
    "&-step": {
      display: "none",
      marginBlockStart: "32px",
      "&-active": {
        display: "block"
      },
      "> form": {
        maxWidth: "100%"
      }
    }
  });
};
function useStyle7(prefixCls) {
  return useStyle("StepsForm", function(token) {
    var loginFormToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genStepsFormStyle(loginFormToken)];
  });
}

// node_modules/@ant-design/pro-form/es/layouts/StepsForm/index.js
var import_jsx_runtime114 = __toESM(require_jsx_runtime());
var import_jsx_runtime115 = __toESM(require_jsx_runtime());
var import_jsx_runtime116 = __toESM(require_jsx_runtime());
var _excluded59 = ["current", "onCurrentChange", "submitter", "stepsFormRender", "stepsRender", "stepFormRender", "stepsProps", "onFinish", "formProps", "containerStyle", "formRef", "formMapRef", "layoutRender"];
var StepsFormProvide = import_react88.default.createContext(void 0);
var StepsLayoutStrategy = {
  horizontal: function horizontal(_ref) {
    var stepsDom = _ref.stepsDom, formDom = _ref.formDom;
    return (0, import_jsx_runtime116.jsxs)(import_jsx_runtime115.Fragment, {
      children: [(0, import_jsx_runtime114.jsx)(row_default, {
        gutter: {
          xs: 8,
          sm: 16,
          md: 24
        },
        children: (0, import_jsx_runtime114.jsx)(col_default, {
          span: 24,
          children: stepsDom
        })
      }), (0, import_jsx_runtime114.jsx)(row_default, {
        gutter: {
          xs: 8,
          sm: 16,
          md: 24
        },
        children: (0, import_jsx_runtime114.jsx)(col_default, {
          span: 24,
          children: formDom
        })
      })]
    });
  },
  vertical: function vertical(_ref2) {
    var stepsDom = _ref2.stepsDom, formDom = _ref2.formDom;
    return (0, import_jsx_runtime116.jsxs)(row_default, {
      align: "stretch",
      wrap: true,
      gutter: {
        xs: 8,
        sm: 16,
        md: 24
      },
      children: [(0, import_jsx_runtime114.jsx)(col_default, {
        xxl: 4,
        xl: 6,
        lg: 7,
        md: 8,
        sm: 10,
        xs: 12,
        children: import_react88.default.cloneElement(stepsDom, {
          style: {
            height: "100%"
          }
        })
      }), (0, import_jsx_runtime114.jsx)(col_default, {
        children: (0, import_jsx_runtime114.jsx)("div", {
          style: {
            display: "flex",
            alignItems: "center",
            width: "100%",
            height: "100%"
          },
          children: formDom
        })
      })]
    });
  }
};
var StepFormProvide = import_react88.default.createContext(null);
function StepsForm(props) {
  var _useContext = (0, import_react88.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-steps-form");
  var _useStyle = useStyle7(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var current = props.current, onCurrentChange = props.onCurrentChange, submitter = props.submitter, stepsFormRender = props.stepsFormRender, stepsRender = props.stepsRender, stepFormRender = props.stepFormRender, stepsProps = props.stepsProps, onFinish = props.onFinish, formProps = props.formProps, containerStyle = props.containerStyle, formRef = props.formRef, propsFormMapRef = props.formMapRef, propsLayoutRender = props.layoutRender, rest = _objectWithoutProperties(props, _excluded59);
  var formDataRef = (0, import_react88.useRef)(/* @__PURE__ */ new Map());
  var formMapRef = (0, import_react88.useRef)(/* @__PURE__ */ new Map());
  var formArrayRef = (0, import_react88.useRef)([]);
  var _useState = (0, import_react88.useState)([]), _useState2 = _slicedToArray(_useState, 2), formArray = _useState2[0], setFormArray = _useState2[1];
  var _useState3 = (0, import_react88.useState)(false), _useState4 = _slicedToArray(_useState3, 2), loading = _useState4[0], setLoading = _useState4[1];
  var intl = useIntl();
  var _useMergedState = useMergedState(0, {
    value: props.current,
    onChange: props.onCurrentChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), step = _useMergedState2[0], setStep = _useMergedState2[1];
  var layoutRender = (0, import_react88.useMemo)(function() {
    return StepsLayoutStrategy[(stepsProps === null || stepsProps === void 0 ? void 0 : stepsProps.direction) || "horizontal"];
  }, [stepsProps === null || stepsProps === void 0 ? void 0 : stepsProps.direction]);
  var lastStep = (0, import_react88.useMemo)(function() {
    return step === formArray.length - 1;
  }, [formArray.length, step]);
  var regForm = (0, import_react88.useCallback)(function(name, childrenFormProps) {
    if (!formMapRef.current.has(name)) {
      setFormArray(function(oldFormArray) {
        return [].concat(_toConsumableArray(oldFormArray), [name]);
      });
    }
    formMapRef.current.set(name, childrenFormProps);
  }, []);
  var unRegForm = (0, import_react88.useCallback)(function(name) {
    setFormArray(function(oldFormArray) {
      return oldFormArray.filter(function(n) {
        return n !== name;
      });
    });
    formMapRef.current.delete(name);
    formDataRef.current.delete(name);
  }, []);
  (0, import_react88.useImperativeHandle)(propsFormMapRef, function() {
    return formArrayRef.current;
  }, [formArrayRef.current]);
  (0, import_react88.useImperativeHandle)(formRef, function() {
    var _formArrayRef$current;
    return (_formArrayRef$current = formArrayRef.current[step || 0]) === null || _formArrayRef$current === void 0 ? void 0 : _formArrayRef$current.current;
  }, [step, formArrayRef.current]);
  var onFormFinish = (0, import_react88.useCallback)(function() {
    var _ref3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(name, formData) {
      var values, success2;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            formDataRef.current.set(name, formData);
            if (!(!lastStep || !onFinish)) {
              _context.next = 3;
              break;
            }
            return _context.abrupt("return");
          case 3:
            setLoading(true);
            values = merge.apply(void 0, [{}].concat(_toConsumableArray(Array.from(formDataRef.current.values()))));
            _context.prev = 5;
            _context.next = 8;
            return onFinish(values);
          case 8:
            success2 = _context.sent;
            if (success2) {
              setStep(0);
              formArrayRef.current.forEach(function(form) {
                var _form$current;
                return (_form$current = form.current) === null || _form$current === void 0 ? void 0 : _form$current.resetFields();
              });
            }
            _context.next = 15;
            break;
          case 12:
            _context.prev = 12;
            _context.t0 = _context["catch"](5);
            console.log(_context.t0);
          case 15:
            _context.prev = 15;
            setLoading(false);
            return _context.finish(15);
          case 18:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[5, 12, 15, 18]]);
    }));
    return function(_x, _x2) {
      return _ref3.apply(this, arguments);
    };
  }(), [lastStep, onFinish, setLoading, setStep]);
  var stepsDom = (0, import_react88.useMemo)(function() {
    var isNewAntd = compareVersions(version_default, "4.24.0") > -1;
    var itemsProps = isNewAntd ? {
      items: formArray.map(function(item) {
        var itemProps = formMapRef.current.get(item);
        return _objectSpread2({
          key: item,
          title: itemProps === null || itemProps === void 0 ? void 0 : itemProps.title
        }, itemProps === null || itemProps === void 0 ? void 0 : itemProps.stepProps);
      })
    } : {};
    return (0, import_jsx_runtime114.jsx)("div", {
      className: "".concat(prefixCls, "-steps-container ").concat(hashId).trim(),
      style: {
        maxWidth: Math.min(formArray.length * 320, 1160)
      },
      children: (0, import_jsx_runtime114.jsx)(steps_default, _objectSpread2(_objectSpread2(_objectSpread2({}, stepsProps), itemsProps), {}, {
        current: step,
        onChange: void 0,
        children: !isNewAntd && formArray.map(function(item) {
          var itemProps = formMapRef.current.get(item);
          return (0, import_jsx_runtime114.jsx)(steps_default.Step, _objectSpread2({
            title: itemProps === null || itemProps === void 0 ? void 0 : itemProps.title
          }, itemProps === null || itemProps === void 0 ? void 0 : itemProps.stepProps), item);
        })
      }))
    });
  }, [formArray, hashId, prefixCls, step, stepsProps]);
  var onSubmit = useRefFunction(function() {
    var _from$current;
    var from = formArrayRef.current[step];
    (_from$current = from.current) === null || _from$current === void 0 || _from$current.submit();
  });
  var prePage = useRefFunction(function() {
    if (step < 1) return;
    setStep(step - 1);
  });
  var next = (0, import_react88.useMemo)(function() {
    return submitter !== false && (0, import_jsx_runtime114.jsx)(button_default, _objectSpread2(_objectSpread2({
      type: "primary",
      loading
    }, submitter === null || submitter === void 0 ? void 0 : submitter.submitButtonProps), {}, {
      onClick: function onClick() {
        var _submitter$onSubmit;
        submitter === null || submitter === void 0 || (_submitter$onSubmit = submitter.onSubmit) === null || _submitter$onSubmit === void 0 || _submitter$onSubmit.call(submitter);
        onSubmit();
      },
      children: intl.getMessage("stepsForm.next", "下一步")
    }), "next");
  }, [intl, loading, onSubmit, submitter]);
  var pre = (0, import_react88.useMemo)(function() {
    return submitter !== false && (0, import_jsx_runtime114.jsx)(button_default, _objectSpread2(_objectSpread2({}, submitter === null || submitter === void 0 ? void 0 : submitter.resetButtonProps), {}, {
      onClick: function onClick() {
        var _submitter$onReset;
        prePage();
        submitter === null || submitter === void 0 || (_submitter$onReset = submitter.onReset) === null || _submitter$onReset === void 0 || _submitter$onReset.call(submitter);
      },
      children: intl.getMessage("stepsForm.prev", "上一步")
    }), "pre");
  }, [intl, prePage, submitter]);
  var submit = (0, import_react88.useMemo)(function() {
    return submitter !== false && (0, import_jsx_runtime114.jsx)(button_default, _objectSpread2(_objectSpread2({
      type: "primary",
      loading
    }, submitter === null || submitter === void 0 ? void 0 : submitter.submitButtonProps), {}, {
      onClick: function onClick() {
        var _submitter$onSubmit2;
        submitter === null || submitter === void 0 || (_submitter$onSubmit2 = submitter.onSubmit) === null || _submitter$onSubmit2 === void 0 || _submitter$onSubmit2.call(submitter);
        onSubmit();
      },
      children: intl.getMessage("stepsForm.submit", "提交")
    }), "submit");
  }, [intl, loading, onSubmit, submitter]);
  var nextPage = useRefFunction(function() {
    if (step > formArray.length - 2) return;
    setStep(step + 1);
  });
  var submitterDom = (0, import_react88.useMemo)(function() {
    var buttons = [];
    var index = step || 0;
    if (index < 1) {
      if (formArray.length === 1) {
        buttons.push(submit);
      } else {
        buttons.push(next);
      }
    } else if (index + 1 === formArray.length) {
      buttons.push(pre, submit);
    } else {
      buttons.push(pre, next);
    }
    buttons = buttons.filter(import_react88.default.isValidElement);
    if (submitter && submitter.render) {
      var _formArrayRef$current2;
      var submitterProps = {
        form: (_formArrayRef$current2 = formArrayRef.current[step]) === null || _formArrayRef$current2 === void 0 ? void 0 : _formArrayRef$current2.current,
        onSubmit,
        step,
        onPre: prePage
      };
      return submitter.render(submitterProps, buttons);
    }
    if (submitter && (submitter === null || submitter === void 0 ? void 0 : submitter.render) === false) {
      return null;
    }
    return buttons;
  }, [formArray.length, next, onSubmit, pre, prePage, step, submit, submitter]);
  var formDom = (0, import_react88.useMemo)(function() {
    return toArray(props.children).map(function(item, index) {
      var itemProps = item.props;
      var name = itemProps.name || "".concat(index);
      var isShow = step === index;
      var config = isShow ? {
        contentRender: stepFormRender,
        submitter: false
      } : {};
      return (0, import_jsx_runtime114.jsx)("div", {
        className: (0, import_classnames17.default)("".concat(prefixCls, "-step"), hashId, _defineProperty({}, "".concat(prefixCls, "-step-active"), isShow)),
        children: (0, import_jsx_runtime114.jsx)(StepFormProvide.Provider, {
          value: _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, config), formProps), itemProps), {}, {
            name,
            step: index
          }),
          children: item
        })
      }, name);
    });
  }, [formProps, hashId, prefixCls, props.children, step, stepFormRender]);
  var finalStepsDom = (0, import_react88.useMemo)(function() {
    if (stepsRender) {
      return stepsRender(formArray.map(function(item) {
        var _formMapRef$current$g;
        return {
          key: item,
          title: (_formMapRef$current$g = formMapRef.current.get(item)) === null || _formMapRef$current$g === void 0 ? void 0 : _formMapRef$current$g.title
        };
      }), stepsDom);
    }
    return stepsDom;
  }, [formArray, stepsDom, stepsRender]);
  var formContainer = (0, import_react88.useMemo)(function() {
    return (0, import_jsx_runtime116.jsxs)("div", {
      className: "".concat(prefixCls, "-container ").concat(hashId).trim(),
      style: containerStyle,
      children: [formDom, stepsFormRender ? null : (0, import_jsx_runtime114.jsx)(space_default, {
        children: submitterDom
      })]
    });
  }, [containerStyle, formDom, hashId, prefixCls, stepsFormRender, submitterDom]);
  var stepsFormDom = (0, import_react88.useMemo)(function() {
    var doms = {
      stepsDom: finalStepsDom,
      formDom: formContainer
    };
    if (stepsFormRender) {
      if (propsLayoutRender) {
        return stepsFormRender(propsLayoutRender(doms), submitterDom);
      } else {
        return stepsFormRender(layoutRender(doms), submitterDom);
      }
    }
    if (propsLayoutRender) {
      return propsLayoutRender(doms);
    }
    return layoutRender(doms);
  }, [finalStepsDom, formContainer, layoutRender, stepsFormRender, submitterDom, propsLayoutRender]);
  return wrapSSR((0, import_jsx_runtime114.jsx)("div", {
    className: (0, import_classnames17.default)(prefixCls, hashId),
    children: (0, import_jsx_runtime114.jsx)(form_default.Provider, _objectSpread2(_objectSpread2({}, rest), {}, {
      children: (0, import_jsx_runtime114.jsx)(StepsFormProvide.Provider, {
        value: {
          loading,
          setLoading,
          regForm,
          keyArray: formArray,
          next: nextPage,
          formArrayRef,
          formMapRef,
          lastStep,
          unRegForm,
          onFormFinish
        },
        children: stepsFormDom
      })
    }))
  }));
}
function StepsFormWarp(props) {
  return (0, import_jsx_runtime114.jsx)(ProConfigProvider, {
    needDeps: true,
    children: (0, import_jsx_runtime114.jsx)(StepsForm, _objectSpread2({}, props))
  });
}
StepsFormWarp.StepForm = StepForm_default;
StepsFormWarp.useForm = form_default.useForm;

// node_modules/@ant-design/pro-form/es/components/SchemaForm/layoutType/Embed.js
var import_jsx_runtime117 = __toESM(require_jsx_runtime());
var import_jsx_runtime118 = __toESM(require_jsx_runtime());
var Embed = function Embed2(_ref) {
  var children = _ref.children;
  return (0, import_jsx_runtime118.jsx)(import_jsx_runtime117.Fragment, {
    children
  });
};
var Embed_default = Embed;

// node_modules/@ant-design/pro-form/es/components/SchemaForm/layoutType/StepsForm.js
var import_react89 = __toESM(require_react());
var import_react90 = __toESM(require_react());
var import_jsx_runtime119 = __toESM(require_jsx_runtime());
var _excluded60 = ["steps", "columns", "forceUpdate", "grid"];
var StepsForm2 = function StepsForm3(_ref) {
  var steps = _ref.steps, columns = _ref.columns, forceUpdate = _ref.forceUpdate, grid = _ref.grid, props = _objectWithoutProperties(_ref, _excluded60);
  var propsRef = useLatest(props);
  var onCurrentChange = (0, import_react89.useCallback)(function(current) {
    var _propsRef$current$onC, _propsRef$current;
    (_propsRef$current$onC = (_propsRef$current = propsRef.current).onCurrentChange) === null || _propsRef$current$onC === void 0 || _propsRef$current$onC.call(_propsRef$current, current);
    forceUpdate([]);
  }, [forceUpdate, propsRef]);
  var StepDoms = (0, import_react89.useMemo)(function() {
    return steps === null || steps === void 0 ? void 0 : steps.map(function(step, index) {
      return (0, import_react90.createElement)(SchemaForm_default, _objectSpread2(_objectSpread2({
        grid
      }, step), {}, {
        // eslint-disable-next-line react/no-array-index-key
        key: index,
        layoutType: "StepForm",
        columns: columns[index]
      }));
    });
  }, [columns, grid, steps]);
  return (0, import_jsx_runtime119.jsx)(StepsFormWarp, _objectSpread2(_objectSpread2({}, props), {}, {
    onCurrentChange,
    children: StepDoms
  }));
};
var StepsForm_default = StepsForm2;

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/dependency.js
var import_react91 = __toESM(require_react());
var dependency = function dependency2(item, helpers) {
  if (item.valueType === "dependency") {
    var _item$getFieldProps, _item$name, _item$name2;
    var fieldProps = (_item$getFieldProps = item.getFieldProps) === null || _item$getFieldProps === void 0 ? void 0 : _item$getFieldProps.call(item);
    noteOnce(Array.isArray((_item$name = item.name) !== null && _item$name !== void 0 ? _item$name : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.name), 'SchemaForm: fieldProps.name should be NamePath[] when valueType is "dependency"');
    noteOnce(typeof item.columns === "function", 'SchemaForm: columns should be a function when valueType is "dependency"');
    if (!Array.isArray((_item$name2 = item.name) !== null && _item$name2 !== void 0 ? _item$name2 : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.name)) return null;
    return (0, import_react91.createElement)(Dependency_default, _objectSpread2(_objectSpread2({
      name: item.name
    }, fieldProps), {}, {
      key: item.key
    }), function(values) {
      if (!item.columns || typeof item.columns !== "function") return null;
      return helpers.genItems(item.columns(values));
    });
  }
  return true;
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/divider.js
var import_react92 = __toESM(require_react());
var divider = function divider2(item) {
  if (item.valueType === "divider") {
    var _item$getFieldProps;
    return (0, import_react92.createElement)(divider_default, _objectSpread2(_objectSpread2({}, (_item$getFieldProps = item.getFieldProps) === null || _item$getFieldProps === void 0 ? void 0 : _item$getFieldProps.call(item)), {}, {
      key: item.key
    }));
  }
  return true;
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/field.js
var import_react93 = __toESM(require_react());
var import_jsx_runtime120 = __toESM(require_jsx_runtime());
var import_react94 = __toESM(require_react());
var field = function field2(item, _ref) {
  var action = _ref.action, formRef = _ref.formRef, type = _ref.type, originItem = _ref.originItem;
  var formFieldProps = _objectSpread2(_objectSpread2({}, es_default3(item, ["dataIndex", "width", "render", "renderFormItem", "renderText", "title"])), {}, {
    name: item.name || item.key || item.dataIndex,
    width: item.width,
    render: item !== null && item !== void 0 && item.render ? function(dom, entity, renderIndex) {
      var _item$render, _item$key, _item$getFormItemProp, _item$getFieldProps;
      return item === null || item === void 0 || (_item$render = item.render) === null || _item$render === void 0 ? void 0 : _item$render.call(item, dom, entity, renderIndex, action === null || action === void 0 ? void 0 : action.current, _objectSpread2(_objectSpread2({
        type
      }, item), {}, {
        key: (_item$key = item.key) === null || _item$key === void 0 ? void 0 : _item$key.toString(),
        formItemProps: (_item$getFormItemProp = item.getFormItemProps) === null || _item$getFormItemProp === void 0 ? void 0 : _item$getFormItemProp.call(item),
        fieldProps: (_item$getFieldProps = item.getFieldProps) === null || _item$getFieldProps === void 0 ? void 0 : _item$getFieldProps.call(item)
      }));
    } : void 0
  });
  var defaultRender = function defaultRender2() {
    return (0, import_jsx_runtime120.jsx)(Field_default, _objectSpread2(_objectSpread2({}, formFieldProps), {}, {
      ignoreFormItem: true
    }));
  };
  var renderFormItem = item !== null && item !== void 0 && item.renderFormItem ? function(_, config) {
    var _item$renderFormItem, _item$key2, _item$getFormItemProp2, _item$getFieldProps2;
    var renderConfig = omitUndefined(_objectSpread2(_objectSpread2({}, config), {}, {
      onChange: void 0
    }));
    return item === null || item === void 0 || (_item$renderFormItem = item.renderFormItem) === null || _item$renderFormItem === void 0 ? void 0 : _item$renderFormItem.call(item, _objectSpread2(_objectSpread2({
      type
    }, item), {}, {
      key: (_item$key2 = item.key) === null || _item$key2 === void 0 ? void 0 : _item$key2.toString(),
      formItemProps: (_item$getFormItemProp2 = item.getFormItemProps) === null || _item$getFormItemProp2 === void 0 ? void 0 : _item$getFormItemProp2.call(item),
      fieldProps: (_item$getFieldProps2 = item.getFieldProps) === null || _item$getFieldProps2 === void 0 ? void 0 : _item$getFieldProps2.call(item),
      originProps: originItem
    }), _objectSpread2(_objectSpread2({}, renderConfig), {}, {
      defaultRender,
      type
    }), formRef.current);
  } : void 0;
  var getField = function getField2() {
    if (item !== null && item !== void 0 && item.renderFormItem) {
      var dom = renderFormItem === null || renderFormItem === void 0 ? void 0 : renderFormItem(null, {});
      if (!dom || item.ignoreFormItem) return dom;
    }
    return (0, import_react94.createElement)(Field_default, _objectSpread2(_objectSpread2({}, formFieldProps), {}, {
      key: [item.key, item.index || 0].join("-"),
      renderFormItem
    }));
  };
  if (item.dependencies) {
    return (0, import_jsx_runtime120.jsx)(Dependency_default, {
      name: item.dependencies || [],
      children: getField
    }, item.key);
  }
  return getField();
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/formList.js
var import_react95 = __toESM(require_react());
var formList = function formList2(item, _ref) {
  var genItems = _ref.genItems;
  if (item.valueType === "formList" && item.dataIndex) {
    var _item$getFormItemProp, _item$getFieldProps;
    if (!item.columns || !Array.isArray(item.columns)) return null;
    return (0, import_react95.createElement)(ProFormList, _objectSpread2(_objectSpread2({}, (_item$getFormItemProp = item.getFormItemProps) === null || _item$getFormItemProp === void 0 ? void 0 : _item$getFormItemProp.call(item)), {}, {
      key: item.key,
      name: item.dataIndex,
      label: item.label,
      initialValue: item.initialValue,
      colProps: item.colProps,
      rowProps: item.rowProps
    }, (_item$getFieldProps = item.getFieldProps) === null || _item$getFieldProps === void 0 ? void 0 : _item$getFieldProps.call(item)), genItems(item.columns));
  }
  return true;
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/formSet.js
var import_react96 = __toESM(require_react());
var formSet = function formSet2(item, _ref) {
  var genItems = _ref.genItems;
  if (item.valueType === "formSet" && item.dataIndex) {
    var _item$getFormItemProp, _item$getFieldProps;
    if (!item.columns || !Array.isArray(item.columns)) return null;
    return (0, import_react96.createElement)(FieldSet_default, _objectSpread2(_objectSpread2({}, (_item$getFormItemProp = item.getFormItemProps) === null || _item$getFormItemProp === void 0 ? void 0 : _item$getFormItemProp.call(item)), {}, {
      key: item.key,
      initialValue: item.initialValue,
      name: item.dataIndex,
      label: item.label,
      colProps: item.colProps,
      rowProps: item.rowProps
    }, (_item$getFieldProps = item.getFieldProps) === null || _item$getFieldProps === void 0 ? void 0 : _item$getFieldProps.call(item)), genItems(item.columns));
  }
  return true;
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/group.js
var import_jsx_runtime121 = __toESM(require_jsx_runtime());
var group = function group2(item, _ref) {
  var genItems = _ref.genItems;
  if (item.valueType === "group") {
    var _item$getFieldProps;
    if (!item.columns || !Array.isArray(item.columns)) return null;
    return (0, import_jsx_runtime121.jsx)(ProFormGroup, _objectSpread2(_objectSpread2({
      label: item.label,
      colProps: item.colProps,
      rowProps: item.rowProps
    }, (_item$getFieldProps = item.getFieldProps) === null || _item$getFieldProps === void 0 ? void 0 : _item$getFieldProps.call(item)), {}, {
      children: genItems(item.columns)
    }), item.key);
  }
  return true;
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/ignore.js
var ignore = function ignore2(item) {
  if (item.valueType && typeof item.valueType === "string" && ["index", "indexBorder", "option"].includes(item === null || item === void 0 ? void 0 : item.valueType)) {
    return null;
  }
  return true;
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/valueType/index.js
var tasks = [ignore, group, formList, formSet, divider, dependency];
var renderValueType = function renderValueType2(item, helpers) {
  for (var cur = 0; cur < tasks.length; cur++) {
    var task = tasks[cur];
    var dom = task(item, helpers);
    if (dom === true) {
      continue;
    } else {
      return dom;
    }
  }
  return field(item, helpers);
};

// node_modules/@ant-design/pro-form/es/components/SchemaForm/index.js
var import_jsx_runtime122 = __toESM(require_jsx_runtime());
var _excluded61 = ["columns", "layoutType", "type", "action", "shouldUpdate", "formRef"];
var FormLayoutType = {
  DrawerForm,
  QueryFilter,
  LightFilter,
  StepForm: StepsFormWarp.StepForm,
  StepsForm: StepsForm_default,
  ModalForm,
  Embed: Embed_default,
  Form: ProForm
};
function BetaSchemaForm(props) {
  var columns = props.columns, _props$layoutType = props.layoutType, layoutType = _props$layoutType === void 0 ? "Form" : _props$layoutType, _props$type = props.type, type = _props$type === void 0 ? "form" : _props$type, action = props.action, _props$shouldUpdate = props.shouldUpdate, shouldUpdate = _props$shouldUpdate === void 0 ? function(pre, next) {
    return stringify_default(pre) !== stringify_default(next);
  } : _props$shouldUpdate, propsFormRef = props.formRef, restProps = _objectWithoutProperties(props, _excluded61);
  var FormRenderComponents = FormLayoutType[layoutType] || ProForm;
  var _Form$useForm = form_default.useForm(), _Form$useForm2 = _slicedToArray(_Form$useForm, 1), form = _Form$useForm2[0];
  var formInstance = form_default.useFormInstance();
  var _useState = (0, import_react97.useState)([]), _useState2 = _slicedToArray(_useState, 2), forceUpdate = _useState2[1];
  var _useState3 = (0, import_react97.useState)(function() {
    return [];
  }), _useState4 = _slicedToArray(_useState3, 2), formDomsDeps = _useState4[0], updatedFormDoms = _useState4[1];
  var formRef = useReactiveRef(props.form || formInstance || form);
  var oldValuesRef = (0, import_react97.useRef)();
  var propsRef = useLatest(props);
  var genItems = useRefFunction(function(items) {
    return items.filter(function(originItem) {
      return !(originItem.hideInForm && type === "form");
    }).sort(function(a, b) {
      if (b.order || a.order) {
        return (b.order || 0) - (a.order || 0);
      }
      return (b.index || 0) - (a.index || 0);
    }).map(function(originItem, index) {
      var title = runFunction(originItem.title, originItem, "form", (0, import_jsx_runtime122.jsx)(LabelIconTip, {
        label: originItem.title,
        tooltip: originItem.tooltip || originItem.tip
      }));
      var item = omitUndefined({
        title,
        label: title,
        name: originItem.name,
        valueType: runFunction(originItem.valueType, {}),
        key: originItem.key || originItem.dataIndex || index,
        columns: originItem.columns,
        valueEnum: originItem.valueEnum,
        dataIndex: originItem.dataIndex || originItem.key,
        initialValue: originItem.initialValue,
        width: originItem.width,
        index: originItem.index,
        readonly: originItem.readonly,
        colSize: originItem.colSize,
        colProps: originItem.colProps,
        rowProps: originItem.rowProps,
        className: originItem.className,
        //@ts-expect-error
        tooltip: originItem.tooltip || originItem.tip,
        dependencies: originItem.dependencies,
        proFieldProps: originItem.proFieldProps,
        ignoreFormItem: originItem.ignoreFormItem,
        getFieldProps: originItem.fieldProps ? function() {
          return runFunction(originItem.fieldProps, formRef.current, originItem);
        } : void 0,
        getFormItemProps: originItem.formItemProps ? function() {
          return runFunction(originItem.formItemProps, formRef.current, originItem);
        } : void 0,
        render: originItem.render,
        renderFormItem: originItem.renderFormItem,
        renderText: originItem.renderText,
        request: originItem.request,
        params: originItem.params,
        transform: originItem.transform,
        convertValue: originItem.convertValue,
        debounceTime: originItem.debounceTime,
        defaultKeyWords: originItem.defaultKeyWords
      });
      return renderValueType(item, {
        action,
        type,
        originItem,
        formRef,
        genItems
      });
    }).filter(function(field3) {
      return Boolean(field3);
    });
  });
  var onValuesChange = (0, import_react97.useCallback)(function(changedValues, values) {
    var propsOnValuesChange = propsRef.current.onValuesChange;
    if (shouldUpdate === true || typeof shouldUpdate === "function" && shouldUpdate(values, oldValuesRef.current)) {
      updatedFormDoms([]);
    }
    oldValuesRef.current = values;
    propsOnValuesChange === null || propsOnValuesChange === void 0 || propsOnValuesChange(changedValues, values);
  }, [propsRef, shouldUpdate]);
  var formChildrenDoms = useDeepCompareMemo_default(function() {
    if (!formRef.current) return;
    if (columns.length && Array.isArray(columns[0])) return;
    return genItems(columns);
  }, [columns, restProps === null || restProps === void 0 ? void 0 : restProps.open, action, type, formDomsDeps, !!formRef.current]);
  var specificProps = useDeepCompareMemo_default(function() {
    if (layoutType === "StepsForm") {
      return {
        forceUpdate,
        columns
      };
    }
    return {};
  }, [columns, layoutType]);
  (0, import_react97.useImperativeHandle)(propsFormRef, function() {
    return formRef.current;
  }, [formRef.current]);
  return (0, import_jsx_runtime122.jsx)(FormRenderComponents, _objectSpread2(_objectSpread2(_objectSpread2({}, specificProps), restProps), {}, {
    onInit: function onInit(_, initForm) {
      var _restProps$onInit;
      if (propsFormRef) {
        propsFormRef.current = initForm;
      }
      restProps === null || restProps === void 0 || (_restProps$onInit = restProps.onInit) === null || _restProps$onInit === void 0 || _restProps$onInit.call(restProps, _, initForm);
      formRef.current = initForm;
    },
    form: props.form || form,
    formRef,
    onValuesChange,
    children: formChildrenDoms
  }));
}
var SchemaForm_default = BetaSchemaForm;

// node_modules/@ant-design/pro-form/es/components/Segmented/index.js
var import_react98 = __toESM(require_react());
var import_jsx_runtime123 = __toESM(require_jsx_runtime());
var _excluded63 = ["fieldProps", "request", "params", "proFieldProps"];
var ProFormSegmented = function ProFormSegmented2(_ref, ref) {
  var fieldProps = _ref.fieldProps, request = _ref.request, params = _ref.params, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded63);
  return (0, import_jsx_runtime123.jsx)(Field_default, _objectSpread2({
    valueType: "segmented",
    fieldProps,
    ref,
    request,
    params,
    filedConfig: {
      customLightMode: true
    },
    proFieldProps
  }, rest));
};
var WarpProFormSegmented = import_react98.default.forwardRef(ProFormSegmented);

// node_modules/@ant-design/pro-form/es/components/Select/index.js
var import_react99 = __toESM(require_react());
var import_jsx_runtime124 = __toESM(require_jsx_runtime());
var _excluded64 = ["fieldProps", "children", "params", "proFieldProps", "mode", "valueEnum", "request", "showSearch", "options"];
var _excluded213 = ["fieldProps", "children", "params", "proFieldProps", "mode", "valueEnum", "request", "options"];
var ProFormSelectComponents = function ProFormSelectComponents2(_ref, ref) {
  var fieldProps = _ref.fieldProps, children = _ref.children, params = _ref.params, proFieldProps = _ref.proFieldProps, mode = _ref.mode, valueEnum = _ref.valueEnum, request = _ref.request, showSearch = _ref.showSearch, options = _ref.options, rest = _objectWithoutProperties(_ref, _excluded64);
  var context = (0, import_react99.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime124.jsx)(Field_default, _objectSpread2(_objectSpread2({
    valueEnum: runFunction(valueEnum),
    request,
    params,
    valueType: "select",
    filedConfig: {
      customLightMode: true
    },
    fieldProps: _objectSpread2({
      options,
      mode,
      showSearch,
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    ref,
    proFieldProps
  }, rest), {}, {
    children
  }));
};
var SearchSelect3 = import_react99.default.forwardRef(function(_ref2, ref) {
  var fieldProps = _ref2.fieldProps, children = _ref2.children, params = _ref2.params, proFieldProps = _ref2.proFieldProps, mode = _ref2.mode, valueEnum = _ref2.valueEnum, request = _ref2.request, options = _ref2.options, rest = _objectWithoutProperties(_ref2, _excluded213);
  var props = _objectSpread2({
    options,
    mode: mode || "multiple",
    labelInValue: true,
    showSearch: true,
    suffixIcon: null,
    autoClearSearchValue: true,
    optionLabelProp: "label"
  }, fieldProps);
  var context = (0, import_react99.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime124.jsx)(Field_default, _objectSpread2(_objectSpread2({
    valueEnum: runFunction(valueEnum),
    request,
    params,
    valueType: "select",
    filedConfig: {
      customLightMode: true
    },
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, props),
    ref,
    proFieldProps
  }, rest), {}, {
    children
  }));
});
var ProFormSelect = import_react99.default.forwardRef(ProFormSelectComponents);
var ProFormSearchSelect = SearchSelect3;
var WrappedProFormSelect = ProFormSelect;
WrappedProFormSelect.SearchSelect = ProFormSearchSelect;
WrappedProFormSelect.displayName = "ProFormComponent";

// node_modules/@ant-design/pro-form/es/components/Slider/index.js
var import_react100 = __toESM(require_react());
var import_jsx_runtime125 = __toESM(require_jsx_runtime());
var _excluded65 = ["fieldProps", "proFieldProps", "min", "max", "step", "marks", "vertical", "range"];
var ProFormSlider = import_react100.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, min = _ref.min, max = _ref.max, step = _ref.step, marks = _ref.marks, vertical2 = _ref.vertical, range = _ref.range, rest = _objectWithoutProperties(_ref, _excluded65);
  return (0, import_jsx_runtime125.jsx)(Field_default, _objectSpread2({
    valueType: "slider",
    fieldProps: _objectSpread2(_objectSpread2({}, fieldProps), {}, {
      min,
      max,
      step,
      marks,
      vertical: vertical2,
      range,
      style: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.style
    }),
    ref,
    proFieldProps,
    filedConfig: {
      ignoreWidth: true
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/Submitter/index.js
var import_react101 = __toESM(require_react());
var import_react102 = __toESM(require_react());
var import_jsx_runtime126 = __toESM(require_jsx_runtime());
var Submitter = function Submitter2(props) {
  var intl = useIntl();
  var form = form_default.useFormInstance();
  if (props.render === false) {
    return null;
  }
  var onSubmit = props.onSubmit, render3 = props.render, onReset = props.onReset, _props$searchConfig = props.searchConfig, searchConfig = _props$searchConfig === void 0 ? {} : _props$searchConfig, submitButtonProps = props.submitButtonProps, resetButtonProps = props.resetButtonProps;
  var _proTheme$useToken = proTheme.useToken(), token = _proTheme$useToken.token;
  var submit = function submit2() {
    form.submit();
    onSubmit === null || onSubmit === void 0 || onSubmit();
  };
  var reset = function reset2() {
    form.resetFields();
    onReset === null || onReset === void 0 || onReset();
  };
  var _searchConfig$submitT = searchConfig.submitText, submitText = _searchConfig$submitT === void 0 ? intl.getMessage("tableForm.submit", "提交") : _searchConfig$submitT, _searchConfig$resetTe = searchConfig.resetText, resetText = _searchConfig$resetTe === void 0 ? intl.getMessage("tableForm.reset", "重置") : _searchConfig$resetTe;
  var dom = [];
  if (resetButtonProps !== false) {
    dom.push((0, import_react102.createElement)(button_default, _objectSpread2(_objectSpread2({}, es_default3(resetButtonProps, ["preventDefault"])), {}, {
      key: "rest",
      onClick: function onClick(e) {
        var _resetButtonProps$onC;
        if (!(resetButtonProps !== null && resetButtonProps !== void 0 && resetButtonProps.preventDefault)) reset();
        resetButtonProps === null || resetButtonProps === void 0 || (_resetButtonProps$onC = resetButtonProps.onClick) === null || _resetButtonProps$onC === void 0 || _resetButtonProps$onC.call(resetButtonProps, e);
      }
    }), resetText));
  }
  if (submitButtonProps !== false) {
    dom.push((0, import_react102.createElement)(button_default, _objectSpread2(_objectSpread2({
      type: "primary"
    }, es_default3(submitButtonProps || {}, ["preventDefault"])), {}, {
      key: "submit",
      onClick: function onClick(e) {
        var _submitButtonProps$on;
        if (!(submitButtonProps !== null && submitButtonProps !== void 0 && submitButtonProps.preventDefault)) submit();
        submitButtonProps === null || submitButtonProps === void 0 || (_submitButtonProps$on = submitButtonProps.onClick) === null || _submitButtonProps$on === void 0 || _submitButtonProps$on.call(submitButtonProps, e);
      }
    }), submitText));
  }
  var renderDom = render3 ? render3(_objectSpread2(_objectSpread2({}, props), {}, {
    form,
    submit,
    reset
  }), dom) : dom;
  if (!renderDom) {
    return null;
  }
  if (Array.isArray(renderDom)) {
    if ((renderDom === null || renderDom === void 0 ? void 0 : renderDom.length) < 1) {
      return null;
    }
    if ((renderDom === null || renderDom === void 0 ? void 0 : renderDom.length) === 1) {
      return renderDom[0];
    }
    return (0, import_jsx_runtime126.jsx)("div", {
      style: {
        display: "flex",
        gap: token.marginXS,
        alignItems: "center"
      },
      children: renderDom
    });
  }
  return renderDom;
};
var Submitter_default = Submitter;

// node_modules/@ant-design/pro-form/es/components/Switch/index.js
var import_react103 = __toESM(require_react());
var import_jsx_runtime127 = __toESM(require_jsx_runtime());
var _excluded66 = ["fieldProps", "unCheckedChildren", "checkedChildren", "proFieldProps"];
var ProFormSwitch = import_react103.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, unCheckedChildren = _ref.unCheckedChildren, checkedChildren = _ref.checkedChildren, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded66);
  return (0, import_jsx_runtime127.jsx)(Field_default, _objectSpread2({
    valueType: "switch",
    fieldProps: _objectSpread2({
      unCheckedChildren,
      checkedChildren
    }, fieldProps),
    ref,
    valuePropName: "checked",
    proFieldProps,
    filedConfig: {
      valuePropName: "checked",
      ignoreWidth: true,
      customLightMode: true
    }
  }, rest));
});

// node_modules/@ant-design/pro-form/es/components/Text/index.js
var import_react104 = __toESM(require_react());
var import_jsx_runtime128 = __toESM(require_jsx_runtime());
var import_jsx_runtime129 = __toESM(require_jsx_runtime());
var _excluded67 = ["fieldProps", "proFieldProps"];
var _excluded214 = ["fieldProps", "proFieldProps"];
var valueType13 = "text";
var ProFormText = function ProFormText2(_ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded67);
  return (0, import_jsx_runtime128.jsx)(Field_default, _objectSpread2({
    valueType: valueType13,
    fieldProps,
    filedConfig: {
      valueType: valueType13
    },
    proFieldProps
  }, rest));
};
var PassWordStrength = function PassWordStrength2(props) {
  var _useMountMergeState = useMergedState(props.open || false, {
    value: props.open,
    onChange: props.onOpenChange
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), open = _useMountMergeState2[0], setOpen = _useMountMergeState2[1];
  return (0, import_jsx_runtime128.jsx)(form_default.Item, {
    shouldUpdate: true,
    noStyle: true,
    children: function children(form) {
      var _props$statusRender;
      var value = form.getFieldValue(props.name || []);
      return (0, import_jsx_runtime128.jsx)(popover_default, _objectSpread2(_objectSpread2({
        getPopupContainer: function getPopupContainer(node) {
          if (node && node.parentNode) {
            return node.parentNode;
          }
          return node;
        },
        onOpenChange: function onOpenChange(e) {
          return setOpen(e);
        },
        content: (0, import_jsx_runtime129.jsxs)("div", {
          style: {
            padding: "4px 0"
          },
          children: [(_props$statusRender = props.statusRender) === null || _props$statusRender === void 0 ? void 0 : _props$statusRender.call(props, value), props.strengthText ? (0, import_jsx_runtime128.jsx)("div", {
            style: {
              marginTop: 10
            },
            children: (0, import_jsx_runtime128.jsx)("span", {
              children: props.strengthText
            })
          }) : null]
        }),
        overlayStyle: {
          width: 240
        },
        placement: "rightTop"
      }, props.popoverProps), {}, {
        open,
        children: props.children
      }));
    }
  });
};
var Password = function Password2(_ref2) {
  var fieldProps = _ref2.fieldProps, proFieldProps = _ref2.proFieldProps, rest = _objectWithoutProperties(_ref2, _excluded214);
  var _useState = (0, import_react104.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  if (fieldProps !== null && fieldProps !== void 0 && fieldProps.statusRender && rest.name) {
    return (0, import_jsx_runtime128.jsx)(PassWordStrength, {
      name: rest.name,
      statusRender: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.statusRender,
      popoverProps: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.popoverProps,
      strengthText: fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.strengthText,
      open,
      onOpenChange: setOpen,
      children: (0, import_jsx_runtime128.jsx)("div", {
        children: (0, import_jsx_runtime128.jsx)(Field_default, _objectSpread2({
          valueType: "password",
          fieldProps: _objectSpread2(_objectSpread2({}, es_default3(fieldProps, ["statusRender", "popoverProps", "strengthText"])), {}, {
            onBlur: function onBlur(e) {
              var _fieldProps$onBlur;
              fieldProps === null || fieldProps === void 0 || (_fieldProps$onBlur = fieldProps.onBlur) === null || _fieldProps$onBlur === void 0 || _fieldProps$onBlur.call(fieldProps, e);
              setOpen(false);
            },
            onClick: function onClick(e) {
              var _fieldProps$onClick;
              fieldProps === null || fieldProps === void 0 || (_fieldProps$onClick = fieldProps.onClick) === null || _fieldProps$onClick === void 0 || _fieldProps$onClick.call(fieldProps, e);
              setOpen(true);
            }
          }),
          proFieldProps,
          filedConfig: {
            valueType: valueType13
          }
        }, rest))
      })
    });
  }
  return (0, import_jsx_runtime128.jsx)(Field_default, _objectSpread2({
    valueType: "password",
    fieldProps,
    proFieldProps,
    filedConfig: {
      valueType: valueType13
    }
  }, rest));
};
var WrappedProFormText = ProFormText;
WrappedProFormText.Password = Password;
WrappedProFormText.displayName = "ProFormComponent";

// node_modules/@ant-design/pro-form/es/components/TextArea/index.js
var import_react105 = __toESM(require_react());
var import_jsx_runtime130 = __toESM(require_jsx_runtime());
var _excluded68 = ["fieldProps", "proFieldProps"];
var ProFormTextArea = function ProFormTextArea2(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded68);
  return (0, import_jsx_runtime130.jsx)(Field_default, _objectSpread2({
    ref,
    valueType: "textarea",
    fieldProps,
    proFieldProps
  }, rest));
};
var TextArea_default2 = import_react105.default.forwardRef(ProFormTextArea);

// node_modules/@ant-design/pro-form/es/components/TimePicker/index.js
var import_react106 = __toESM(require_react());
var import_jsx_runtime131 = __toESM(require_jsx_runtime());
var _excluded69 = ["fieldProps", "proFieldProps"];
var _excluded215 = ["fieldProps", "proFieldProps"];
var valueType14 = "time";
var TimeRangePicker = import_react106.default.forwardRef(function(_ref, ref) {
  var fieldProps = _ref.fieldProps, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded69);
  var context = (0, import_react106.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime131.jsx)(Field_default, _objectSpread2({
    ref,
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: "timeRange",
    proFieldProps,
    filedConfig: {
      valueType: "timeRange",
      customLightMode: true,
      lightFilterLabelFormatter: function lightFilterLabelFormatter(value) {
        return dateArrayFormatter(value, "HH:mm:ss");
      }
    }
  }, rest));
});
var ProFormTimePicker = function ProFormTimePicker2(_ref2) {
  var fieldProps = _ref2.fieldProps, proFieldProps = _ref2.proFieldProps, rest = _objectWithoutProperties(_ref2, _excluded215);
  var context = (0, import_react106.useContext)(FieldContext_default2);
  return (0, import_jsx_runtime131.jsx)(Field_default, _objectSpread2({
    fieldProps: _objectSpread2({
      getPopupContainer: context.getPopupContainer
    }, fieldProps),
    valueType: valueType14,
    proFieldProps,
    filedConfig: {
      customLightMode: true,
      valueType: valueType14
    }
  }, rest));
};
var WrappedProFormTimePicker = ProFormTimePicker;
WrappedProFormTimePicker.RangePicker = TimeRangePicker;

// node_modules/@ant-design/pro-form/es/components/TreeSelect/index.js
var import_react107 = __toESM(require_react());
var import_jsx_runtime132 = __toESM(require_jsx_runtime());
var _excluded70 = ["fieldProps", "request", "params", "proFieldProps"];
var ProFormTreeSelect = function ProFormTreeSelect2(_ref, ref) {
  var fieldProps = _ref.fieldProps, request = _ref.request, params = _ref.params, proFieldProps = _ref.proFieldProps, rest = _objectWithoutProperties(_ref, _excluded70);
  return (0, import_jsx_runtime132.jsx)(Field_default, _objectSpread2({
    valueType: "treeSelect",
    fieldProps,
    ref,
    request,
    params,
    filedConfig: {
      customLightMode: true
    },
    proFieldProps
  }, rest));
};
var WarpProFormTreeSelect = import_react107.default.forwardRef(ProFormTreeSelect);

// node_modules/@ant-design/pro-form/es/components/UploadButton/index.js
var import_react108 = __toESM(require_react());
var import_jsx_runtime133 = __toESM(require_jsx_runtime());
var import_jsx_runtime134 = __toESM(require_jsx_runtime());
var _excluded71 = ["fieldProps", "action", "accept", "listType", "title", "max", "icon", "buttonProps", "disabled", "proFieldProps"];
var BaseProFormUploadButton = function BaseProFormUploadButton2(_ref, ref) {
  var _fieldProps$name;
  var fieldProps = _ref.fieldProps, action = _ref.action, accept = _ref.accept, listType = _ref.listType, _ref$title = _ref.title, title = _ref$title === void 0 ? "单击上传" : _ref$title, max = _ref.max, _ref$icon = _ref.icon, icon = _ref$icon === void 0 ? (0, import_jsx_runtime133.jsx)(UploadOutlined_default, {}) : _ref$icon, buttonProps = _ref.buttonProps, disabled = _ref.disabled, proFieldProps = _ref.proFieldProps, restProps = _objectWithoutProperties(_ref, _excluded71);
  var value = (0, import_react108.useMemo)(function() {
    var _restProps$fileList;
    return (_restProps$fileList = restProps.fileList) !== null && _restProps$fileList !== void 0 ? _restProps$fileList : restProps.value;
  }, [restProps.fileList, restProps.value]);
  var modeContext = (0, import_react108.useContext)(EditOrReadOnlyContext);
  var mode = (proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.mode) || modeContext.mode || "edit";
  var showUploadButton = (max === void 0 || !value || (value === null || value === void 0 ? void 0 : value.length) < max) && mode !== "read";
  var isPictureCard = (listType !== null && listType !== void 0 ? listType : fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.listType) === "picture-card";
  return (0, import_jsx_runtime133.jsx)(upload_default, _objectSpread2(_objectSpread2({
    action,
    accept,
    ref,
    listType: listType || "picture",
    fileList: value
  }, fieldProps), {}, {
    name: (_fieldProps$name = fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.name) !== null && _fieldProps$name !== void 0 ? _fieldProps$name : "file",
    onChange: function onChange(info) {
      var _fieldProps$onChange;
      fieldProps === null || fieldProps === void 0 || (_fieldProps$onChange = fieldProps.onChange) === null || _fieldProps$onChange === void 0 || _fieldProps$onChange.call(fieldProps, info);
    },
    children: showUploadButton && (isPictureCard ? (0, import_jsx_runtime134.jsxs)("span", {
      children: [icon, " ", title]
    }) : (0, import_jsx_runtime134.jsxs)(button_default, _objectSpread2(_objectSpread2({
      disabled: disabled || (fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.disabled)
    }, buttonProps), {}, {
      children: [icon, title]
    })))
  }));
};
var ProFormUploadButton = createField(import_react108.default.forwardRef(BaseProFormUploadButton), {
  getValueFromEvent: function getValueFromEvent(value) {
    return value.fileList;
  }
});

// node_modules/@ant-design/pro-form/es/components/UploadDragger/index.js
var import_react109 = __toESM(require_react());
var import_jsx_runtime135 = __toESM(require_jsx_runtime());
var import_jsx_runtime136 = __toESM(require_jsx_runtime());
var BaseProFormUploadDragger = import_react109.default.forwardRef(function(_ref, ref) {
  var _fieldProps$style;
  var fieldProps = _ref.fieldProps, _ref$title = _ref.title, title = _ref$title === void 0 ? "单击或拖动文件到此区域进行上传" : _ref$title, _ref$icon = _ref.icon, icon = _ref$icon === void 0 ? (0, import_jsx_runtime135.jsx)(InboxOutlined_default, {}) : _ref$icon, _ref$description = _ref.description, description = _ref$description === void 0 ? "支持单次或批量上传" : _ref$description, action = _ref.action, accept = _ref.accept, _onChange = _ref.onChange, value = _ref.value, children = _ref.children, max = _ref.max, proFieldProps = _ref.proFieldProps;
  var context = (0, import_react109.useContext)(config_provider_default.ConfigContext);
  var modeContext = (0, import_react109.useContext)(EditOrReadOnlyContext);
  var mode = (proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.mode) || modeContext.mode || "edit";
  var baseClassName = context.getPrefixCls("upload");
  var showUploadButton = (max === void 0 || !value || (value === null || value === void 0 ? void 0 : value.length) < max) && mode !== "read" && (proFieldProps === null || proFieldProps === void 0 ? void 0 : proFieldProps.readonly) !== true;
  return (0, import_jsx_runtime136.jsxs)(upload_default.Dragger, _objectSpread2(_objectSpread2({
    // @ts-ignore
    ref,
    name: "files",
    action,
    accept,
    fileList: value
  }, fieldProps), {}, {
    onChange: function onChange(info) {
      _onChange === null || _onChange === void 0 || _onChange(info);
      if (fieldProps !== null && fieldProps !== void 0 && fieldProps.onChange) {
        fieldProps === null || fieldProps === void 0 || fieldProps.onChange(info);
      }
    },
    style: _objectSpread2(_objectSpread2({
      flexDirection: "column",
      alignItems: "center"
    }, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.style), {}, {
      display: !showUploadButton ? "none" : (fieldProps === null || fieldProps === void 0 || (_fieldProps$style = fieldProps.style) === null || _fieldProps$style === void 0 ? void 0 : _fieldProps$style.display) || "flex"
    }),
    children: [(0, import_jsx_runtime135.jsx)("p", {
      className: "".concat(baseClassName, "-drag-icon"),
      children: icon
    }), (0, import_jsx_runtime135.jsx)("p", {
      className: "".concat(baseClassName, "-text"),
      children: title
    }), (0, import_jsx_runtime135.jsx)("p", {
      className: "".concat(baseClassName, "-hint"),
      children: description
    }), children ? (0, import_jsx_runtime135.jsx)("div", {
      className: "".concat(baseClassName, "-extra"),
      style: {
        padding: 16
      },
      children
    }) : null]
  }));
});
var ProFormUploadDragger = createField(BaseProFormUploadDragger, {
  getValueFromEvent: function getValueFromEvent2(value) {
    return value.fileList;
  }
});

// node_modules/@ant-design/pro-form/es/BaseForm/BaseForm.js
var import_jsx_runtime137 = __toESM(require_jsx_runtime());
var import_jsx_runtime138 = __toESM(require_jsx_runtime());
var _excluded72 = ["children", "contentRender", "submitter", "fieldProps", "formItemProps", "groupProps", "transformKey", "formRef", "onInit", "form", "loading", "formComponentType", "extraUrlParams", "syncToUrl", "onUrlSearchChange", "onReset", "omitNil", "isKeyPressSubmit", "autoFocusFirstInput", "grid", "rowProps", "colProps"];
var _excluded216 = ["extraUrlParams", "syncToUrl", "isKeyPressSubmit", "syncToUrlAsImportant", "syncToInitialValues", "children", "contentRender", "submitter", "fieldProps", "proFieldProps", "formItemProps", "groupProps", "dateFormatter", "formRef", "onInit", "form", "formComponentType", "onReset", "grid", "rowProps", "colProps", "omitNil", "request", "params", "initialValues", "formKey", "readonly", "onLoadingChange", "loading"];
var genParams = function genParams2(syncUrl, params, type) {
  if (syncUrl === true) {
    return params;
  }
  return runFunction(syncUrl, params, type);
};
var covertFormName = function covertFormName2(name) {
  if (!name) return name;
  if (Array.isArray(name)) return name;
  return [name];
};
function BaseFormComponents(props) {
  var _ConfigProvider$useCo;
  var children = props.children, contentRender = props.contentRender, submitter = props.submitter, fieldProps = props.fieldProps, formItemProps = props.formItemProps, groupProps = props.groupProps, transformKey = props.transformKey, propsFormRef = props.formRef, onInit = props.onInit, form = props.form, loading = props.loading, formComponentType = props.formComponentType, _props$extraUrlParams = props.extraUrlParams, extraUrlParams = _props$extraUrlParams === void 0 ? {} : _props$extraUrlParams, syncToUrl = props.syncToUrl, onUrlSearchChange = props.onUrlSearchChange, _onReset = props.onReset, _props$omitNil = props.omitNil, omitNil = _props$omitNil === void 0 ? true : _props$omitNil, isKeyPressSubmit = props.isKeyPressSubmit, _props$autoFocusFirst = props.autoFocusFirstInput, autoFocusFirstInput = _props$autoFocusFirst === void 0 ? true : _props$autoFocusFirst, grid = props.grid, rowProps = props.rowProps, colProps = props.colProps, rest = _objectWithoutProperties(props, _excluded72);
  var formInstance = form_default.useFormInstance();
  var _ref = (config_provider_default === null || config_provider_default === void 0 || (_ConfigProvider$useCo = config_provider_default.useConfig) === null || _ConfigProvider$useCo === void 0 ? void 0 : _ConfigProvider$useCo.call(config_provider_default)) || {
    componentSize: "middle"
  }, componentSize = _ref.componentSize;
  var formRef = (0, import_react110.useRef)(form || formInstance);
  var _useGridHelpers = useGridHelpers({
    grid,
    rowProps
  }), RowWrapper = _useGridHelpers.RowWrapper;
  var getFormInstance = useRefFunction(function() {
    return formInstance;
  });
  var formatValues = (0, import_react110.useMemo)(function() {
    return {
      /**
       * 获取被 ProForm 格式化后的所有数据
       * @param allData boolean
       * @returns T
       *
       * @example  getFieldsFormatValue(true) ->返回所有数据，即使没有被 form 托管的
       */
      getFieldsFormatValue: function getFieldsFormatValue(allData) {
        var _getFormInstance;
        return transformKey((_getFormInstance = getFormInstance()) === null || _getFormInstance === void 0 ? void 0 : _getFormInstance.getFieldsValue(allData), omitNil);
      },
      /**
       * 获取被 ProForm 格式化后的单个数据
       * @param nameList (string|number)[]
       * @returns T
       *
       * @example {a:{b:value}} -> getFieldFormatValue(['a', 'b']) -> value
       */
      /** 获取格式化之后的单个数据 */
      getFieldFormatValue: function getFieldFormatValue() {
        var _getFormInstance2;
        var paramsNameList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        var nameList = covertFormName(paramsNameList);
        if (!nameList) throw new Error("nameList is require");
        var value = (_getFormInstance2 = getFormInstance()) === null || _getFormInstance2 === void 0 ? void 0 : _getFormInstance2.getFieldValue(nameList);
        var obj = nameList ? set({}, nameList, value) : value;
        return get(transformKey(obj, omitNil, nameList), nameList);
      },
      /**
       * 获取被 ProForm 格式化后的单个数据, 包含他的 name
       * @param nameList (string|number)[]
       * @returns T
       *
       * @example  {a:{b:value}} -> getFieldFormatValueObject(['a', 'b']) -> {a:{b:value}}
       */
      /** 获取格式化之后的单个数据 */
      getFieldFormatValueObject: function getFieldFormatValueObject(paramsNameList) {
        var _getFormInstance3;
        var nameList = covertFormName(paramsNameList);
        var value = (_getFormInstance3 = getFormInstance()) === null || _getFormInstance3 === void 0 ? void 0 : _getFormInstance3.getFieldValue(nameList);
        var obj = nameList ? set({}, nameList, value) : value;
        return transformKey(obj, omitNil, nameList);
      },
      /** 
      /**
       *验字段后返回格式化之后的所有数据
       * @param nameList (string|number)[]
       * @returns T
       * 
       * @example validateFieldsReturnFormatValue -> {a:{b:value}}
       */
      validateFieldsReturnFormatValue: function() {
        var _validateFieldsReturnFormatValue = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(nameList) {
          var _getFormInstance4;
          var values, transformedKey;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                if (!(!Array.isArray(nameList) && nameList)) {
                  _context.next = 2;
                  break;
                }
                throw new Error("nameList must be array");
              case 2:
                _context.next = 4;
                return (_getFormInstance4 = getFormInstance()) === null || _getFormInstance4 === void 0 ? void 0 : _getFormInstance4.validateFields(nameList);
              case 4:
                values = _context.sent;
                transformedKey = transformKey(values, omitNil);
                return _context.abrupt("return", transformedKey ? transformedKey : {});
              case 7:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        function validateFieldsReturnFormatValue(_x) {
          return _validateFieldsReturnFormatValue.apply(this, arguments);
        }
        return validateFieldsReturnFormatValue;
      }()
    };
  }, [omitNil, transformKey]);
  var items = (0, import_react110.useMemo)(function() {
    return import_react110.default.Children.toArray(children).map(function(item, index) {
      if (index === 0 && import_react110.default.isValidElement(item) && autoFocusFirstInput) {
        return import_react110.default.cloneElement(item, _objectSpread2(_objectSpread2({}, item.props), {}, {
          autoFocus: autoFocusFirstInput
        }));
      }
      return item;
    });
  }, [autoFocusFirstInput, children]);
  var submitterProps = (0, import_react110.useMemo)(function() {
    return typeof submitter === "boolean" || !submitter ? {} : submitter;
  }, [submitter]);
  var submitterNode = (0, import_react110.useMemo)(function() {
    if (submitter === false) return void 0;
    return (0, import_jsx_runtime137.jsx)(Submitter_default, _objectSpread2(_objectSpread2({}, submitterProps), {}, {
      onReset: function onReset() {
        var _formRef$current, _submitterProps$onRes;
        var finalValues = transformKey((_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.getFieldsValue(), omitNil);
        submitterProps === null || submitterProps === void 0 || (_submitterProps$onRes = submitterProps.onReset) === null || _submitterProps$onRes === void 0 || _submitterProps$onRes.call(submitterProps, finalValues);
        _onReset === null || _onReset === void 0 || _onReset(finalValues);
        if (syncToUrl) {
          var _formRef$current2;
          var params = Object.keys(transformKey((_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.getFieldsValue(), false)).reduce(function(pre, next) {
            return _objectSpread2(_objectSpread2({}, pre), {}, _defineProperty({}, next, finalValues[next] || void 0));
          }, extraUrlParams);
          onUrlSearchChange(genParams(syncToUrl, params || {}, "set"));
        }
      },
      submitButtonProps: _objectSpread2({
        loading
      }, submitterProps.submitButtonProps)
    }), "submitter");
  }, [submitter, submitterProps, loading, transformKey, omitNil, _onReset, syncToUrl, extraUrlParams, onUrlSearchChange]);
  var content = (0, import_react110.useMemo)(function() {
    var wrapItems = grid ? (0, import_jsx_runtime137.jsx)(RowWrapper, {
      children: items
    }) : items;
    if (contentRender) {
      return contentRender(wrapItems, submitterNode, formRef.current);
    }
    return wrapItems;
  }, [grid, RowWrapper, items, contentRender, submitterNode]);
  var preInitialValues = usePrevious(props.initialValues);
  (0, import_react110.useEffect)(function() {
    if (syncToUrl || !props.initialValues || !preInitialValues || rest.request) return;
    var isEqual = isDeepEqualReact(props.initialValues, preInitialValues);
    noteOnce(isEqual, "initialValues 只在 form 初始化时生效，如果你需要异步加载推荐使用 request，或者 initialValues ? <Form/> : null ");
    noteOnce(isEqual, "The initialValues only take effect when the form is initialized, if you need to load asynchronously recommended request, or the initialValues ? <Form/> : null ");
  }, [props.initialValues]);
  (0, import_react110.useImperativeHandle)(propsFormRef, function() {
    return _objectSpread2(_objectSpread2({}, formRef.current), formatValues);
  }, [formatValues, formRef.current]);
  (0, import_react110.useEffect)(function() {
    var _formRef$current3, _formRef$current3$get;
    var finalValues = transformKey((_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 || (_formRef$current3$get = _formRef$current3.getFieldsValue) === null || _formRef$current3$get === void 0 ? void 0 : _formRef$current3$get.call(_formRef$current3, true), omitNil);
    onInit === null || onInit === void 0 || onInit(finalValues, _objectSpread2(_objectSpread2({}, formRef.current), formatValues));
  }, []);
  return (0, import_jsx_runtime137.jsx)(ProFormContext.Provider, {
    value: _objectSpread2(_objectSpread2({}, formatValues), {}, {
      formRef
    }),
    children: (0, import_jsx_runtime137.jsx)(config_provider_default, {
      componentSize: rest.size || componentSize,
      children: (0, import_jsx_runtime138.jsxs)(GridContext.Provider, {
        value: {
          grid,
          colProps
        },
        children: [rest.component !== false && (0, import_jsx_runtime137.jsx)("input", {
          type: "text",
          style: {
            display: "none"
          }
        }), content]
      })
    })
  });
}
var requestFormCacheId = 0;
function BaseForm(props) {
  var _props$extraUrlParams2 = props.extraUrlParams, extraUrlParams = _props$extraUrlParams2 === void 0 ? {} : _props$extraUrlParams2, syncToUrl = props.syncToUrl, isKeyPressSubmit = props.isKeyPressSubmit, _props$syncToUrlAsImp = props.syncToUrlAsImportant, syncToUrlAsImportant = _props$syncToUrlAsImp === void 0 ? false : _props$syncToUrlAsImp, _props$syncToInitialV = props.syncToInitialValues, syncToInitialValues = _props$syncToInitialV === void 0 ? true : _props$syncToInitialV, children = props.children, contentRender = props.contentRender, submitter = props.submitter, fieldProps = props.fieldProps, proFieldProps = props.proFieldProps, formItemProps = props.formItemProps, groupProps = props.groupProps, _props$dateFormatter = props.dateFormatter, dateFormatter = _props$dateFormatter === void 0 ? "string" : _props$dateFormatter, propsFormRef = props.formRef, onInit = props.onInit, form = props.form, formComponentType = props.formComponentType, onReset = props.onReset, grid = props.grid, rowProps = props.rowProps, colProps = props.colProps, _props$omitNil2 = props.omitNil, omitNil = _props$omitNil2 === void 0 ? true : _props$omitNil2, request = props.request, params = props.params, initialValues = props.initialValues, _props$formKey = props.formKey, formKey = _props$formKey === void 0 ? requestFormCacheId : _props$formKey, readonly = props.readonly, onLoadingChange = props.onLoadingChange, propsLoading = props.loading, propRest = _objectWithoutProperties(props, _excluded216);
  var formRef = (0, import_react110.useRef)({});
  var _useMountMergeState = useMergedState(false, {
    onChange: onLoadingChange,
    value: propsLoading
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), loading = _useMountMergeState2[0], setLoading = _useMountMergeState2[1];
  var _useUrlSearchParams = useUrlSearchParams({}, {
    disabled: !syncToUrl
  }), _useUrlSearchParams2 = _slicedToArray(_useUrlSearchParams, 2), urlSearch = _useUrlSearchParams2[0], setUrlSearch = _useUrlSearchParams2[1];
  var curFormKey = (0, import_react110.useRef)(nanoid());
  (0, import_react110.useEffect)(function() {
    requestFormCacheId += 0;
  }, []);
  var _useFetchData = useFetchData({
    request,
    params,
    proFieldKey: formKey
  }), _useFetchData2 = _slicedToArray(_useFetchData, 1), initialData = _useFetchData2[0];
  var _useContext = (0, import_react110.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-form");
  var _useStyle = useStyle("ProForm", function(token) {
    return _defineProperty({}, ".".concat(prefixCls), _defineProperty({}, "> div:not(".concat(token.proComponentsCls, "-form-light-filter)"), {
      ".pro-field": {
        maxWidth: "100%",
        "@media screen and (max-width: 575px)": {
          // 减少了 form 的 padding
          maxWidth: "calc(93vw - 48px)"
        },
        // 适用于短数字，短文本或者选项
        "&-xs": {
          width: 104
        },
        "&-s": {
          width: 216
        },
        // 适用于较短字段录入、如姓名、电话、ID 等。
        "&-sm": {
          width: 216
        },
        "&-m": {
          width: 328
        },
        // 标准宽度，适用于大部分字段长度
        "&-md": {
          width: 328
        },
        "&-l": {
          width: 440
        },
        // 适用于较长字段录入，如长网址、标签组、文件路径等。
        "&-lg": {
          width: 440
        },
        // 适用于长文本录入，如长链接、描述、备注等，通常搭配自适应多行输入框或定高文本域使用。
        "&-xl": {
          width: 552
        }
      }
    }));
  }), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var _useState = (0, import_react110.useState)(function() {
    if (!syncToUrl) {
      return {};
    }
    return genParams(syncToUrl, urlSearch, "get");
  }), _useState2 = _slicedToArray(_useState, 2), urlParamsMergeInitialValues = _useState2[0], setUrlParamsMergeInitialValues = _useState2[1];
  var transformKeyRef = (0, import_react110.useRef)({});
  var fieldsValueType = (0, import_react110.useRef)({});
  var transformKey = useRefFunction(function(values, paramsOmitNil, parentKey) {
    return transformKeySubmitValue(conversionMomentValue(values, dateFormatter, fieldsValueType.current, paramsOmitNil, parentKey), transformKeyRef.current, paramsOmitNil);
  });
  (0, import_react110.useEffect)(function() {
    if (syncToInitialValues) return;
    setUrlParamsMergeInitialValues({});
  }, [syncToInitialValues]);
  (0, import_react110.useEffect)(function() {
    if (!syncToUrl) return;
    setUrlSearch(genParams(syncToUrl, _objectSpread2(_objectSpread2({}, urlSearch), extraUrlParams), "set"));
  }, [extraUrlParams, syncToUrl]);
  var getPopupContainer = (0, import_react110.useMemo)(function() {
    if (typeof window === "undefined") return void 0;
    if (formComponentType && ["DrawerForm"].includes(formComponentType)) {
      return function(e) {
        return e.parentNode || document.body;
      };
    }
    return void 0;
  }, [formComponentType]);
  var onFinish = useRefFunction(_asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
    var _formRef$current4, _formRef$current4$get, finalValues, response, _formRef$current5, _formRef$current5$get, syncToUrlParams;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if (propRest.onFinish) {
            _context2.next = 2;
            break;
          }
          return _context2.abrupt("return");
        case 2:
          if (!loading) {
            _context2.next = 4;
            break;
          }
          return _context2.abrupt("return");
        case 4:
          _context2.prev = 4;
          finalValues = formRef === null || formRef === void 0 || (_formRef$current4 = formRef.current) === null || _formRef$current4 === void 0 || (_formRef$current4$get = _formRef$current4.getFieldsFormatValue) === null || _formRef$current4$get === void 0 ? void 0 : _formRef$current4$get.call(_formRef$current4);
          response = propRest.onFinish(finalValues);
          if (response instanceof Promise) {
            setLoading(true);
          }
          _context2.next = 10;
          return response;
        case 10:
          if (syncToUrl) {
            syncToUrlParams = Object.keys(formRef === null || formRef === void 0 || (_formRef$current5 = formRef.current) === null || _formRef$current5 === void 0 || (_formRef$current5$get = _formRef$current5.getFieldsFormatValue) === null || _formRef$current5$get === void 0 ? void 0 : _formRef$current5$get.call(_formRef$current5, void 0, false)).reduce(function(pre, next) {
              var _finalValues$next;
              return _objectSpread2(_objectSpread2({}, pre), {}, _defineProperty({}, next, (_finalValues$next = finalValues[next]) !== null && _finalValues$next !== void 0 ? _finalValues$next : void 0));
            }, extraUrlParams);
            Object.keys(urlSearch).forEach(function(key2) {
              if (syncToUrlParams[key2] !== false && syncToUrlParams[key2] !== 0 && !syncToUrlParams[key2]) {
                syncToUrlParams[key2] = void 0;
              }
            });
            setUrlSearch(genParams(syncToUrl, syncToUrlParams, "set"));
          }
          setLoading(false);
          _context2.next = 18;
          break;
        case 14:
          _context2.prev = 14;
          _context2.t0 = _context2["catch"](4);
          console.log(_context2.t0);
          setLoading(false);
        case 18:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[4, 14]]);
  })));
  (0, import_react110.useImperativeHandle)(propsFormRef, function() {
    return formRef.current;
  }, [!initialData]);
  if (!initialData && props.request) {
    return (0, import_jsx_runtime137.jsx)("div", {
      style: {
        paddingTop: 50,
        paddingBottom: 50,
        textAlign: "center"
      },
      children: (0, import_jsx_runtime137.jsx)(spin_default, {})
    });
  }
  return wrapSSR((0, import_jsx_runtime137.jsx)(EditOrReadOnlyContext.Provider, {
    value: {
      mode: props.readonly ? "read" : "edit"
    },
    children: (0, import_jsx_runtime137.jsx)(ProConfigProvider, {
      needDeps: true,
      children: (0, import_jsx_runtime137.jsx)(FieldContext_default2.Provider, {
        value: {
          formRef,
          fieldProps,
          proFieldProps,
          formItemProps,
          groupProps,
          formComponentType,
          getPopupContainer,
          formKey: curFormKey.current,
          setFieldValueType: function setFieldValueType(name, _ref4) {
            var _ref4$valueType = _ref4.valueType, valueType15 = _ref4$valueType === void 0 ? "text" : _ref4$valueType, dateFormat = _ref4.dateFormat, transform = _ref4.transform;
            if (!Array.isArray(name)) return;
            transformKeyRef.current = set(transformKeyRef.current, name, transform);
            fieldsValueType.current = set(fieldsValueType.current, name, {
              valueType: valueType15,
              dateFormat
            });
          }
        },
        children: (0, import_jsx_runtime137.jsx)(FormListContext.Provider, {
          value: {},
          children: (0, import_jsx_runtime137.jsx)(form_default, _objectSpread2(_objectSpread2({
            onKeyPress: function onKeyPress(event) {
              if (!isKeyPressSubmit) return;
              if (event.key === "Enter") {
                var _formRef$current6;
                (_formRef$current6 = formRef.current) === null || _formRef$current6 === void 0 || _formRef$current6.submit();
              }
            },
            autoComplete: "off",
            form
          }, es_default3(propRest, ["ref", "labelWidth", "autoFocusFirstInput"])), {}, {
            ref: function ref(instance) {
              if (!formRef.current) return;
              formRef.current.nativeElement = instance === null || instance === void 0 ? void 0 : instance.nativeElement;
            },
            initialValues: syncToUrlAsImportant ? _objectSpread2(_objectSpread2(_objectSpread2({}, initialValues), initialData), urlParamsMergeInitialValues) : _objectSpread2(_objectSpread2(_objectSpread2({}, urlParamsMergeInitialValues), initialValues), initialData),
            onValuesChange: function onValuesChange(changedValues, values) {
              var _propRest$onValuesCha;
              propRest === null || propRest === void 0 || (_propRest$onValuesCha = propRest.onValuesChange) === null || _propRest$onValuesCha === void 0 || _propRest$onValuesCha.call(propRest, transformKey(changedValues, !!omitNil), transformKey(values, !!omitNil));
            },
            className: (0, import_classnames18.default)(props.className, prefixCls, hashId),
            onFinish,
            children: (0, import_jsx_runtime137.jsx)(BaseFormComponents, _objectSpread2(_objectSpread2({
              transformKey,
              autoComplete: "off",
              loading,
              onUrlSearchChange: setUrlSearch
            }, props), {}, {
              formRef,
              initialValues: _objectSpread2(_objectSpread2({}, initialValues), initialData)
            }))
          }))
        })
      })
    })
  }));
}

// node_modules/@ant-design/pro-form/es/BaseForm/LightWrapper/index.js
var import_classnames19 = __toESM(require_classnames());
var import_react111 = __toESM(require_react());

// node_modules/@ant-design/pro-form/es/BaseForm/LightWrapper/style.js
var genProStyle7 = function genProStyle8(token) {
  return _defineProperty(_defineProperty({}, "".concat(token.componentCls, "-collapse-label"), {
    paddingInline: 1,
    paddingBlock: 1
  }), "".concat(token.componentCls, "-container"), _defineProperty({}, "".concat(token.antCls, "-form-item"), {
    marginBlockEnd: 0
  }));
};
function useStyle8(prefixCls) {
  return useStyle("LightWrapper", function(token) {
    var proToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle7(proToken)];
  });
}

// node_modules/@ant-design/pro-form/es/BaseForm/LightWrapper/index.js
var import_jsx_runtime139 = __toESM(require_jsx_runtime());
var _excluded73 = ["label", "size", "disabled", "onChange", "className", "style", "children", "valuePropName", "placeholder", "labelFormatter", "bordered", "footerRender", "allowClear", "otherFieldProps", "valueType", "placement"];
var LightWrapper = function LightWrapper2(props) {
  var label = props.label, size = props.size, disabled = props.disabled, propsOnChange = props.onChange, className = props.className, style = props.style, children = props.children, valuePropName = props.valuePropName, placeholder = props.placeholder, labelFormatter = props.labelFormatter, bordered = props.bordered, footerRender = props.footerRender, allowClear = props.allowClear, otherFieldProps = props.otherFieldProps, valueType15 = props.valueType, placement = props.placement, rest = _objectWithoutProperties(props, _excluded73);
  var _useContext = (0, import_react111.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-field-light-wrapper");
  var _useStyle = useStyle8(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var _useState = (0, import_react111.useState)(props[valuePropName]), _useState2 = _slicedToArray(_useState, 2), tempValue = _useState2[0], setTempValue = _useState2[1];
  var _useMountMergeState = useMergedState(false), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), open = _useMountMergeState2[0], setOpen = _useMountMergeState2[1];
  var onChange = function onChange2() {
    var _otherFieldProps$onCh;
    for (var _len = arguments.length, restParams = new Array(_len), _key = 0; _key < _len; _key++) {
      restParams[_key] = arguments[_key];
    }
    otherFieldProps === null || otherFieldProps === void 0 || (_otherFieldProps$onCh = otherFieldProps.onChange) === null || _otherFieldProps$onCh === void 0 || _otherFieldProps$onCh.call.apply(_otherFieldProps$onCh, [otherFieldProps].concat(restParams));
    propsOnChange === null || propsOnChange === void 0 || propsOnChange.apply(void 0, restParams);
  };
  var labelValue = props[valuePropName];
  var labelValueText = (0, import_react111.useMemo)(function() {
    var _valueType$toLowerCas;
    if (!labelValue) return labelValue;
    if (valueType15 !== null && valueType15 !== void 0 && (_valueType$toLowerCas = valueType15.toLowerCase()) !== null && _valueType$toLowerCas !== void 0 && _valueType$toLowerCas.endsWith("range") && valueType15 !== "digitRange" && !labelFormatter) {
      return dateArrayFormatter(labelValue, dateFormatterMap[valueType15] || "YYYY-MM-DD");
    }
    if (Array.isArray(labelValue)) return labelValue.map(function(item) {
      if (_typeof(item) === "object" && item.label && item.value) {
        return item.label;
      }
      return item;
    });
    return labelValue;
  }, [labelValue, valueType15, labelFormatter]);
  return wrapSSR((0, import_jsx_runtime139.jsx)(FilterDropdown, {
    disabled,
    open,
    onOpenChange: setOpen,
    placement,
    label: (0, import_jsx_runtime139.jsx)(FieldLabel, {
      ellipsis: true,
      size,
      onClear: function onClear() {
        onChange === null || onChange === void 0 || onChange();
        setTempValue(null);
      },
      bordered,
      style,
      className,
      label,
      placeholder,
      value: labelValueText,
      disabled,
      formatter: labelFormatter,
      allowClear
    }),
    footer: {
      onClear: function onClear() {
        return setTempValue(null);
      },
      onConfirm: function onConfirm() {
        onChange === null || onChange === void 0 || onChange(tempValue);
        setOpen(false);
      }
    },
    footerRender,
    children: (0, import_jsx_runtime139.jsx)("div", {
      className: (0, import_classnames19.default)("".concat(prefixCls, "-container"), hashId, className),
      style,
      children: import_react111.default.cloneElement(children, _objectSpread2(_objectSpread2({}, rest), {}, _defineProperty(_defineProperty({}, valuePropName, tempValue), "onChange", function onChange2(e) {
        setTempValue(e !== null && e !== void 0 && e.target ? e.target.value : e);
      }), children.props))
    })
  }));
};

// node_modules/@ant-design/pro-form/es/layouts/ProForm/index.js
var import_jsx_runtime140 = __toESM(require_jsx_runtime());
var import_jsx_runtime141 = __toESM(require_jsx_runtime());
var import_jsx_runtime142 = __toESM(require_jsx_runtime());
function ProForm(props) {
  return (0, import_jsx_runtime142.jsx)(BaseForm, _objectSpread2({
    layout: "vertical",
    contentRender: function contentRender(items, submitter) {
      return (0, import_jsx_runtime141.jsxs)(import_jsx_runtime140.Fragment, {
        children: [items, submitter]
      });
    }
  }, props));
}
ProForm.Group = Group_default;
ProForm.useForm = form_default.useForm;
ProForm.Item = FormItem_default;
ProForm.useWatch = form_default.useWatch;
ProForm.ErrorList = form_default.ErrorList;
ProForm.Provider = form_default.Provider;
ProForm.useFormInstance = form_default.useFormInstance;
ProForm.EditOrReadOnlyContext = EditOrReadOnlyContext;

// node_modules/@ant-design/pro-form/es/layouts/LoginForm/index.js
var import_classnames20 = __toESM(require_classnames());
var import_react113 = __toESM(require_react());
var import_jsx_runtime143 = __toESM(require_jsx_runtime());
var import_jsx_runtime144 = __toESM(require_jsx_runtime());

// node_modules/@ant-design/pro-form/es/layouts/LoginFormPage/index.js
var import_classnames21 = __toESM(require_classnames());
var import_react114 = __toESM(require_react());
var import_jsx_runtime145 = __toESM(require_jsx_runtime());
var import_jsx_runtime146 = __toESM(require_jsx_runtime());

// node_modules/@ant-design/pro-form/es/layouts/index.js
var ProFormGroup = ProForm.Group;

// node_modules/@ant-design/pro-form/es/index.js
var es_default6 = ProForm;

// node_modules/@ant-design/pro-table/es/Table.js
var import_classnames26 = __toESM(require_classnames());
var import_react131 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/Store/Provide.js
var import_react115 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/utils/index.js
function mergePagination(pagination, pageInfo, intl) {
  var _pagination$current, _pagination$pageSize;
  if (pagination === false) {
    return false;
  }
  var total = pageInfo.total, current = pageInfo.current, pageSize = pageInfo.pageSize, setPageInfo = pageInfo.setPageInfo;
  var defaultPagination = _typeof(pagination) === "object" ? pagination : {};
  return _objectSpread2(_objectSpread2({
    showTotal: function showTotal(all, range) {
      return "".concat(intl.getMessage("pagination.total.range", "第"), " ").concat(range[0], "-").concat(range[1], " ").concat(intl.getMessage("pagination.total.total", "条/总共"), " ").concat(all, " ").concat(intl.getMessage("pagination.total.item", "条"));
    },
    total
  }, defaultPagination), {}, {
    current: pagination !== true && pagination ? (_pagination$current = pagination.current) !== null && _pagination$current !== void 0 ? _pagination$current : current : current,
    pageSize: pagination !== true && pagination ? (_pagination$pageSize = pagination.pageSize) !== null && _pagination$pageSize !== void 0 ? _pagination$pageSize : pageSize : pageSize,
    onChange: function onChange(page, newPageSize) {
      var _ref = pagination, onChange2 = _ref.onChange;
      onChange2 === null || onChange2 === void 0 || onChange2(page, newPageSize || 20);
      if (newPageSize !== pageSize || current !== page) {
        setPageInfo({
          pageSize: newPageSize,
          current: page
        });
      }
    }
  });
}
function useActionType(ref, action, props) {
  var userAction = _objectSpread2(_objectSpread2({}, props.editableUtils), {}, {
    pageInfo: action.pageInfo,
    reload: function() {
      var _reload = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(resetPageIndex) {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!resetPageIndex) {
                _context.next = 3;
                break;
              }
              _context.next = 3;
              return action.setPageInfo({
                current: 1
              });
            case 3:
              _context.next = 5;
              return action === null || action === void 0 ? void 0 : action.reload();
            case 5:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function reload(_x) {
        return _reload.apply(this, arguments);
      }
      return reload;
    }(),
    reloadAndRest: function() {
      var _reloadAndRest = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              props.onCleanSelected();
              _context2.next = 3;
              return action.setPageInfo({
                current: 1
              });
            case 3:
              _context2.next = 5;
              return action === null || action === void 0 ? void 0 : action.reload();
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function reloadAndRest() {
        return _reloadAndRest.apply(this, arguments);
      }
      return reloadAndRest;
    }(),
    reset: function() {
      var _reset = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
        var _action$reset;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return props.resetAll();
            case 2:
              _context3.next = 4;
              return action === null || action === void 0 || (_action$reset = action.reset) === null || _action$reset === void 0 ? void 0 : _action$reset.call(action);
            case 4:
              _context3.next = 6;
              return action === null || action === void 0 ? void 0 : action.reload();
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function reset() {
        return _reset.apply(this, arguments);
      }
      return reset;
    }(),
    fullScreen: function fullScreen() {
      return props.fullScreen();
    },
    clearSelected: function clearSelected() {
      return props.onCleanSelected();
    },
    setPageInfo: function setPageInfo(rest) {
      return action.setPageInfo(rest);
    }
  });
  ref.current = userAction;
}
function postDataPipeline(data, pipeline) {
  if (pipeline.filter(function(item) {
    return item;
  }).length < 1) {
    return data;
  }
  return pipeline.reduce(function(pre, postData) {
    return postData(pre);
  }, data);
}
var isBordered = function isBordered2(borderType, border) {
  if (border === void 0) {
    return false;
  }
  if (typeof border === "boolean") {
    return border;
  }
  return border[borderType];
};
var isMergeCell = function isMergeCell2(dom) {
  var _dom$props;
  return dom && _typeof(dom) === "object" && (dom === null || dom === void 0 || (_dom$props = dom.props) === null || _dom$props === void 0 ? void 0 : _dom$props.colSpan);
};
var genColumnKey = function genColumnKey2(key2, index) {
  if (key2) {
    return Array.isArray(key2) ? key2.join("-") : key2.toString();
  }
  return "".concat(index);
};
function parseDataIndex(dataIndex) {
  if (Array.isArray(dataIndex)) {
    return dataIndex.join(",");
  }
  return dataIndex === null || dataIndex === void 0 ? void 0 : dataIndex.toString();
}
function parseDefaultColumnConfig(columns) {
  var filter = {};
  var sort = {};
  columns.forEach(function(column) {
    var dataIndex = parseDataIndex(column.dataIndex);
    if (!dataIndex) {
      return;
    }
    if (column.filters) {
      var defaultFilteredValue = column.defaultFilteredValue;
      if (defaultFilteredValue === void 0) {
        filter[dataIndex] = null;
      } else {
        filter[dataIndex] = column.defaultFilteredValue;
      }
    }
    if (column.sorter && column.defaultSortOrder) {
      sort[dataIndex] = column.defaultSortOrder;
    }
  });
  return {
    sort,
    filter
  };
}

// node_modules/@ant-design/pro-table/es/Store/Provide.js
var import_jsx_runtime147 = __toESM(require_jsx_runtime());
function useContainer() {
  var _props$columnsState6, _props$columnsState7, _props$columnsState10, _props$columnsState11, _props$columnsState15, _props$columnsState16;
  var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var actionRef = (0, import_react115.useRef)();
  var rootDomRef = (0, import_react115.useRef)(null);
  var prefixNameRef = (0, import_react115.useRef)();
  var propsRef = (0, import_react115.useRef)();
  var _useState = (0, import_react115.useState)(""), _useState2 = _slicedToArray(_useState, 2), keyWords = _useState2[0], _setKeyWords = _useState2[1];
  var sortKeyColumns = (0, import_react115.useRef)([]);
  var _useMergedState = useMergedState(function() {
    return props.size || props.defaultSize || "middle";
  }, {
    value: props.size,
    onChange: props.onSizeChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), tableSize = _useMergedState2[0], setTableSize = _useMergedState2[1];
  var defaultColumnKeyMap = (0, import_react115.useMemo)(function() {
    var _props$columnsState, _props$columns;
    if (props !== null && props !== void 0 && (_props$columnsState = props.columnsState) !== null && _props$columnsState !== void 0 && _props$columnsState.defaultValue) return props.columnsState.defaultValue;
    var columnKeyMap = {};
    (_props$columns = props.columns) === null || _props$columns === void 0 || _props$columns.forEach(function(_ref, index) {
      var key2 = _ref.key, dataIndex = _ref.dataIndex, fixed = _ref.fixed, disable = _ref.disable;
      var columnKey = genColumnKey(key2 !== null && key2 !== void 0 ? key2 : dataIndex, index);
      if (columnKey) {
        columnKeyMap[columnKey] = {
          show: true,
          fixed,
          disable
        };
      }
    });
    return columnKeyMap;
  }, [props.columns]);
  var _useMergedState3 = useMergedState(function() {
    var _props$columnsState4, _props$columnsState5;
    var _ref2 = props.columnsState || {}, persistenceType = _ref2.persistenceType, persistenceKey = _ref2.persistenceKey;
    if (persistenceKey && persistenceType && typeof window !== "undefined") {
      var storage = window[persistenceType];
      try {
        var storageValue = storage === null || storage === void 0 ? void 0 : storage.getItem(persistenceKey);
        if (storageValue) {
          var _props$columnsState2;
          if (props !== null && props !== void 0 && (_props$columnsState2 = props.columnsState) !== null && _props$columnsState2 !== void 0 && _props$columnsState2.defaultValue) {
            var _props$columnsState3;
            return merge_default({}, props === null || props === void 0 || (_props$columnsState3 = props.columnsState) === null || _props$columnsState3 === void 0 ? void 0 : _props$columnsState3.defaultValue, JSON.parse(storageValue));
          }
          return JSON.parse(storageValue);
        }
      } catch (error2) {
        console.warn(error2);
      }
    }
    return props.columnsStateMap || ((_props$columnsState4 = props.columnsState) === null || _props$columnsState4 === void 0 ? void 0 : _props$columnsState4.value) || ((_props$columnsState5 = props.columnsState) === null || _props$columnsState5 === void 0 ? void 0 : _props$columnsState5.defaultValue) || defaultColumnKeyMap;
  }, {
    value: ((_props$columnsState6 = props.columnsState) === null || _props$columnsState6 === void 0 ? void 0 : _props$columnsState6.value) || props.columnsStateMap,
    onChange: ((_props$columnsState7 = props.columnsState) === null || _props$columnsState7 === void 0 ? void 0 : _props$columnsState7.onChange) || props.onColumnsStateChange
  }), _useMergedState4 = _slicedToArray(_useMergedState3, 2), columnsMap = _useMergedState4[0], setColumnsMap = _useMergedState4[1];
  (0, import_react115.useEffect)(function() {
    var _ref3 = props.columnsState || {}, persistenceType = _ref3.persistenceType, persistenceKey = _ref3.persistenceKey;
    if (persistenceKey && persistenceType && typeof window !== "undefined") {
      var storage = window[persistenceType];
      try {
        var storageValue = storage === null || storage === void 0 ? void 0 : storage.getItem(persistenceKey);
        if (storageValue) {
          var _props$columnsState8;
          if (props !== null && props !== void 0 && (_props$columnsState8 = props.columnsState) !== null && _props$columnsState8 !== void 0 && _props$columnsState8.defaultValue) {
            var _props$columnsState9;
            setColumnsMap(merge_default({}, props === null || props === void 0 || (_props$columnsState9 = props.columnsState) === null || _props$columnsState9 === void 0 ? void 0 : _props$columnsState9.defaultValue, JSON.parse(storageValue)));
          } else {
            setColumnsMap(JSON.parse(storageValue));
          }
        } else {
          setColumnsMap(defaultColumnKeyMap);
        }
      } catch (error2) {
        console.warn(error2);
      }
    }
  }, [(_props$columnsState10 = props.columnsState) === null || _props$columnsState10 === void 0 ? void 0 : _props$columnsState10.persistenceKey, (_props$columnsState11 = props.columnsState) === null || _props$columnsState11 === void 0 ? void 0 : _props$columnsState11.persistenceType, defaultColumnKeyMap]);
  noteOnce(!props.columnsStateMap, "columnsStateMap已经废弃，请使用 columnsState.value 替换");
  noteOnce(!props.columnsStateMap, "columnsStateMap has been discarded, please use columnsState.value replacement");
  var clearPersistenceStorage = (0, import_react115.useCallback)(function() {
    var _ref4 = props.columnsState || {}, persistenceType = _ref4.persistenceType, persistenceKey = _ref4.persistenceKey;
    if (!persistenceKey || !persistenceType || typeof window === "undefined") return;
    var storage = window[persistenceType];
    try {
      storage === null || storage === void 0 || storage.removeItem(persistenceKey);
    } catch (error2) {
      console.warn(error2);
    }
  }, [props.columnsState]);
  (0, import_react115.useEffect)(function() {
    var _props$columnsState12, _props$columnsState13;
    if (!((_props$columnsState12 = props.columnsState) !== null && _props$columnsState12 !== void 0 && _props$columnsState12.persistenceKey) || !((_props$columnsState13 = props.columnsState) !== null && _props$columnsState13 !== void 0 && _props$columnsState13.persistenceType)) {
      return;
    }
    if (typeof window === "undefined") return;
    var _props$columnsState14 = props.columnsState, persistenceType = _props$columnsState14.persistenceType, persistenceKey = _props$columnsState14.persistenceKey;
    var storage = window[persistenceType];
    try {
      storage === null || storage === void 0 || storage.setItem(persistenceKey, JSON.stringify(columnsMap));
    } catch (error2) {
      console.warn(error2);
      clearPersistenceStorage();
    }
  }, [(_props$columnsState15 = props.columnsState) === null || _props$columnsState15 === void 0 ? void 0 : _props$columnsState15.persistenceKey, columnsMap, (_props$columnsState16 = props.columnsState) === null || _props$columnsState16 === void 0 ? void 0 : _props$columnsState16.persistenceType]);
  var renderValue = {
    action: actionRef.current,
    setAction: function setAction(newAction) {
      actionRef.current = newAction;
    },
    sortKeyColumns: sortKeyColumns.current,
    setSortKeyColumns: function setSortKeyColumns(keys) {
      sortKeyColumns.current = keys;
    },
    propsRef,
    columnsMap,
    keyWords,
    setKeyWords: function setKeyWords(k) {
      return _setKeyWords(k);
    },
    setTableSize,
    tableSize,
    prefixName: prefixNameRef.current,
    setPrefixName: function setPrefixName(name) {
      prefixNameRef.current = name;
    },
    setColumnsMap,
    columns: props.columns,
    rootDomRef,
    clearPersistenceStorage,
    defaultColumnKeyMap
  };
  Object.defineProperty(renderValue, "prefixName", {
    get: function get4() {
      return prefixNameRef.current;
    }
  });
  Object.defineProperty(renderValue, "sortKeyColumns", {
    get: function get4() {
      return sortKeyColumns.current;
    }
  });
  Object.defineProperty(renderValue, "action", {
    get: function get4() {
      return actionRef.current;
    }
  });
  return renderValue;
}
var TableContext = (0, import_react115.createContext)({});
var Container = function Container2(props) {
  var value = useContainer(props.initValue);
  return (0, import_jsx_runtime147.jsx)(TableContext.Provider, {
    value,
    children: props.children
  });
};

// node_modules/@ant-design/pro-table/es/components/Alert/index.js
var import_react116 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/components/Alert/style.js
var genProStyle9 = function genProStyle10(token) {
  return _defineProperty({}, token.componentCls, {
    marginBlockEnd: 16,
    backgroundColor: setAlpha(token.colorTextBase, 0.02),
    borderRadius: token.borderRadius,
    border: "none",
    "&-container": {
      paddingBlock: token.paddingSM,
      paddingInline: token.paddingLG
    },
    "&-info": {
      display: "flex",
      alignItems: "center",
      transition: "all 0.3s",
      color: token.colorTextTertiary,
      "&-content": {
        flex: 1
      },
      "&-option": {
        minWidth: 48,
        paddingInlineStart: 16
      }
    }
  });
};
function useStyle11(prefixCls) {
  return useStyle("ProTableAlert", function(token) {
    var proToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle9(proToken)];
  });
}

// node_modules/@ant-design/pro-table/es/components/Alert/index.js
var import_jsx_runtime148 = __toESM(require_jsx_runtime());
var import_jsx_runtime149 = __toESM(require_jsx_runtime());
var defaultAlertOptionRender = function defaultAlertOptionRender2(props) {
  var intl = props.intl, onCleanSelected = props.onCleanSelected;
  return [(0, import_jsx_runtime148.jsx)("a", {
    onClick: onCleanSelected,
    children: intl.getMessage("alert.clear", "清空")
  }, "0")];
};
function TableAlert(_ref) {
  var _ref$selectedRowKeys = _ref.selectedRowKeys, selectedRowKeys = _ref$selectedRowKeys === void 0 ? [] : _ref$selectedRowKeys, onCleanSelected = _ref.onCleanSelected, alwaysShowAlert = _ref.alwaysShowAlert, selectedRows = _ref.selectedRows, _ref$alertInfoRender = _ref.alertInfoRender, alertInfoRender = _ref$alertInfoRender === void 0 ? function(_ref2) {
    var intl2 = _ref2.intl;
    return (0, import_jsx_runtime149.jsxs)(space_default, {
      children: [intl2.getMessage("alert.selected", "已选择"), selectedRowKeys.length, intl2.getMessage("alert.item", "项"), "  "]
    });
  } : _ref$alertInfoRender, _ref$alertOptionRende = _ref.alertOptionRender, alertOptionRender = _ref$alertOptionRende === void 0 ? defaultAlertOptionRender : _ref$alertOptionRende;
  var intl = useIntl();
  var option = alertOptionRender && alertOptionRender({
    onCleanSelected,
    selectedRowKeys,
    selectedRows,
    intl
  });
  var _useContext = (0, import_react116.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var className = getPrefixCls("pro-table-alert");
  var _useStyle = useStyle11(className), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  if (alertInfoRender === false) {
    return null;
  }
  var dom = alertInfoRender({
    intl,
    selectedRowKeys,
    selectedRows,
    onCleanSelected
  });
  if (dom === false || selectedRowKeys.length < 1 && !alwaysShowAlert) {
    return null;
  }
  return wrapSSR((0, import_jsx_runtime148.jsx)("div", {
    className: "".concat(className, " ").concat(hashId).trim(),
    children: (0, import_jsx_runtime148.jsx)("div", {
      className: "".concat(className, "-container ").concat(hashId).trim(),
      children: (0, import_jsx_runtime149.jsxs)("div", {
        className: "".concat(className, "-info ").concat(hashId).trim(),
        children: [(0, import_jsx_runtime148.jsx)("div", {
          className: "".concat(className, "-info-content ").concat(hashId).trim(),
          children: dom
        }), option ? (0, import_jsx_runtime148.jsx)("div", {
          className: "".concat(className, "-info-option ").concat(hashId).trim(),
          children: option
        }) : null]
      })
    })
  }));
}
var Alert_default = TableAlert;

// node_modules/@ant-design/pro-table/es/components/Form/index.js
var import_react118 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/components/Form/FormRender.js
var import_classnames22 = __toESM(require_classnames());
var import_react117 = __toESM(require_react());
var import_jsx_runtime150 = __toESM(require_jsx_runtime());
function toLowerLine(str) {
  var temp = str.replace(/[A-Z]/g, function(match) {
    return "-".concat(match.toLowerCase());
  });
  if (temp.startsWith("-")) {
    temp = temp.slice(1);
  }
  return temp;
}
var getFormCompetent = function getFormCompetent2(isForm, searchConfig) {
  if (!isForm && searchConfig !== false) {
    if ((searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.filterType) === "light") {
      return "LightFilter";
    }
    return "QueryFilter";
  }
  return "Form";
};
var getFromProps = function getFromProps2(isForm, searchConfig, name) {
  if (!isForm && name === "LightFilter") {
    return es_default3(_objectSpread2({}, searchConfig), ["labelWidth", "defaultCollapsed", "filterType"]);
  }
  if (!isForm) {
    return es_default3(_objectSpread2({
      labelWidth: searchConfig ? searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.labelWidth : void 0,
      defaultCollapsed: true
    }, searchConfig), ["filterType"]);
  }
  return {};
};
var getFormConfigs = function getFormConfigs2(isForm, formConfig) {
  if (isForm) {
    return es_default3(formConfig, ["ignoreRules"]);
  }
  return _objectSpread2({
    ignoreRules: true
  }, formConfig);
};
var FormRender = function FormRender2(_ref) {
  var onSubmit = _ref.onSubmit, formRef = _ref.formRef, _ref$dateFormatter = _ref.dateFormatter, dateFormatter = _ref$dateFormatter === void 0 ? "string" : _ref$dateFormatter, type = _ref.type, columns = _ref.columns, action = _ref.action, ghost = _ref.ghost, manualRequest = _ref.manualRequest, _onReset = _ref.onReset, submitButtonLoading = _ref.submitButtonLoading, searchConfig = _ref.search, formConfig = _ref.form, bordered = _ref.bordered;
  var _useContext = (0, import_react117.useContext)(ProProvider), hashId = _useContext.hashId;
  var isForm = type === "form";
  var submit = function() {
    var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(values, firstLoad) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (onSubmit) {
              onSubmit(values, firstLoad);
            }
          case 1:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function submit2(_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }();
  var _useContext2 = (0, import_react117.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext2.getPrefixCls;
  var columnsList = (0, import_react117.useMemo)(function() {
    return columns.filter(function(item) {
      if (item === table_default.EXPAND_COLUMN || item === table_default.SELECTION_COLUMN) {
        return false;
      }
      if ((item.hideInSearch || item.search === false) && type !== "form") {
        return false;
      }
      if (type === "form" && item.hideInForm) {
        return false;
      }
      return true;
    }).map(function(item) {
      var _item$dataIndex;
      var finalValueType = !item.valueType || ["textarea", "jsonCode", "code"].includes(item === null || item === void 0 ? void 0 : item.valueType) && type === "table" ? "text" : item === null || item === void 0 ? void 0 : item.valueType;
      var columnKey = (item === null || item === void 0 ? void 0 : item.key) || (item === null || item === void 0 || (_item$dataIndex = item.dataIndex) === null || _item$dataIndex === void 0 ? void 0 : _item$dataIndex.toString());
      return _objectSpread2(_objectSpread2(_objectSpread2({}, item), {}, {
        width: void 0
      }, item.search && _typeof(item.search) === "object" ? item.search : {}), {}, {
        valueType: finalValueType,
        proFieldProps: _objectSpread2(_objectSpread2({}, item.proFieldProps), {}, {
          proFieldKey: columnKey ? "table-field-".concat(columnKey) : void 0
        })
      });
    });
  }, [columns, type]);
  var className = getPrefixCls("pro-table-search");
  var formClassName = getPrefixCls("pro-table-form");
  var competentName = (0, import_react117.useMemo)(function() {
    return getFormCompetent(isForm, searchConfig);
  }, [searchConfig, isForm]);
  var loadingProps = (0, import_react117.useMemo)(function() {
    return {
      submitter: {
        submitButtonProps: {
          loading: submitButtonLoading
        }
      }
    };
  }, [submitButtonLoading]);
  return (0, import_jsx_runtime150.jsx)("div", {
    className: (0, import_classnames22.default)(hashId, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, getPrefixCls("pro-card"), true), "".concat(getPrefixCls("pro-card"), "-border"), !!bordered), "".concat(getPrefixCls("pro-card"), "-bordered"), !!bordered), "".concat(getPrefixCls("pro-card"), "-ghost"), !!ghost), className, true), formClassName, isForm), getPrefixCls("pro-table-search-".concat(toLowerLine(competentName))), true), "".concat(className, "-ghost"), ghost), searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.className, searchConfig !== false && (searchConfig === null || searchConfig === void 0 ? void 0 : searchConfig.className))),
    children: (0, import_jsx_runtime150.jsx)(SchemaForm_default, _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({
      layoutType: competentName,
      columns: columnsList,
      type
    }, loadingProps), getFromProps(isForm, searchConfig, competentName)), getFormConfigs(isForm, formConfig || {})), {}, {
      formRef,
      action,
      dateFormatter,
      onInit: function onInit(values, form) {
        formRef.current = form;
        if (type !== "form") {
          var _action$current, _action$current2, _action$current2$setP;
          var pageInfo = (_action$current = action.current) === null || _action$current === void 0 ? void 0 : _action$current.pageInfo;
          var _ref3 = values, _ref3$current = _ref3.current, current = _ref3$current === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current : _ref3$current, _ref3$pageSize = _ref3.pageSize, pageSize = _ref3$pageSize === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize : _ref3$pageSize;
          (_action$current2 = action.current) === null || _action$current2 === void 0 || (_action$current2$setP = _action$current2.setPageInfo) === null || _action$current2$setP === void 0 || _action$current2$setP.call(_action$current2, _objectSpread2(_objectSpread2({}, pageInfo), {}, {
            current: parseInt(current, 10),
            pageSize: parseInt(pageSize, 10)
          }));
          if (manualRequest) return;
          submit(values, true);
        }
      },
      onReset: function onReset(values) {
        _onReset === null || _onReset === void 0 || _onReset(values);
      },
      onFinish: function onFinish(values) {
        submit(values, false);
      },
      initialValues: formConfig === null || formConfig === void 0 ? void 0 : formConfig.initialValues
    }))
  });
};
var FormRender_default = FormRender;

// node_modules/@ant-design/pro-table/es/components/Form/index.js
var import_jsx_runtime151 = __toESM(require_jsx_runtime());
var FormSearch = function(_React$Component) {
  _inherits(FormSearch2, _React$Component);
  var _super = _createSuper(FormSearch2);
  function FormSearch2() {
    var _this;
    _classCallCheck(this, FormSearch2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "onSubmit", function(value, firstLoad) {
      var _this$props = _this.props, pagination = _this$props.pagination, _this$props$beforeSea = _this$props.beforeSearchSubmit, beforeSearchSubmit = _this$props$beforeSea === void 0 ? function(searchParams) {
        return searchParams;
      } : _this$props$beforeSea, action = _this$props.action, onSubmit = _this$props.onSubmit, onFormSearchSubmit = _this$props.onFormSearchSubmit;
      var pageInfo = pagination ? omitUndefined({
        current: pagination.current,
        pageSize: pagination.pageSize
      }) : {};
      var submitParams = _objectSpread2(_objectSpread2({}, value), {}, {
        _timestamp: Date.now()
      }, pageInfo);
      var omitParams = es_default3(beforeSearchSubmit(submitParams), Object.keys(pageInfo));
      onFormSearchSubmit(omitParams);
      if (!firstLoad) {
        var _action$current, _action$current$setPa;
        (_action$current = action.current) === null || _action$current === void 0 || (_action$current$setPa = _action$current.setPageInfo) === null || _action$current$setPa === void 0 || _action$current$setPa.call(_action$current, {
          current: 1
        });
      }
      if (onSubmit && !firstLoad) {
        onSubmit === null || onSubmit === void 0 || onSubmit(value);
      }
    });
    _defineProperty(_assertThisInitialized(_this), "onReset", function(value) {
      var _action$current2, _action$current2$setP;
      var _this$props2 = _this.props, pagination = _this$props2.pagination, _this$props2$beforeSe = _this$props2.beforeSearchSubmit, beforeSearchSubmit = _this$props2$beforeSe === void 0 ? function(searchParams) {
        return searchParams;
      } : _this$props2$beforeSe, action = _this$props2.action, onFormSearchSubmit = _this$props2.onFormSearchSubmit, onReset = _this$props2.onReset;
      var pageInfo = pagination ? omitUndefined({
        current: pagination.current,
        pageSize: pagination.pageSize
      }) : {};
      var omitParams = es_default3(beforeSearchSubmit(_objectSpread2(_objectSpread2({}, value), pageInfo)), Object.keys(pageInfo));
      onFormSearchSubmit(omitParams);
      (_action$current2 = action.current) === null || _action$current2 === void 0 || (_action$current2$setP = _action$current2.setPageInfo) === null || _action$current2$setP === void 0 || _action$current2$setP.call(_action$current2, {
        current: 1
      });
      onReset === null || onReset === void 0 || onReset();
    });
    _defineProperty(_assertThisInitialized(_this), "isEqual", function(next) {
      var _this$props3 = _this.props, columns = _this$props3.columns, loading = _this$props3.loading, formRef = _this$props3.formRef, type = _this$props3.type, cardBordered = _this$props3.cardBordered, dateFormatter = _this$props3.dateFormatter, form = _this$props3.form, search = _this$props3.search, manualRequest = _this$props3.manualRequest;
      var diffProps = {
        columns,
        loading,
        formRef,
        type,
        cardBordered,
        dateFormatter,
        form,
        search,
        manualRequest
      };
      return !isDeepEqualReact(diffProps, {
        columns: next.columns,
        formRef: next.formRef,
        loading: next.loading,
        type: next.type,
        cardBordered: next.cardBordered,
        dateFormatter: next.dateFormatter,
        form: next.form,
        search: next.search,
        manualRequest: next.manualRequest
      });
    });
    _defineProperty(_assertThisInitialized(_this), "shouldComponentUpdate", function(next) {
      return _this.isEqual(next);
    });
    _defineProperty(_assertThisInitialized(_this), "render", function() {
      var _this$props4 = _this.props, columns = _this$props4.columns, loading = _this$props4.loading, formRef = _this$props4.formRef, type = _this$props4.type, action = _this$props4.action, cardBordered = _this$props4.cardBordered, dateFormatter = _this$props4.dateFormatter, form = _this$props4.form, search = _this$props4.search, pagination = _this$props4.pagination, ghost = _this$props4.ghost, manualRequest = _this$props4.manualRequest;
      var pageInfo = pagination ? omitUndefined({
        current: pagination.current,
        pageSize: pagination.pageSize
      }) : {};
      return (0, import_jsx_runtime151.jsx)(FormRender_default, {
        submitButtonLoading: loading,
        columns,
        type,
        ghost,
        formRef,
        onSubmit: _this.onSubmit,
        manualRequest,
        onReset: _this.onReset,
        dateFormatter,
        search,
        form: _objectSpread2(_objectSpread2({
          autoFocusFirstInput: false
        }, form), {}, {
          extraUrlParams: _objectSpread2(_objectSpread2({}, pageInfo), form === null || form === void 0 ? void 0 : form.extraUrlParams)
        }),
        action,
        bordered: isBordered("search", cardBordered)
      });
    });
    return _this;
  }
  return _createClass(FormSearch2);
}(import_react118.default.Component);
var Form_default = FormSearch;

// node_modules/@ant-design/pro-table/es/components/ToolBar/index.js
var import_react126 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/components/ColumnSetting/index.js
var import_classnames23 = __toESM(require_classnames());
var import_react119 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/components/ColumnSetting/style.js
var genProStyle11 = function genProStyle12(token) {
  return _defineProperty(_defineProperty(_defineProperty({}, token.componentCls, {
    width: "auto",
    "&-title": {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      height: "32px"
    },
    "&-overlay": _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(token.antCls, "-popover-inner-content"), {
      width: "200px",
      paddingBlock: 0,
      paddingInline: 0,
      paddingBlockEnd: 8
    }), "".concat(token.antCls, "-tree-node-content-wrapper:hover"), {
      backgroundColor: "transparent"
    }), "".concat(token.antCls, "-tree-draggable-icon"), {
      cursor: "grab"
    }), "".concat(token.antCls, "-tree-treenode"), _defineProperty(_defineProperty({
      alignItems: "center",
      "&:hover": _defineProperty({}, "".concat(token.componentCls, "-list-item-option"), {
        display: "block"
      })
    }, "".concat(token.antCls, "-tree-checkbox"), {
      marginInlineEnd: "4px"
    }), "".concat(token.antCls, "-tree-title"), {
      width: "100%"
    }))
  }), "".concat(token.componentCls, "-action-rest-button"), {
    color: token.colorPrimary
  }), "".concat(token.componentCls, "-list"), _defineProperty(_defineProperty(_defineProperty({
    display: "flex",
    flexDirection: "column",
    width: "100%",
    paddingBlockStart: 8
  }, "&".concat(token.componentCls, "-list-group"), {
    paddingBlockStart: 0
  }), "&-title", {
    marginBlockStart: "6px",
    marginBlockEnd: "6px",
    paddingInlineStart: "24px",
    color: token.colorTextSecondary,
    fontSize: "12px"
  }), "&-item", {
    display: "flex",
    alignItems: "center",
    maxHeight: 24,
    justifyContent: "space-between",
    "&-title": {
      flex: 1,
      maxWidth: 80,
      textOverflow: "ellipsis",
      overflow: "hidden",
      wordBreak: "break-all",
      whiteSpace: "nowrap"
    },
    "&-option": {
      display: "none",
      float: "right",
      cursor: "pointer",
      "> span": {
        "> span.anticon": {
          color: token.colorPrimary
        }
      },
      "> span + span": {
        marginInlineStart: 4
      }
    }
  }));
};
function useStyle12(prefixCls) {
  return useStyle("ColumnSetting", function(token) {
    var proToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle11(proToken)];
  });
}

// node_modules/@ant-design/pro-table/es/components/ColumnSetting/index.js
var import_jsx_runtime152 = __toESM(require_jsx_runtime());
var import_jsx_runtime153 = __toESM(require_jsx_runtime());
var import_jsx_runtime154 = __toESM(require_jsx_runtime());
var _excluded74 = ["key", "dataIndex", "children"];
var _excluded217 = ["disabled"];
var ToolTipIcon = function ToolTipIcon2(_ref) {
  var title = _ref.title, show = _ref.show, children = _ref.children, columnKey = _ref.columnKey, fixed = _ref.fixed;
  var _useContext = (0, import_react119.useContext)(TableContext), columnsMap = _useContext.columnsMap, setColumnsMap = _useContext.setColumnsMap;
  if (!show) {
    return null;
  }
  return (0, import_jsx_runtime152.jsx)(tooltip_default, {
    title,
    children: (0, import_jsx_runtime152.jsx)("span", {
      onClick: function onClick(e) {
        e.stopPropagation();
        e.preventDefault();
        var config = columnsMap[columnKey] || {};
        var columnKeyMap = _objectSpread2(_objectSpread2({}, columnsMap), {}, _defineProperty({}, columnKey, _objectSpread2(_objectSpread2({}, config), {}, {
          fixed
        })));
        setColumnsMap(columnKeyMap);
      },
      children
    })
  });
};
var CheckboxListItem = function CheckboxListItem2(_ref2) {
  var columnKey = _ref2.columnKey, isLeaf = _ref2.isLeaf, title = _ref2.title, className = _ref2.className, fixed = _ref2.fixed, showListItemOption = _ref2.showListItemOption;
  var intl = useIntl();
  var _useContext2 = (0, import_react119.useContext)(ProProvider), hashId = _useContext2.hashId;
  var dom = (0, import_jsx_runtime153.jsxs)("span", {
    className: "".concat(className, "-list-item-option ").concat(hashId).trim(),
    children: [(0, import_jsx_runtime152.jsx)(ToolTipIcon, {
      columnKey,
      fixed: "left",
      title: intl.getMessage("tableToolBar.leftPin", "固定在列首"),
      show: fixed !== "left",
      children: (0, import_jsx_runtime152.jsx)(VerticalAlignTopOutlined_default, {})
    }), (0, import_jsx_runtime152.jsx)(ToolTipIcon, {
      columnKey,
      fixed: void 0,
      title: intl.getMessage("tableToolBar.noPin", "不固定"),
      show: !!fixed,
      children: (0, import_jsx_runtime152.jsx)(VerticalAlignMiddleOutlined_default, {})
    }), (0, import_jsx_runtime152.jsx)(ToolTipIcon, {
      columnKey,
      fixed: "right",
      title: intl.getMessage("tableToolBar.rightPin", "固定在列尾"),
      show: fixed !== "right",
      children: (0, import_jsx_runtime152.jsx)(VerticalAlignBottomOutlined_default, {})
    })]
  });
  return (0, import_jsx_runtime153.jsxs)("span", {
    className: "".concat(className, "-list-item ").concat(hashId).trim(),
    children: [(0, import_jsx_runtime152.jsx)("div", {
      className: "".concat(className, "-list-item-title ").concat(hashId).trim(),
      children: title
    }), showListItemOption && !isLeaf ? dom : null]
  }, columnKey);
};
var CheckboxList = function CheckboxList2(_ref3) {
  var _treeDataConfig$list, _treeDataConfig$list2, _treeDataConfig$list3;
  var list = _ref3.list, draggable = _ref3.draggable, checkable = _ref3.checkable, showListItemOption = _ref3.showListItemOption, className = _ref3.className, _ref3$showTitle = _ref3.showTitle, showTitle = _ref3$showTitle === void 0 ? true : _ref3$showTitle, listTitle = _ref3.title, _ref3$listHeight = _ref3.listHeight, listHeight = _ref3$listHeight === void 0 ? 280 : _ref3$listHeight;
  var _useContext3 = (0, import_react119.useContext)(ProProvider), hashId = _useContext3.hashId;
  var _useContext4 = (0, import_react119.useContext)(TableContext), columnsMap = _useContext4.columnsMap, setColumnsMap = _useContext4.setColumnsMap, sortKeyColumns = _useContext4.sortKeyColumns, setSortKeyColumns = _useContext4.setSortKeyColumns;
  var show = list && list.length > 0;
  var treeDataConfig = (0, import_react119.useMemo)(function() {
    if (!show) return {};
    var checkedKeys = [];
    var treeMap = /* @__PURE__ */ new Map();
    var loopData = function loopData2(data, parentConfig) {
      return data.map(function(_ref4) {
        var _config$disable;
        var key2 = _ref4.key, dataIndex = _ref4.dataIndex, children = _ref4.children, rest = _objectWithoutProperties(_ref4, _excluded74);
        var columnKey = genColumnKey(key2, [parentConfig === null || parentConfig === void 0 ? void 0 : parentConfig.columnKey, rest.index].filter(Boolean).join("-"));
        var config = columnsMap[columnKey || "null"] || {
          show: true
        };
        if (config.show !== false && !children) {
          checkedKeys.push(columnKey);
        }
        var item = _objectSpread2(_objectSpread2({
          key: columnKey
        }, es_default3(rest, ["className"])), {}, {
          selectable: false,
          disabled: config.disable === true,
          disableCheckbox: typeof config.disable === "boolean" ? config.disable : (_config$disable = config.disable) === null || _config$disable === void 0 ? void 0 : _config$disable.checkbox,
          isLeaf: parentConfig ? true : void 0
        });
        if (children) {
          var _item$children;
          item.children = loopData2(children, _objectSpread2(_objectSpread2({}, config), {}, {
            columnKey
          }));
          if ((_item$children = item.children) !== null && _item$children !== void 0 && _item$children.every(function(childrenItem) {
            return checkedKeys === null || checkedKeys === void 0 ? void 0 : checkedKeys.includes(childrenItem.key);
          })) {
            checkedKeys.push(columnKey);
          }
        }
        treeMap.set(key2, item);
        return item;
      });
    };
    return {
      list: loopData(list),
      keys: checkedKeys,
      map: treeMap
    };
  }, [columnsMap, list, show]);
  var move = useRefFunction(function(id, targetId, dropPosition) {
    var newMap = _objectSpread2({}, columnsMap);
    var newColumns = _toConsumableArray(sortKeyColumns);
    var findIndex = newColumns.findIndex(function(columnKey) {
      return columnKey === id;
    });
    var targetIndex = newColumns.findIndex(function(columnKey) {
      return columnKey === targetId;
    });
    var isDownWard = dropPosition >= findIndex;
    if (findIndex < 0) return;
    var targetItem = newColumns[findIndex];
    newColumns.splice(findIndex, 1);
    if (dropPosition === 0) {
      newColumns.unshift(targetItem);
    } else {
      newColumns.splice(isDownWard ? targetIndex : targetIndex + 1, 0, targetItem);
    }
    newColumns.forEach(function(key2, order) {
      newMap[key2] = _objectSpread2(_objectSpread2({}, newMap[key2] || {}), {}, {
        order
      });
    });
    setColumnsMap(newMap);
    setSortKeyColumns(newColumns);
  });
  var onCheckTree = useRefFunction(function(e) {
    var newColumnMap = _objectSpread2({}, columnsMap);
    var loopSetShow = function loopSetShow2(key2) {
      var _treeDataConfig$map;
      var newSetting = _objectSpread2({}, newColumnMap[key2]);
      newSetting.show = e.checked;
      if ((_treeDataConfig$map = treeDataConfig.map) !== null && _treeDataConfig$map !== void 0 && (_treeDataConfig$map = _treeDataConfig$map.get(key2)) !== null && _treeDataConfig$map !== void 0 && _treeDataConfig$map.children) {
        var _treeDataConfig$map$g;
        (_treeDataConfig$map$g = treeDataConfig.map.get(key2)) === null || _treeDataConfig$map$g === void 0 || (_treeDataConfig$map$g = _treeDataConfig$map$g.children) === null || _treeDataConfig$map$g === void 0 || _treeDataConfig$map$g.forEach(function(item) {
          return loopSetShow2(item.key);
        });
      }
      newColumnMap[key2] = newSetting;
    };
    loopSetShow(e.node.key);
    setColumnsMap(_objectSpread2({}, newColumnMap));
  });
  if (!show) {
    return null;
  }
  var listDom = (0, import_jsx_runtime152.jsx)(tree_default, {
    itemHeight: 24,
    draggable: draggable && !!((_treeDataConfig$list = treeDataConfig.list) !== null && _treeDataConfig$list !== void 0 && _treeDataConfig$list.length) && ((_treeDataConfig$list2 = treeDataConfig.list) === null || _treeDataConfig$list2 === void 0 ? void 0 : _treeDataConfig$list2.length) > 1,
    checkable,
    onDrop: function onDrop(info) {
      var dropKey = info.node.key;
      var dragKey = info.dragNode.key;
      var dropPosition = info.dropPosition, dropToGap = info.dropToGap;
      var position = dropPosition === -1 || !dropToGap ? dropPosition + 1 : dropPosition;
      move(dragKey, dropKey, position);
    },
    blockNode: true,
    onCheck: function onCheck(_, e) {
      return onCheckTree(e);
    },
    checkedKeys: treeDataConfig.keys,
    showLine: false,
    titleRender: function titleRender(_node) {
      var node = _objectSpread2(_objectSpread2({}, _node), {}, {
        children: void 0
      });
      if (!node.title) return null;
      var normalizedTitle = runFunction(node.title, node);
      var wrappedTitle = (0, import_jsx_runtime152.jsx)(typography_default.Text, {
        style: {
          width: 80
        },
        ellipsis: {
          tooltip: normalizedTitle
        },
        children: normalizedTitle
      });
      return (0, import_jsx_runtime152.jsx)(CheckboxListItem, _objectSpread2(_objectSpread2({
        className
      }, es_default3(node, ["key"])), {}, {
        showListItemOption,
        title: wrappedTitle,
        columnKey: node.key
      }));
    },
    height: listHeight,
    treeData: (_treeDataConfig$list3 = treeDataConfig.list) === null || _treeDataConfig$list3 === void 0 ? void 0 : _treeDataConfig$list3.map(function(_ref5) {
      var disabled = _ref5.disabled, config = _objectWithoutProperties(_ref5, _excluded217);
      return config;
    })
  });
  return (0, import_jsx_runtime153.jsxs)(import_jsx_runtime154.Fragment, {
    children: [showTitle && (0, import_jsx_runtime152.jsx)("span", {
      className: "".concat(className, "-list-title ").concat(hashId).trim(),
      children: listTitle
    }), listDom]
  });
};
var GroupCheckboxList = function GroupCheckboxList2(_ref6) {
  var localColumns = _ref6.localColumns, className = _ref6.className, draggable = _ref6.draggable, checkable = _ref6.checkable, showListItemOption = _ref6.showListItemOption, listsHeight = _ref6.listsHeight;
  var _useContext5 = (0, import_react119.useContext)(ProProvider), hashId = _useContext5.hashId;
  var rightList = [];
  var leftList = [];
  var list = [];
  var intl = useIntl();
  localColumns.forEach(function(item) {
    if (item.hideInSetting) {
      return;
    }
    var fixed = item.fixed;
    if (fixed === "left") {
      leftList.push(item);
      return;
    }
    if (fixed === "right") {
      rightList.push(item);
      return;
    }
    list.push(item);
  });
  var showRight = rightList && rightList.length > 0;
  var showLeft = leftList && leftList.length > 0;
  return (0, import_jsx_runtime153.jsxs)("div", {
    className: (0, import_classnames23.default)("".concat(className, "-list"), hashId, _defineProperty({}, "".concat(className, "-list-group"), showRight || showLeft)),
    children: [(0, import_jsx_runtime152.jsx)(CheckboxList, {
      title: intl.getMessage("tableToolBar.leftFixedTitle", "固定在左侧"),
      list: leftList,
      draggable,
      checkable,
      showListItemOption,
      className,
      listHeight: listsHeight
    }), (0, import_jsx_runtime152.jsx)(CheckboxList, {
      list,
      draggable,
      checkable,
      showListItemOption,
      title: intl.getMessage("tableToolBar.noFixedTitle", "不固定"),
      showTitle: showLeft || showRight,
      className,
      listHeight: listsHeight
    }), (0, import_jsx_runtime152.jsx)(CheckboxList, {
      title: intl.getMessage("tableToolBar.rightFixedTitle", "固定在右侧"),
      list: rightList,
      draggable,
      checkable,
      showListItemOption,
      className,
      listHeight: listsHeight
    })]
  });
};
function ColumnSetting(props) {
  var _props$checkable, _props$draggable, _props$showListItemOp, _props$settingIcon;
  var columnRef = (0, import_react119.useRef)(null);
  var counter = (0, import_react119.useContext)(TableContext);
  var localColumns = props.columns;
  var _props$checkedReset = props.checkedReset, checkedReset = _props$checkedReset === void 0 ? true : _props$checkedReset;
  var columnsMap = counter.columnsMap, setColumnsMap = counter.setColumnsMap, clearPersistenceStorage = counter.clearPersistenceStorage;
  (0, import_react119.useEffect)(function() {
    var _counter$propsRef$cur;
    if ((_counter$propsRef$cur = counter.propsRef.current) !== null && _counter$propsRef$cur !== void 0 && (_counter$propsRef$cur = _counter$propsRef$cur.columnsState) !== null && _counter$propsRef$cur !== void 0 && _counter$propsRef$cur.value) {
      var _counter$propsRef$cur2;
      columnRef.current = JSON.parse(JSON.stringify(((_counter$propsRef$cur2 = counter.propsRef.current) === null || _counter$propsRef$cur2 === void 0 || (_counter$propsRef$cur2 = _counter$propsRef$cur2.columnsState) === null || _counter$propsRef$cur2 === void 0 ? void 0 : _counter$propsRef$cur2.value) || {}));
    }
  }, []);
  var setAllSelectAction = useRefFunction(function() {
    var show = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
    var columnKeyMap = {};
    var loopColumns = function loopColumns2(columns) {
      columns.forEach(function(_ref7) {
        var key2 = _ref7.key, fixed = _ref7.fixed, index = _ref7.index, children = _ref7.children, disable = _ref7.disable;
        var columnKey = genColumnKey(key2, index);
        if (columnKey) {
          var _columnsMap$columnKey, _columnsMap$columnKey2;
          columnKeyMap[columnKey] = {
            // 子节点 disable 时，不修改节点显示状态
            show: disable ? (_columnsMap$columnKey = columnsMap[columnKey]) === null || _columnsMap$columnKey === void 0 ? void 0 : _columnsMap$columnKey.show : show,
            fixed,
            disable,
            order: (_columnsMap$columnKey2 = columnsMap[columnKey]) === null || _columnsMap$columnKey2 === void 0 ? void 0 : _columnsMap$columnKey2.order
          };
        }
        if (children) {
          loopColumns2(children);
        }
      });
    };
    loopColumns(localColumns);
    setColumnsMap(columnKeyMap);
  });
  var checkedAll = useRefFunction(function(e) {
    if (e.target.checked) {
      setAllSelectAction();
    } else {
      setAllSelectAction(false);
    }
  });
  var clearClick = useRefFunction(function() {
    var _counter$propsRef$cur3;
    clearPersistenceStorage === null || clearPersistenceStorage === void 0 || clearPersistenceStorage();
    setColumnsMap(((_counter$propsRef$cur3 = counter.propsRef.current) === null || _counter$propsRef$cur3 === void 0 || (_counter$propsRef$cur3 = _counter$propsRef$cur3.columnsState) === null || _counter$propsRef$cur3 === void 0 ? void 0 : _counter$propsRef$cur3.defaultValue) || columnRef.current || counter.defaultColumnKeyMap);
  });
  var unCheckedKeys = Object.values(columnsMap).filter(function(value) {
    return !value || value.show === false;
  });
  var indeterminate = unCheckedKeys.length > 0 && unCheckedKeys.length !== localColumns.length;
  var intl = useIntl();
  var _useContext6 = (0, import_react119.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext6.getPrefixCls;
  var className = getPrefixCls("pro-table-column-setting");
  var _useStyle = useStyle12(className), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  return wrapSSR((0, import_jsx_runtime152.jsx)(popover_default, {
    arrow: false,
    title: (0, import_jsx_runtime153.jsxs)("div", {
      className: "".concat(className, "-title ").concat(hashId).trim(),
      children: [props.checkable === false ? (0, import_jsx_runtime152.jsx)("div", {}) : (0, import_jsx_runtime152.jsx)(checkbox_default, {
        indeterminate,
        checked: unCheckedKeys.length === 0 && unCheckedKeys.length !== localColumns.length,
        onChange: function onChange(e) {
          checkedAll(e);
        },
        children: intl.getMessage("tableToolBar.columnDisplay", "列展示")
      }), checkedReset ? (0, import_jsx_runtime152.jsx)("a", {
        onClick: clearClick,
        className: "".concat(className, "-action-rest-button ").concat(hashId).trim(),
        children: intl.getMessage("tableToolBar.reset", "重置")
      }) : null, props !== null && props !== void 0 && props.extra ? (0, import_jsx_runtime152.jsx)(space_default, {
        size: 12,
        align: "center",
        children: props.extra
      }) : null]
    }),
    overlayClassName: "".concat(className, "-overlay ").concat(hashId).trim(),
    trigger: "click",
    placement: "bottomRight",
    content: (0, import_jsx_runtime152.jsx)(GroupCheckboxList, {
      checkable: (_props$checkable = props.checkable) !== null && _props$checkable !== void 0 ? _props$checkable : true,
      draggable: (_props$draggable = props.draggable) !== null && _props$draggable !== void 0 ? _props$draggable : true,
      showListItemOption: (_props$showListItemOp = props.showListItemOption) !== null && _props$showListItemOp !== void 0 ? _props$showListItemOp : true,
      className,
      localColumns,
      listsHeight: props.listsHeight
    }),
    children: props.children || (0, import_jsx_runtime152.jsx)(tooltip_default, {
      title: intl.getMessage("tableToolBar.columnSetting", "列设置"),
      children: (_props$settingIcon = props.settingIcon) !== null && _props$settingIcon !== void 0 ? _props$settingIcon : (0, import_jsx_runtime152.jsx)(SettingOutlined_default, {})
    })
  }));
}
var ColumnSetting_default = ColumnSetting;

// node_modules/@ant-design/pro-table/es/components/ListToolBar/index.js
var import_classnames25 = __toESM(require_classnames());
var import_react122 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/components/ListToolBar/HeaderMenu.js
var import_classnames24 = __toESM(require_classnames());
var import_react120 = __toESM(require_react());
var import_jsx_runtime155 = __toESM(require_jsx_runtime());
var import_react121 = __toESM(require_react());
var import_jsx_runtime156 = __toESM(require_jsx_runtime());
var HeaderMenu = function HeaderMenu2(props) {
  var _useContext = (0, import_react120.useContext)(ProProvider), hashId = _useContext.hashId;
  var _props$items = props.items, items = _props$items === void 0 ? [] : _props$items, _props$type = props.type, type = _props$type === void 0 ? "inline" : _props$type, prefixCls = props.prefixCls, propActiveKey = props.activeKey, defaultActiveKey = props.defaultActiveKey;
  var _useMergedState = useMergedState(propActiveKey || defaultActiveKey, {
    value: propActiveKey,
    onChange: props.onChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), activeKey = _useMergedState2[0], setActiveKey = _useMergedState2[1];
  if (items.length < 1) {
    return null;
  }
  var activeItem = items.find(function(item) {
    return item.key === activeKey;
  }) || items[0];
  if (type === "inline") {
    return (0, import_jsx_runtime155.jsx)("div", {
      className: (0, import_classnames24.default)("".concat(prefixCls, "-menu"), "".concat(prefixCls, "-inline-menu"), hashId),
      children: items.map(function(item, index) {
        return (0, import_jsx_runtime155.jsx)("div", {
          onClick: function onClick() {
            setActiveKey(item.key);
          },
          className: (0, import_classnames24.default)("".concat(prefixCls, "-inline-menu-item"), activeItem.key === item.key ? "".concat(prefixCls, "-inline-menu-item-active") : void 0, hashId),
          children: item.label
        }, item.key || index);
      })
    });
  }
  if (type === "tab") {
    return (0, import_jsx_runtime155.jsx)(tabs_default, {
      items: items.map(function(item) {
        var _item$key;
        return _objectSpread2(_objectSpread2({}, item), {}, {
          key: (_item$key = item.key) === null || _item$key === void 0 ? void 0 : _item$key.toString()
        });
      }),
      activeKey: activeItem.key,
      onTabClick: function onTabClick(key2) {
        return setActiveKey(key2);
      },
      children: compareVersions(version_default, "4.23.0") < 0 ? items === null || items === void 0 ? void 0 : items.map(function(item, index) {
        return (0, import_react121.createElement)(tabs_default.TabPane, _objectSpread2(_objectSpread2({}, item), {}, {
          key: item.key || index,
          tab: item.label
        }));
      }) : null
    });
  }
  var dropdownProps = menuOverlayCompatible({
    selectedKeys: [activeItem.key],
    onClick: function onClick(item) {
      setActiveKey(item.key);
    },
    items: items.map(function(item, index) {
      return {
        key: item.key || index,
        disabled: item.disabled,
        label: item.label
      };
    })
  });
  return (0, import_jsx_runtime155.jsx)("div", {
    className: (0, import_classnames24.default)("".concat(prefixCls, "-menu"), "".concat(prefixCls, "-dropdownmenu")),
    children: (0, import_jsx_runtime155.jsx)(dropdown_default, _objectSpread2(_objectSpread2({
      trigger: ["click"]
    }, dropdownProps), {}, {
      children: (0, import_jsx_runtime156.jsxs)(space_default, {
        className: "".concat(prefixCls, "-dropdownmenu-label"),
        children: [activeItem.label, (0, import_jsx_runtime155.jsx)(DownOutlined_default, {})]
      })
    }))
  });
};
var HeaderMenu_default = HeaderMenu;

// node_modules/@ant-design/pro-table/es/components/ListToolBar/style.js
var genProListStyle = function genProListStyle2(token) {
  return _defineProperty({}, token.componentCls, _defineProperty(_defineProperty(_defineProperty({
    lineHeight: "1",
    "&-container": {
      display: "flex",
      justifyContent: "space-between",
      paddingBlock: token.padding,
      paddingInline: 0,
      "&-mobile": {
        flexDirection: "column"
      }
    },
    "&-title": {
      display: "flex",
      alignItems: "center",
      justifyContent: "flex-start",
      color: token.colorTextHeading,
      fontWeight: "500",
      fontSize: token.fontSizeLG
    },
    "&-search:not(:last-child)": {
      display: "flex",
      alignItems: "center",
      justifyContent: "flex-start"
    },
    "&-setting-item": {
      marginBlock: 0,
      marginInline: 4,
      color: token.colorIconHover,
      fontSize: token.fontSizeLG,
      cursor: "pointer",
      "> span": {
        display: "block",
        width: "100%",
        height: "100%"
      },
      "&:hover": {
        color: token.colorPrimary
      }
    },
    "&-left": _defineProperty(_defineProperty({
      display: "flex",
      flexWrap: "wrap",
      alignItems: "center",
      gap: token.marginXS,
      justifyContent: "flex-start",
      maxWidth: "calc(100% - 200px)"
    }, "".concat(token.antCls, "-tabs"), {
      width: "100%"
    }), "&-has-tabs", {
      overflow: "hidden"
    }),
    "&-right": {
      flex: 1,
      display: "flex",
      flexWrap: "wrap",
      justifyContent: "flex-end",
      gap: token.marginXS
    },
    "&-extra-line": {
      marginBlockEnd: token.margin
    },
    "&-setting-items": {
      display: "flex",
      gap: token.marginXS,
      lineHeight: "32px",
      alignItems: "center"
    },
    "&-filter": _defineProperty({
      "&:not(:last-child)": {
        marginInlineEnd: token.margin
      },
      display: "flex",
      alignItems: "center"
    }, "div$".concat(token.antCls, "-pro-table-search"), {
      marginBlock: 0,
      marginInline: 0,
      paddingBlock: 0,
      paddingInline: 0
    }),
    "&-inline-menu-item": {
      display: "inline-block",
      marginInlineEnd: token.marginLG,
      cursor: "pointer",
      opacity: "0.75",
      "&-active": {
        fontWeight: "bold",
        opacity: "1"
      }
    }
  }, "".concat(token.antCls, "-tabs-top > ").concat(token.antCls, "-tabs-nav"), _defineProperty({
    marginBlockEnd: 0,
    "&::before": {
      borderBlockEnd: 0
    }
  }, "".concat(token.antCls, "-tabs-nav-list"), {
    marginBlockStart: 0,
    "${token.antCls}-tabs-tab": {
      paddingBlockStart: 0
    }
  })), "&-dropdownmenu-label", {
    fontWeight: "bold",
    fontSize: token.fontSizeIcon,
    textAlign: "center",
    cursor: "pointer"
  }), "@media (max-width: 768px)", _defineProperty({}, token.componentCls, {
    "&-container": {
      display: "flex",
      flexWrap: "wrap",
      flexDirection: "column"
    },
    "&-left": {
      marginBlockEnd: "16px",
      maxWidth: "100%"
    }
  })));
};
function useStyle13(prefixCls) {
  return useStyle("ProTableListToolBar", function(token) {
    var proListToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProListStyle(proListToken)];
  });
}

// node_modules/@ant-design/pro-table/es/components/ListToolBar/index.js
var import_jsx_runtime157 = __toESM(require_jsx_runtime());
var import_react123 = __toESM(require_react());
var import_jsx_runtime158 = __toESM(require_jsx_runtime());
function getSettingItem(setting) {
  if (import_react122.default.isValidElement(setting)) {
    return setting;
  }
  if (setting) {
    var settingConfig = setting;
    var icon = settingConfig.icon, tooltip = settingConfig.tooltip, _onClick = settingConfig.onClick, _key = settingConfig.key;
    if (icon && tooltip) {
      return (0, import_jsx_runtime157.jsx)(tooltip_default, {
        title: tooltip,
        children: (0, import_jsx_runtime157.jsx)("span", {
          onClick: function onClick() {
            if (_onClick) {
              _onClick(_key);
            }
          },
          children: icon
        }, _key)
      });
    }
    return (0, import_jsx_runtime157.jsx)("span", {
      onClick: function onClick() {
        if (_onClick) {
          _onClick(_key);
        }
      },
      children: icon
    }, _key);
  }
  return null;
}
var ListToolBarTabBar = function ListToolBarTabBar2(_ref) {
  var _tabs$items;
  var prefixCls = _ref.prefixCls, tabs = _ref.tabs, multipleLine = _ref.multipleLine, filtersNode = _ref.filtersNode;
  if (!multipleLine) return null;
  return (0, import_jsx_runtime157.jsx)("div", {
    className: "".concat(prefixCls, "-extra-line"),
    children: tabs !== null && tabs !== void 0 && tabs.items && tabs !== null && tabs !== void 0 && tabs.items.length ? (0, import_jsx_runtime157.jsx)(tabs_default, {
      style: {
        width: "100%"
      },
      defaultActiveKey: tabs.defaultActiveKey,
      activeKey: tabs.activeKey,
      items: tabs.items.map(function(item, index) {
        var _item$key;
        return _objectSpread2(_objectSpread2({
          label: item.tab
        }, item), {}, {
          key: ((_item$key = item.key) === null || _item$key === void 0 ? void 0 : _item$key.toString()) || (index === null || index === void 0 ? void 0 : index.toString())
        });
      }),
      onChange: tabs.onChange,
      tabBarExtraContent: filtersNode,
      children: (_tabs$items = tabs.items) === null || _tabs$items === void 0 ? void 0 : _tabs$items.map(function(item, index) {
        return compareVersions(version_default, "4.23.0") < 0 ? (0, import_react123.createElement)(tabs_default.TabPane, _objectSpread2(_objectSpread2({}, item), {}, {
          key: item.key || index,
          tab: item.tab
        })) : null;
      })
    }) : filtersNode
  });
};
var ListToolBar = function ListToolBar2(_ref2) {
  var customizePrefixCls = _ref2.prefixCls, title = _ref2.title, subTitle = _ref2.subTitle, tooltip = _ref2.tooltip, className = _ref2.className, style = _ref2.style, search = _ref2.search, onSearch = _ref2.onSearch, _ref2$multipleLine = _ref2.multipleLine, multipleLine = _ref2$multipleLine === void 0 ? false : _ref2$multipleLine, filter = _ref2.filter, _ref2$actions = _ref2.actions, actions = _ref2$actions === void 0 ? [] : _ref2$actions, _ref2$settings = _ref2.settings, settings = _ref2$settings === void 0 ? [] : _ref2$settings, tabs = _ref2.tabs, menu = _ref2.menu;
  var _useContext = (0, import_react122.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var _proTheme$useToken = proTheme.useToken(), token = _proTheme$useToken.token;
  var prefixCls = getPrefixCls("pro-table-list-toolbar", customizePrefixCls);
  var _useStyle = useStyle13(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var intl = useIntl();
  var _useState = (0, import_react122.useState)(false), _useState2 = _slicedToArray(_useState, 2), isMobile = _useState2[0], setIsMobile = _useState2[1];
  var placeholder = intl.getMessage("tableForm.inputPlaceholder", "请输入");
  var searchNode = (0, import_react122.useMemo)(function() {
    if (!search) {
      return null;
    }
    if (import_react122.default.isValidElement(search)) {
      return search;
    }
    return (0, import_jsx_runtime157.jsx)(input_default.Search, _objectSpread2(_objectSpread2({
      style: {
        width: 200
      },
      placeholder
    }, search), {}, {
      onSearch: _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
        var _onSearch, _ref4;
        var _len, restParams, _key2, success2, _args = arguments;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              for (_len = _args.length, restParams = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
                restParams[_key2] = _args[_key2];
              }
              _context.next = 3;
              return (_onSearch = (_ref4 = search).onSearch) === null || _onSearch === void 0 ? void 0 : _onSearch.call.apply(_onSearch, [_ref4].concat(restParams));
            case 3:
              success2 = _context.sent;
              if (success2 !== false) {
                onSearch === null || onSearch === void 0 || onSearch(restParams === null || restParams === void 0 ? void 0 : restParams[0]);
              }
            case 5:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }))
    }));
  }, [placeholder, onSearch, search]);
  var filtersNode = (0, import_react122.useMemo)(function() {
    if (filter) return (0, import_jsx_runtime157.jsx)("div", {
      className: "".concat(prefixCls, "-filter ").concat(hashId).trim(),
      children: filter
    });
    return null;
  }, [filter, hashId, prefixCls]);
  var hasTitle = (0, import_react122.useMemo)(function() {
    return menu || title || subTitle || tooltip;
  }, [menu, subTitle, title, tooltip]);
  var actionDom = (0, import_react122.useMemo)(function() {
    if (!Array.isArray(actions)) {
      return actions;
    }
    if (actions.length < 1) {
      return null;
    }
    return (0, import_jsx_runtime157.jsx)("div", {
      style: {
        display: "flex",
        alignItems: "center",
        gap: token.marginXS
      },
      children: actions.map(function(action, index) {
        if (!import_react122.default.isValidElement(action)) {
          return (0, import_jsx_runtime157.jsx)(import_react122.default.Fragment, {
            children: action
          }, index);
        }
        return import_react122.default.cloneElement(action, _objectSpread2({
          // eslint-disable-next-line react/no-array-index-key
          key: index
        }, action === null || action === void 0 ? void 0 : action.props));
      })
    });
  }, [actions]);
  var hasRight = (0, import_react122.useMemo)(function() {
    return !!(hasTitle && searchNode || !multipleLine && filtersNode || actionDom || settings !== null && settings !== void 0 && settings.length);
  }, [actionDom, filtersNode, hasTitle, multipleLine, searchNode, settings === null || settings === void 0 ? void 0 : settings.length]);
  var hasLeft = (0, import_react122.useMemo)(function() {
    return tooltip || title || subTitle || menu || !hasTitle && searchNode;
  }, [hasTitle, menu, searchNode, subTitle, title, tooltip]);
  var leftTitleDom = (0, import_react122.useMemo)(function() {
    if (!hasLeft && hasRight) {
      return (0, import_jsx_runtime157.jsx)("div", {
        className: "".concat(prefixCls, "-left ").concat(hashId).trim()
      });
    }
    if (!menu && (hasTitle || !searchNode)) {
      return (0, import_jsx_runtime157.jsx)("div", {
        className: "".concat(prefixCls, "-left ").concat(hashId).trim(),
        children: (0, import_jsx_runtime157.jsx)("div", {
          className: "".concat(prefixCls, "-title ").concat(hashId).trim(),
          children: (0, import_jsx_runtime157.jsx)(LabelIconTip, {
            tooltip,
            label: title,
            subTitle
          })
        })
      });
    }
    return (0, import_jsx_runtime158.jsxs)("div", {
      className: (0, import_classnames25.default)("".concat(prefixCls, "-left"), hashId, _defineProperty(_defineProperty(_defineProperty({}, "".concat(prefixCls, "-left-has-tabs"), (menu === null || menu === void 0 ? void 0 : menu.type) === "tab"), "".concat(prefixCls, "-left-has-dropdown"), (menu === null || menu === void 0 ? void 0 : menu.type) === "dropdown"), "".concat(prefixCls, "-left-has-inline-menu"), (menu === null || menu === void 0 ? void 0 : menu.type) === "inline")),
      children: [hasTitle && !menu && (0, import_jsx_runtime157.jsx)("div", {
        className: "".concat(prefixCls, "-title ").concat(hashId).trim(),
        children: (0, import_jsx_runtime157.jsx)(LabelIconTip, {
          tooltip,
          label: title,
          subTitle
        })
      }), menu && // 这里面实现了 tabs 的逻辑
      (0, import_jsx_runtime157.jsx)(HeaderMenu_default, _objectSpread2(_objectSpread2({}, menu), {}, {
        prefixCls
      })), !hasTitle && searchNode ? (0, import_jsx_runtime157.jsx)("div", {
        className: "".concat(prefixCls, "-search ").concat(hashId).trim(),
        children: searchNode
      }) : null]
    });
  }, [hasLeft, hasRight, hasTitle, hashId, menu, prefixCls, searchNode, subTitle, title, tooltip]);
  var rightTitleDom = (0, import_react122.useMemo)(function() {
    if (!hasRight) return null;
    return (0, import_jsx_runtime158.jsxs)("div", {
      className: "".concat(prefixCls, "-right ").concat(hashId).trim(),
      style: isMobile ? {} : {
        alignItems: "center"
      },
      children: [!multipleLine ? filtersNode : null, hasTitle && searchNode ? (0, import_jsx_runtime157.jsx)("div", {
        className: "".concat(prefixCls, "-search ").concat(hashId).trim(),
        children: searchNode
      }) : null, actionDom, settings !== null && settings !== void 0 && settings.length ? (0, import_jsx_runtime157.jsx)("div", {
        className: "".concat(prefixCls, "-setting-items ").concat(hashId).trim(),
        children: settings.map(function(setting, index) {
          var settingItem = getSettingItem(setting);
          return (
            // eslint-disable-next-line react/no-array-index-key
            (0, import_jsx_runtime157.jsx)("div", {
              className: "".concat(prefixCls, "-setting-item ").concat(hashId).trim(),
              children: settingItem
            }, index)
          );
        })
      }) : null]
    });
  }, [hasRight, prefixCls, hashId, isMobile, hasTitle, searchNode, multipleLine, filtersNode, actionDom, settings]);
  var titleNode = (0, import_react122.useMemo)(function() {
    if (!hasRight && !hasLeft) return null;
    var containerClassName = (0, import_classnames25.default)("".concat(prefixCls, "-container"), hashId, _defineProperty({}, "".concat(prefixCls, "-container-mobile"), isMobile));
    return (0, import_jsx_runtime158.jsxs)("div", {
      className: containerClassName,
      children: [leftTitleDom, rightTitleDom]
    });
  }, [hasLeft, hasRight, hashId, isMobile, leftTitleDom, prefixCls, rightTitleDom]);
  return wrapSSR((0, import_jsx_runtime157.jsx)(es_default, {
    onResize: function onResize(size) {
      if (size.width < 375 !== isMobile) {
        setIsMobile(size.width < 375);
      }
    },
    children: (0, import_jsx_runtime158.jsxs)("div", {
      style,
      className: (0, import_classnames25.default)(prefixCls, hashId, className),
      children: [titleNode, (0, import_jsx_runtime157.jsx)(ListToolBarTabBar, {
        filtersNode,
        prefixCls,
        tabs,
        multipleLine
      })]
    })
  }));
};
var ListToolBar_default = ListToolBar;

// node_modules/@ant-design/pro-table/es/components/ToolBar/DensityIcon.js
var import_react124 = __toESM(require_react());
var import_jsx_runtime159 = __toESM(require_jsx_runtime());
var DensityIcon = function DensityIcon2(props) {
  var _props$icon = props.icon, icon = _props$icon === void 0 ? (0, import_jsx_runtime159.jsx)(ColumnHeightOutlined_default, {}) : _props$icon;
  var counter = (0, import_react124.useContext)(TableContext);
  var intl = useIntl();
  var dropdownProps = menuOverlayCompatible({
    selectedKeys: [counter.tableSize],
    onClick: function onClick(_ref) {
      var _counter$setTableSize;
      var key2 = _ref.key;
      (_counter$setTableSize = counter.setTableSize) === null || _counter$setTableSize === void 0 || _counter$setTableSize.call(counter, key2);
    },
    style: {
      width: 80
    },
    items: [{
      key: "large",
      label: intl.getMessage("tableToolBar.densityLarger", "宽松")
    }, {
      key: "middle",
      label: intl.getMessage("tableToolBar.densityMiddle", "中等")
    }, {
      key: "small",
      label: intl.getMessage("tableToolBar.densitySmall", "紧凑")
    }]
  });
  return (0, import_jsx_runtime159.jsx)(dropdown_default, _objectSpread2(_objectSpread2({}, dropdownProps), {}, {
    trigger: ["click"],
    children: (0, import_jsx_runtime159.jsx)(tooltip_default, {
      title: intl.getMessage("tableToolBar.density", "表格密度"),
      children: icon
    })
  }));
};
var DensityIcon_default = import_react124.default.memo(DensityIcon);

// node_modules/@ant-design/pro-table/es/components/ToolBar/FullscreenIcon.js
var import_react125 = __toESM(require_react());
var import_jsx_runtime160 = __toESM(require_jsx_runtime());
var FullScreenIcon = function FullScreenIcon2() {
  var intl = useIntl();
  var _useState = (0, import_react125.useState)(false), _useState2 = _slicedToArray(_useState, 2), fullscreen = _useState2[0], setFullscreen = _useState2[1];
  (0, import_react125.useEffect)(function() {
    if (!isBrowser()) {
      return;
    }
    document.onfullscreenchange = function() {
      setFullscreen(!!document.fullscreenElement);
    };
  }, []);
  return fullscreen ? (0, import_jsx_runtime160.jsx)(tooltip_default, {
    title: intl.getMessage("tableToolBar.exitFullScreen", "全屏"),
    children: (0, import_jsx_runtime160.jsx)(FullscreenExitOutlined_default, {})
  }) : (0, import_jsx_runtime160.jsx)(tooltip_default, {
    title: intl.getMessage("tableToolBar.fullScreen", "全屏"),
    children: (0, import_jsx_runtime160.jsx)(FullscreenOutlined_default, {})
  });
};
var FullscreenIcon_default = import_react125.default.memo(FullScreenIcon);

// node_modules/@ant-design/pro-table/es/components/ToolBar/index.js
var import_jsx_runtime161 = __toESM(require_jsx_runtime());
var import_react127 = __toESM(require_react());
var _excluded75 = ["headerTitle", "tooltip", "toolBarRender", "action", "options", "selectedRowKeys", "selectedRows", "toolbar", "onSearch", "columns", "optionsRender"];
function getButtonText(_ref, options) {
  var _options$reloadIcon;
  var intl = _ref.intl;
  return {
    reload: {
      text: intl.getMessage("tableToolBar.reload", "刷新"),
      icon: (_options$reloadIcon = options.reloadIcon) !== null && _options$reloadIcon !== void 0 ? _options$reloadIcon : (0, import_jsx_runtime161.jsx)(ReloadOutlined_default, {})
    },
    density: {
      text: intl.getMessage("tableToolBar.density", "表格密度"),
      icon: (0, import_jsx_runtime161.jsx)(DensityIcon_default, {
        icon: options.densityIcon
      })
    },
    fullScreen: {
      text: intl.getMessage("tableToolBar.fullScreen", "全屏"),
      icon: (0, import_jsx_runtime161.jsx)(FullscreenIcon_default, {})
    }
  };
}
function renderDefaultOption(options, defaultOptions2, actions, columns) {
  return Object.keys(options).filter(function(item) {
    return item;
  }).map(function(key2) {
    var value = options[key2];
    if (!value) {
      return null;
    }
    var onClick = value === true ? defaultOptions2[key2] : function(event) {
      value === null || value === void 0 || value(event, actions.current);
    };
    if (typeof onClick !== "function") {
      onClick = function onClick2() {
      };
    }
    if (key2 === "setting") {
      return (0, import_react127.createElement)(ColumnSetting_default, _objectSpread2(_objectSpread2({}, options[key2]), {}, {
        columns,
        key: key2
      }));
    }
    if (key2 === "fullScreen") {
      return (0, import_jsx_runtime161.jsx)("span", {
        onClick,
        children: (0, import_jsx_runtime161.jsx)(FullscreenIcon_default, {})
      }, key2);
    }
    var optionItem = getButtonText(defaultOptions2, options)[key2];
    if (optionItem) {
      return (0, import_jsx_runtime161.jsx)("span", {
        onClick,
        children: (0, import_jsx_runtime161.jsx)(tooltip_default, {
          title: optionItem.text,
          children: optionItem.icon
        })
      }, key2);
    }
    return null;
  }).filter(function(item) {
    return item;
  });
}
function ToolBar(_ref2) {
  var headerTitle = _ref2.headerTitle, tooltip = _ref2.tooltip, toolBarRender = _ref2.toolBarRender, action = _ref2.action, propsOptions = _ref2.options, selectedRowKeys = _ref2.selectedRowKeys, selectedRows = _ref2.selectedRows, toolbar = _ref2.toolbar, onSearch = _ref2.onSearch, columns = _ref2.columns, optionsRender = _ref2.optionsRender, rest = _objectWithoutProperties(_ref2, _excluded75);
  var counter = (0, import_react126.useContext)(TableContext);
  var intl = useIntl();
  var optionDom = (0, import_react126.useMemo)(function() {
    var defaultOptions2 = {
      reload: function reload() {
        var _action$current;
        return action === null || action === void 0 || (_action$current = action.current) === null || _action$current === void 0 ? void 0 : _action$current.reload();
      },
      density: true,
      setting: true,
      search: false,
      fullScreen: function fullScreen() {
        var _action$current2, _action$current2$full;
        return action === null || action === void 0 || (_action$current2 = action.current) === null || _action$current2 === void 0 || (_action$current2$full = _action$current2.fullScreen) === null || _action$current2$full === void 0 ? void 0 : _action$current2$full.call(_action$current2);
      }
    };
    if (propsOptions === false) {
      return [];
    }
    var options = _objectSpread2(_objectSpread2({}, defaultOptions2), {}, {
      fullScreen: false
    }, propsOptions);
    var settings = renderDefaultOption(options, _objectSpread2(_objectSpread2({}, defaultOptions2), {}, {
      intl
    }), action, columns);
    if (optionsRender) {
      return optionsRender(_objectSpread2({
        headerTitle,
        tooltip,
        toolBarRender,
        action,
        options: propsOptions,
        selectedRowKeys,
        selectedRows,
        toolbar,
        onSearch,
        columns,
        optionsRender
      }, rest), settings);
    }
    return settings;
  }, [action, columns, headerTitle, intl, onSearch, optionsRender, propsOptions, rest, selectedRowKeys, selectedRows, toolBarRender, toolbar, tooltip]);
  var actions = toolBarRender ? toolBarRender(action === null || action === void 0 ? void 0 : action.current, {
    selectedRowKeys,
    selectedRows
  }) : [];
  var searchConfig = (0, import_react126.useMemo)(function() {
    if (!propsOptions) {
      return false;
    }
    if (!propsOptions.search) return false;
    var defaultSearchConfig = {
      value: counter.keyWords,
      onChange: function onChange(e) {
        return counter.setKeyWords(e.target.value);
      }
    };
    if (propsOptions.search === true) return defaultSearchConfig;
    return _objectSpread2(_objectSpread2({}, defaultSearchConfig), propsOptions.search);
  }, [counter, propsOptions]);
  (0, import_react126.useEffect)(function() {
    if (counter.keyWords === void 0) {
      onSearch === null || onSearch === void 0 || onSearch("");
    }
  }, [counter.keyWords, onSearch]);
  return (0, import_jsx_runtime161.jsx)(ListToolBar_default, _objectSpread2({
    title: headerTitle,
    tooltip: tooltip || rest.tip,
    search: searchConfig,
    onSearch,
    actions,
    settings: optionDom
  }, toolbar));
}
var ToolbarRender = function(_React$Component) {
  _inherits(ToolbarRender2, _React$Component);
  var _super = _createSuper(ToolbarRender2);
  function ToolbarRender2() {
    var _this;
    _classCallCheck(this, ToolbarRender2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "onSearch", function(keyword) {
      var _options$search, _options$search$onSea, _actionRef$current, _actionRef$current$se;
      var _this$props = _this.props, options = _this$props.options, onFormSearchSubmit = _this$props.onFormSearchSubmit, actionRef = _this$props.actionRef;
      if (!options || !options.search) {
        return;
      }
      var _ref3 = options.search === true ? {} : options.search, _ref3$name = _ref3.name, name = _ref3$name === void 0 ? "keyword" : _ref3$name;
      var success2 = (_options$search = options.search) === null || _options$search === void 0 || (_options$search$onSea = _options$search.onSearch) === null || _options$search$onSea === void 0 ? void 0 : _options$search$onSea.call(_options$search, keyword);
      if (success2 === false) return;
      actionRef === null || actionRef === void 0 || (_actionRef$current = actionRef.current) === null || _actionRef$current === void 0 || (_actionRef$current$se = _actionRef$current.setPageInfo) === null || _actionRef$current$se === void 0 || _actionRef$current$se.call(_actionRef$current, {
        current: 1
      });
      onFormSearchSubmit(omitUndefined(_defineProperty({
        _timestamp: Date.now()
      }, name, keyword)));
    });
    _defineProperty(_assertThisInitialized(_this), "isEquals", function(next) {
      var _this$props2 = _this.props, hideToolbar = _this$props2.hideToolbar, tableColumn = _this$props2.tableColumn, options = _this$props2.options, tooltip = _this$props2.tooltip, toolbar = _this$props2.toolbar, selectedRows = _this$props2.selectedRows, selectedRowKeys = _this$props2.selectedRowKeys, headerTitle = _this$props2.headerTitle, actionRef = _this$props2.actionRef, toolBarRender = _this$props2.toolBarRender;
      return isDeepEqualReact({
        hideToolbar,
        tableColumn,
        options,
        tooltip,
        toolbar,
        selectedRows,
        selectedRowKeys,
        headerTitle,
        actionRef,
        toolBarRender
      }, {
        hideToolbar: next.hideToolbar,
        tableColumn: next.tableColumn,
        options: next.options,
        tooltip: next.tooltip,
        toolbar: next.toolbar,
        selectedRows: next.selectedRows,
        selectedRowKeys: next.selectedRowKeys,
        headerTitle: next.headerTitle,
        actionRef: next.actionRef,
        toolBarRender: next.toolBarRender
      }, ["render", "renderFormItem"]);
    });
    _defineProperty(_assertThisInitialized(_this), "shouldComponentUpdate", function(next) {
      if (next.searchNode) {
        return true;
      }
      return !_this.isEquals(next);
    });
    _defineProperty(_assertThisInitialized(_this), "render", function() {
      var _this$props3 = _this.props, hideToolbar = _this$props3.hideToolbar, tableColumn = _this$props3.tableColumn, options = _this$props3.options, searchNode = _this$props3.searchNode, tooltip = _this$props3.tooltip, toolbar = _this$props3.toolbar, selectedRows = _this$props3.selectedRows, selectedRowKeys = _this$props3.selectedRowKeys, headerTitle = _this$props3.headerTitle, actionRef = _this$props3.actionRef, toolBarRender = _this$props3.toolBarRender, optionsRender = _this$props3.optionsRender;
      if (hideToolbar) {
        return null;
      }
      return (0, import_jsx_runtime161.jsx)(ToolBar, {
        tooltip,
        columns: tableColumn,
        options,
        headerTitle,
        action: actionRef,
        onSearch: _this.onSearch,
        selectedRows,
        selectedRowKeys,
        toolBarRender,
        toolbar: _objectSpread2({
          filter: searchNode
        }, toolbar),
        optionsRender
      });
    });
    return _this;
  }
  return _createClass(ToolbarRender2);
}(import_react126.default.Component);
var ToolBar_default = ToolbarRender;

// node_modules/@ant-design/pro-table/es/style/index.js
var turn = new Keyframes_default("turn", {
  "0%": {
    transform: "rotate(0deg)"
  },
  "25%": {
    transform: "rotate(90deg)"
  },
  "50%": {
    transform: "rotate(180deg)"
  },
  "75%": {
    transform: "rotate(270deg)"
  },
  "100%": {
    transform: "rotate(360deg)"
  }
});
var genProListStyle3 = function genProListStyle4(token) {
  return _defineProperty(_defineProperty(_defineProperty({}, token.componentCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({
    zIndex: 1
  }, "".concat(token.antCls, "-table-wrapper ").concat(token.antCls, "-table-pagination").concat(token.antCls, "-pagination"), {
    marginBlockEnd: 0
  }), "&:not(:root):fullscreen", {
    minHeight: "100vh",
    overflow: "auto",
    background: token.colorBgContainer
  }), "&-extra", {
    marginBlockEnd: 16
  }), "&-polling", _defineProperty({}, "".concat(token.componentCls, "-list-toolbar-setting-item"), {
    ".anticon.anticon-reload": {
      transform: "rotate(0deg)",
      animationName: turn,
      animationDuration: "1s",
      animationTimingFunction: "linear",
      animationIterationCount: "infinite"
    }
  })), "td".concat(token.antCls, "-table-cell"), {
    ">a": {
      fontSize: token.fontSize
    }
  }), "".concat(token.antCls, "-table").concat(token.antCls, "-table-tbody").concat(token.antCls, "-table-wrapper:only-child").concat(token.antCls, "-table"), {
    marginBlock: 0,
    marginInline: 0
  }), "".concat(token.antCls, "-table").concat(token.antCls, "-table-middle ").concat(token.componentCls), _defineProperty({
    marginBlock: 0,
    marginInline: -8
  }, "".concat(token.proComponentsCls, "-card"), {
    backgroundColor: "initial"
  })), "& &-search", _defineProperty(_defineProperty(_defineProperty(_defineProperty({
    marginBlockEnd: "16px",
    background: token.colorBgContainer,
    "&-ghost": {
      background: "transparent"
    }
  }, "&".concat(token.componentCls, "-form"), {
    marginBlock: 0,
    marginInline: 0,
    paddingBlock: 0,
    paddingInline: 16,
    overflow: "unset"
  }), "&-light-filter", {
    marginBlockEnd: 0,
    paddingBlock: 0,
    paddingInline: 0
  }), "&-form-option", _defineProperty(_defineProperty(_defineProperty({}, "".concat(token.antCls, "-form-item"), {}), "".concat(token.antCls, "-form-item-label"), {}), "".concat(token.antCls, "-form-item-control-input"), {})), "@media (max-width: 575px)", _defineProperty({}, token.componentCls, _defineProperty({
    height: "auto !important",
    paddingBlockEnd: "24px"
  }, "".concat(token.antCls, "-form-item-label"), {
    minWidth: "80px",
    textAlign: "start"
  })))), "&-toolbar", {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    height: "64px",
    paddingInline: 24,
    paddingBlock: 0,
    "&-option": {
      display: "flex",
      alignItems: "center",
      justifyContent: "flex-end"
    },
    "&-title": {
      flex: "1",
      color: token.colorTextLabel,
      fontWeight: "500",
      fontSize: "16px",
      lineHeight: "24px",
      opacity: "0.85"
    }
  })), "@media (max-width: ".concat(token.screenXS, ")px"), _defineProperty({}, token.componentCls, _defineProperty({}, "".concat(token.antCls, "-table"), {
    width: "100%",
    overflowX: "auto",
    "&-thead > tr,&-tbody > tr": {
      "> th,> td": {
        whiteSpace: "pre",
        ">span": {
          display: "block"
        }
      }
    }
  }))), "@media (max-width: 575px)", _defineProperty({}, "".concat(token.componentCls, "-toolbar"), {
    flexDirection: "column",
    alignItems: "flex-start",
    justifyContent: "flex-start",
    height: "auto",
    marginBlockEnd: "16px",
    marginInlineStart: "16px",
    paddingBlock: 8,
    paddingInline: 8,
    paddingBlockStart: "16px",
    lineHeight: "normal",
    "&-title": {
      marginBlockEnd: 16
    },
    "&-option": {
      display: "flex",
      justifyContent: "space-between",
      width: "100%"
    },
    "&-default-option": {
      display: "flex",
      flex: "1",
      alignItems: "center",
      justifyContent: "flex-end"
    }
  }));
};
function useStyle14(prefixCls) {
  return useStyle("ProTable", function(token) {
    var proListToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProListStyle3(proListToken)];
  });
}

// node_modules/@ant-design/pro-table/es/useFetchData.js
var import_react128 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());
var _excluded76 = ["data", "success", "total"];
var mergeOptionAndPageInfo = function mergeOptionAndPageInfo2(_ref) {
  var pageInfo = _ref.pageInfo;
  if (pageInfo) {
    var current = pageInfo.current, defaultCurrent = pageInfo.defaultCurrent, pageSize = pageInfo.pageSize, defaultPageSize = pageInfo.defaultPageSize;
    return {
      current: current || defaultCurrent || 1,
      total: 0,
      pageSize: pageSize || defaultPageSize || 20
    };
  }
  return {
    current: 1,
    total: 0,
    pageSize: 20
  };
};
var useFetchData2 = function useFetchData3(getData, defaultData2, options) {
  var _options$loading;
  var umountRef = (0, import_react128.useRef)(false);
  var abortRef = (0, import_react128.useRef)(null);
  var _ref2 = options || {}, onLoad = _ref2.onLoad, manual = _ref2.manual, polling = _ref2.polling, onRequestError = _ref2.onRequestError, _ref2$debounceTime = _ref2.debounceTime, debounceTime = _ref2$debounceTime === void 0 ? 20 : _ref2$debounceTime, _ref2$effects = _ref2.effects, effects = _ref2$effects === void 0 ? [] : _ref2$effects;
  var manualRequestRef = (0, import_react128.useRef)(manual);
  var pollingSetTimeRef = (0, import_react128.useRef)();
  var _useMountMergeState = useMergedState(defaultData2, {
    value: options === null || options === void 0 ? void 0 : options.dataSource,
    onChange: options === null || options === void 0 ? void 0 : options.onDataSourceChange
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), tableDataList = _useMountMergeState2[0], setTableDataList = _useMountMergeState2[1];
  var _useMountMergeState3 = useMergedState(false, {
    value: _typeof(options === null || options === void 0 ? void 0 : options.loading) === "object" ? options === null || options === void 0 || (_options$loading = options.loading) === null || _options$loading === void 0 ? void 0 : _options$loading.spinning : options === null || options === void 0 ? void 0 : options.loading,
    onChange: options === null || options === void 0 ? void 0 : options.onLoadingChange
  }), _useMountMergeState4 = _slicedToArray(_useMountMergeState3, 2), tableLoading = _useMountMergeState4[0], setTableLoading = _useMountMergeState4[1];
  var _useMountMergeState5 = useMergedState(function() {
    return mergeOptionAndPageInfo(options);
  }, {
    onChange: options === null || options === void 0 ? void 0 : options.onPageInfoChange
  }), _useMountMergeState6 = _slicedToArray(_useMountMergeState5, 2), pageInfo = _useMountMergeState6[0], setPageInfoState = _useMountMergeState6[1];
  var _setPageInfo = useRefFunction(function(changePageInfo) {
    if (changePageInfo.current !== pageInfo.current || changePageInfo.pageSize !== pageInfo.pageSize || changePageInfo.total !== pageInfo.total) {
      setPageInfoState(changePageInfo);
    }
  });
  var _useMountMergeState7 = useMergedState(false), _useMountMergeState8 = _slicedToArray(_useMountMergeState7, 2), pollingLoading = _useMountMergeState8[0], setPollingLoading = _useMountMergeState8[1];
  var setDataAndLoading = function setDataAndLoading2(newData, dataTotal) {
    (0, import_react_dom3.unstable_batchedUpdates)(function() {
      setTableDataList(newData);
      if ((pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.total) !== dataTotal) {
        _setPageInfo(_objectSpread2(_objectSpread2({}, pageInfo), {}, {
          total: dataTotal || newData.length
        }));
      }
    });
  };
  var prePage = usePrevious(pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current);
  var prePageSize = usePrevious(pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize);
  var prePolling = usePrevious(polling);
  var requestFinally = useRefFunction(function() {
    (0, import_react_dom3.unstable_batchedUpdates)(function() {
      setTableLoading(false);
      setPollingLoading(false);
    });
  });
  var fetchList = function() {
    var _ref3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(isPolling) {
      var _ref4, pageSize, current, pageParams, _ref5, _ref5$data, data, success2, _ref5$total, total, rest, responseData;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!manualRequestRef.current) {
              _context.next = 3;
              break;
            }
            manualRequestRef.current = false;
            return _context.abrupt("return");
          case 3:
            if (!isPolling) {
              setTableLoading(true);
            } else {
              setPollingLoading(true);
            }
            _ref4 = pageInfo || {}, pageSize = _ref4.pageSize, current = _ref4.current;
            _context.prev = 5;
            pageParams = (options === null || options === void 0 ? void 0 : options.pageInfo) !== false ? {
              current,
              pageSize
            } : void 0;
            _context.next = 9;
            return getData === null || getData === void 0 ? void 0 : getData(pageParams);
          case 9:
            _context.t0 = _context.sent;
            if (_context.t0) {
              _context.next = 12;
              break;
            }
            _context.t0 = {};
          case 12:
            _ref5 = _context.t0;
            _ref5$data = _ref5.data;
            data = _ref5$data === void 0 ? [] : _ref5$data;
            success2 = _ref5.success;
            _ref5$total = _ref5.total;
            total = _ref5$total === void 0 ? 0 : _ref5$total;
            rest = _objectWithoutProperties(_ref5, _excluded76);
            if (!(success2 === false)) {
              _context.next = 21;
              break;
            }
            return _context.abrupt("return", []);
          case 21:
            responseData = postDataPipeline(data, [options.postData].filter(function(item) {
              return item;
            }));
            setDataAndLoading(responseData, total);
            onLoad === null || onLoad === void 0 || onLoad(responseData, rest);
            return _context.abrupt("return", responseData);
          case 27:
            _context.prev = 27;
            _context.t1 = _context["catch"](5);
            if (!(onRequestError === void 0)) {
              _context.next = 31;
              break;
            }
            throw new Error(_context.t1);
          case 31:
            if (tableDataList === void 0) setTableDataList([]);
            onRequestError(_context.t1);
          case 33:
            _context.prev = 33;
            requestFinally();
            return _context.finish(33);
          case 36:
            return _context.abrupt("return", []);
          case 37:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[5, 27, 33, 36]]);
    }));
    return function fetchList2(_x) {
      return _ref3.apply(this, arguments);
    };
  }();
  var fetchListDebounce = useDebounceFn(function() {
    var _ref6 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(isPolling) {
      var abort, msg, needPolling;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            if (pollingSetTimeRef.current) {
              clearTimeout(pollingSetTimeRef.current);
            }
            if (getData) {
              _context2.next = 3;
              break;
            }
            return _context2.abrupt("return");
          case 3:
            abort = new AbortController();
            abortRef.current = abort;
            _context2.prev = 5;
            _context2.next = 8;
            return Promise.race([fetchList(isPolling), new Promise(function(_, reject) {
              var _abortRef$current, _abortRef$current$add;
              (_abortRef$current = abortRef.current) === null || _abortRef$current === void 0 || (_abortRef$current = _abortRef$current.signal) === null || _abortRef$current === void 0 || (_abortRef$current$add = _abortRef$current.addEventListener) === null || _abortRef$current$add === void 0 || _abortRef$current$add.call(_abortRef$current, "abort", function() {
                reject("aborted");
                fetchListDebounce.cancel();
                requestFinally();
              });
            })]);
          case 8:
            msg = _context2.sent;
            if (!abort.signal.aborted) {
              _context2.next = 11;
              break;
            }
            return _context2.abrupt("return");
          case 11:
            needPolling = runFunction(polling, msg);
            if (needPolling && !umountRef.current) {
              pollingSetTimeRef.current = setTimeout(function() {
                fetchListDebounce.run(needPolling);
              }, Math.max(needPolling, 2e3));
            }
            return _context2.abrupt("return", msg);
          case 16:
            _context2.prev = 16;
            _context2.t0 = _context2["catch"](5);
            if (!(_context2.t0 === "aborted")) {
              _context2.next = 20;
              break;
            }
            return _context2.abrupt("return");
          case 20:
            throw _context2.t0;
          case 21:
          case "end":
            return _context2.stop();
        }
      }, _callee2, null, [[5, 16]]);
    }));
    return function(_x2) {
      return _ref6.apply(this, arguments);
    };
  }(), debounceTime || 30);
  var abortFetch = function abortFetch2() {
    var _abortRef$current2;
    (_abortRef$current2 = abortRef.current) === null || _abortRef$current2 === void 0 || _abortRef$current2.abort();
    fetchListDebounce.cancel();
    requestFinally();
  };
  (0, import_react128.useEffect)(function() {
    if (!polling) {
      clearTimeout(pollingSetTimeRef.current);
    }
    if (!prePolling && polling) {
      fetchListDebounce.run(true);
    }
    return function() {
      clearTimeout(pollingSetTimeRef.current);
    };
  }, [polling]);
  (0, import_react128.useEffect)(function() {
    umountRef.current = false;
    return function() {
      umountRef.current = true;
    };
  }, []);
  (0, import_react128.useEffect)(function() {
    var _ref7 = pageInfo || {}, current = _ref7.current, pageSize = _ref7.pageSize;
    if ((!prePage || prePage === current) && (!prePageSize || prePageSize === pageSize)) {
      return;
    }
    if (options.pageInfo && tableDataList && (tableDataList === null || tableDataList === void 0 ? void 0 : tableDataList.length) > pageSize || 0) {
      return;
    }
    if (current !== void 0 && tableDataList && tableDataList.length <= pageSize) {
      abortFetch();
      fetchListDebounce.run(false);
    }
  }, [pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current]);
  (0, import_react128.useEffect)(function() {
    if (!prePageSize) {
      return;
    }
    abortFetch();
    fetchListDebounce.run(false);
  }, [pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize]);
  useDeepCompareEffect(function() {
    abortFetch();
    fetchListDebounce.run(false);
    if (!manual) {
      manualRequestRef.current = false;
    }
    return function() {
      abortFetch();
    };
  }, [].concat(_toConsumableArray(effects), [manual]));
  return {
    /**
     * 表格的数据列表。
     * @type {DataSource[]}
     */
    dataSource: tableDataList,
    /**
     * 用于设置表格数据列表的 setter 函数。
     * @type {function}
     * @param {DataSource[]} list - 更新后的表格数据列表。
     */
    setDataSource: setTableDataList,
    /**
     * 表示表格是否正在加载数据的标志。
     * @type {boolean}
     */
    loading: _typeof(options === null || options === void 0 ? void 0 : options.loading) === "object" ? _objectSpread2(_objectSpread2({}, options === null || options === void 0 ? void 0 : options.loading), {}, {
      spinning: tableLoading
    }) : tableLoading,
    /**
     * 重新加载表格数据的函数。
     * @type {function}
     * @async
     * @returns {Promise<boolean>} - 数据重新加载完成后解决为 true 的 Promise。
     */
    reload: function() {
      var _reload = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              abortFetch();
              return _context3.abrupt("return", fetchListDebounce.run(false));
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function reload() {
        return _reload.apply(this, arguments);
      }
      return reload;
    }(),
    /**
     * 当前的分页信息。
     * @type {Object}
     * @prop {number} current - 当前页码。
     * @prop {number} total - 总数据数量。
     * @prop {number} pageSize - 每页数据数量。
     */
    pageInfo,
    /**
     * 表示表格是否正在进行轮询请求的标志。
     * @type {boolean}
     */
    pollingLoading,
    /**
     * 重置分页信息为其初始值的函数。
     * @type {function}
     * @async
     * @returns {Promise<void>} - 重置完成后解决的 Promise。
     */
    reset: function() {
      var _reset = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4() {
        var _ref8, optionPageInfo, _ref9, _ref9$defaultCurrent, defaultCurrent, _ref9$defaultPageSize, defaultPageSize, initialPageInfo;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _ref8 = options || {}, optionPageInfo = _ref8.pageInfo;
              _ref9 = optionPageInfo || {}, _ref9$defaultCurrent = _ref9.defaultCurrent, defaultCurrent = _ref9$defaultCurrent === void 0 ? 1 : _ref9$defaultCurrent, _ref9$defaultPageSize = _ref9.defaultPageSize, defaultPageSize = _ref9$defaultPageSize === void 0 ? 20 : _ref9$defaultPageSize;
              initialPageInfo = {
                current: defaultCurrent,
                total: 0,
                pageSize: defaultPageSize
              };
              _setPageInfo(initialPageInfo);
            case 4:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      function reset() {
        return _reset.apply(this, arguments);
      }
      return reset;
    }(),
    /**
     * 更新分页信息的函数。
     * @type {function}
     * @async
     * @param {Object} info - 新的分页信息。
     * @prop {number} [current] - 新的当前页码。
     * @prop {number} [total] - 新的总数据数量。
     * @prop {number} [pageSize] - 新的每页数据数量。
     * @returns {Promise<void>} - 更新完成后解决的 Promise。
     */
    setPageInfo: function() {
      var _setPageInfo2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(info) {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _setPageInfo(_objectSpread2(_objectSpread2({}, pageInfo), info));
            case 1:
            case "end":
              return _context5.stop();
          }
        }, _callee5);
      }));
      function setPageInfo(_x3) {
        return _setPageInfo2.apply(this, arguments);
      }
      return setPageInfo;
    }()
  };
};
var useFetchData_default = useFetchData2;

// node_modules/@ant-design/pro-table/es/utils/columnSort.js
var columnSort = function columnSort2(columnsMap) {
  return function(a, b) {
    var _columnsMap$aKey, _columnsMap$bKey;
    var aFixed = a.fixed, aIndex = a.index;
    var bFixed = b.fixed, bIndex = b.index;
    if (aFixed === "left" && bFixed !== "left" || bFixed === "right" && aFixed !== "right") {
      return -2;
    }
    if (bFixed === "left" && aFixed !== "left" || aFixed === "right" && bFixed !== "right") {
      return 2;
    }
    var aKey = a.key || "".concat(aIndex);
    var bKey = b.key || "".concat(bIndex);
    if ((_columnsMap$aKey = columnsMap[aKey]) !== null && _columnsMap$aKey !== void 0 && _columnsMap$aKey.order || (_columnsMap$bKey = columnsMap[bKey]) !== null && _columnsMap$bKey !== void 0 && _columnsMap$bKey.order) {
      var _columnsMap$aKey2, _columnsMap$bKey2;
      return (((_columnsMap$aKey2 = columnsMap[aKey]) === null || _columnsMap$aKey2 === void 0 ? void 0 : _columnsMap$aKey2.order) || 0) - (((_columnsMap$bKey2 = columnsMap[bKey]) === null || _columnsMap$bKey2 === void 0 ? void 0 : _columnsMap$bKey2.order) || 0);
    }
    return (a.index || 0) - (b.index || 0);
  };
};

// node_modules/@ant-design/pro-table/es/utils/columnRender.js
var import_react130 = __toESM(require_react());

// node_modules/@ant-design/pro-table/es/utils/cellRenderToFromItem.js
var import_react129 = __toESM(require_react());
var import_jsx_runtime162 = __toESM(require_jsx_runtime());
var import_jsx_runtime163 = __toESM(require_jsx_runtime());
var _excluded77 = ["children"];
var SHOW_EMPTY_TEXT_LIST = ["", null, void 0];
var spellNamePath = function spellNamePath2() {
  for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {
    rest[_key] = arguments[_key];
  }
  return rest.filter(function(index) {
    return index !== void 0;
  }).map(function(item) {
    if (typeof item === "number") {
      return item.toString();
    }
    return item;
  }).flat(1);
};
var CellRenderFromItem = function CellRenderFromItem2(props) {
  var formContext = (0, import_react129.useContext)(FieldContext);
  var columnProps = props.columnProps, prefixName = props.prefixName, text = props.text, counter = props.counter, rowData = props.rowData, index = props.index, recordKey = props.recordKey, subName = props.subName, proFieldProps = props.proFieldProps, editableUtils = props.editableUtils;
  var editableForm = ProForm.useFormInstance();
  var key2 = recordKey || index;
  var realIndex = (0, import_react129.useMemo)(function() {
    var _editableUtils$getRea, _editableUtils$getRea2;
    return (_editableUtils$getRea = editableUtils === null || editableUtils === void 0 || (_editableUtils$getRea2 = editableUtils.getRealIndex) === null || _editableUtils$getRea2 === void 0 ? void 0 : _editableUtils$getRea2.call(editableUtils, rowData)) !== null && _editableUtils$getRea !== void 0 ? _editableUtils$getRea : index;
  }, [editableUtils, index, rowData]);
  var _useState = (0, import_react129.useState)(function() {
    var _ref, _columnProps$key;
    return spellNamePath(prefixName, prefixName ? subName : [], prefixName ? realIndex : key2, (_ref = (_columnProps$key = columnProps === null || columnProps === void 0 ? void 0 : columnProps.key) !== null && _columnProps$key !== void 0 ? _columnProps$key : columnProps === null || columnProps === void 0 ? void 0 : columnProps.dataIndex) !== null && _ref !== void 0 ? _ref : index);
  }), _useState2 = _slicedToArray(_useState, 2), formItemName = _useState2[0], setName = _useState2[1];
  var rowName = (0, import_react129.useMemo)(function() {
    return formItemName.slice(0, -1);
  }, [formItemName]);
  (0, import_react129.useEffect)(function() {
    var _ref2, _columnProps$key2;
    var value = spellNamePath(prefixName, prefixName ? subName : [], prefixName ? realIndex : key2, (_ref2 = (_columnProps$key2 = columnProps === null || columnProps === void 0 ? void 0 : columnProps.key) !== null && _columnProps$key2 !== void 0 ? _columnProps$key2 : columnProps === null || columnProps === void 0 ? void 0 : columnProps.dataIndex) !== null && _ref2 !== void 0 ? _ref2 : index);
    if (value.join("-") !== formItemName.join("-")) setName(value);
  }, [columnProps === null || columnProps === void 0 ? void 0 : columnProps.dataIndex, columnProps === null || columnProps === void 0 ? void 0 : columnProps.key, index, recordKey, prefixName, key2, subName, formItemName, realIndex]);
  var needProps = (0, import_react129.useMemo)(function() {
    return [editableForm, _objectSpread2(_objectSpread2({}, columnProps), {}, {
      rowKey: rowName,
      rowIndex: index,
      isEditable: true
    })];
  }, [columnProps, editableForm, index, rowName]);
  var InlineItem = (0, import_react129.useCallback)(
    function(_ref3) {
      var children = _ref3.children, restProps = _objectWithoutProperties(_ref3, _excluded77);
      return (0, import_jsx_runtime162.jsx)(InlineErrorFormItem, _objectSpread2(_objectSpread2({
        popoverProps: {
          getPopupContainer: formContext.getPopupContainer || function() {
            return counter.rootDomRef.current || document.body;
          }
        },
        errorType: "popover",
        name: formItemName
      }, restProps), {}, {
        children
      }), key2);
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [key2, formItemName]
  );
  var generateFormItem = (0, import_react129.useCallback)(function() {
    var _ref4, _ref5;
    var formItemProps = _objectSpread2({}, getFieldPropsOrFormItemProps.apply(void 0, [columnProps === null || columnProps === void 0 ? void 0 : columnProps.formItemProps].concat(_toConsumableArray(needProps))));
    formItemProps.messageVariables = _objectSpread2({
      label: (columnProps === null || columnProps === void 0 ? void 0 : columnProps.title) || "此项",
      type: (columnProps === null || columnProps === void 0 ? void 0 : columnProps.valueType) || "文本"
    }, formItemProps === null || formItemProps === void 0 ? void 0 : formItemProps.messageVariables);
    formItemProps.initialValue = (_ref4 = (_ref5 = prefixName ? null : text) !== null && _ref5 !== void 0 ? _ref5 : formItemProps === null || formItemProps === void 0 ? void 0 : formItemProps.initialValue) !== null && _ref4 !== void 0 ? _ref4 : columnProps === null || columnProps === void 0 ? void 0 : columnProps.initialValue;
    var fieldDom = (0, import_jsx_runtime162.jsx)(Field_default, _objectSpread2({
      cacheForSwr: true,
      name: formItemName,
      proFormFieldKey: key2,
      ignoreFormItem: true,
      fieldProps: getFieldPropsOrFormItemProps.apply(void 0, [columnProps === null || columnProps === void 0 ? void 0 : columnProps.fieldProps].concat(_toConsumableArray(needProps)))
    }, proFieldProps), formItemName.join("-"));
    if (columnProps !== null && columnProps !== void 0 && columnProps.renderFormItem) {
      fieldDom = columnProps.renderFormItem(_objectSpread2(_objectSpread2({}, columnProps), {}, {
        index,
        isEditable: true,
        type: "table"
      }), {
        defaultRender: function defaultRender() {
          return (0, import_jsx_runtime162.jsx)(import_jsx_runtime163.Fragment, {
            children: fieldDom
          });
        },
        type: "form",
        recordKey,
        record: _objectSpread2(_objectSpread2({}, rowData), editableForm === null || editableForm === void 0 ? void 0 : editableForm.getFieldValue([key2])),
        isEditable: true
      }, editableForm, props.editableUtils);
      if (columnProps.ignoreFormItem) return (0, import_jsx_runtime162.jsx)(import_jsx_runtime163.Fragment, {
        children: fieldDom
      });
    }
    return (0, import_jsx_runtime162.jsx)(InlineItem, _objectSpread2(_objectSpread2({}, formItemProps), {}, {
      children: fieldDom
    }), formItemName.join("-"));
  }, [columnProps, needProps, prefixName, text, key2, formItemName, proFieldProps, InlineItem, index, recordKey, rowData, editableForm, props.editableUtils]);
  if (formItemName.length === 0) return null;
  if (typeof (columnProps === null || columnProps === void 0 ? void 0 : columnProps.renderFormItem) === "function" || typeof (columnProps === null || columnProps === void 0 ? void 0 : columnProps.fieldProps) === "function" || typeof (columnProps === null || columnProps === void 0 ? void 0 : columnProps.formItemProps) === "function") {
    return (0, import_jsx_runtime162.jsx)(form_default.Item, {
      noStyle: true,
      shouldUpdate: function shouldUpdate(pre, next) {
        if (pre === next) return false;
        var shouldName = [rowName].flat(1);
        try {
          return JSON.stringify(get(pre, shouldName)) !== JSON.stringify(get(next, shouldName));
        } catch (error2) {
          return true;
        }
      },
      children: function children() {
        return generateFormItem();
      }
    });
  }
  return generateFormItem();
};
function cellRenderToFromItem(config) {
  var _columnProps$dataInde, _config$recordKey;
  var text = config.text, valueType15 = config.valueType, rowData = config.rowData, columnProps = config.columnProps, index = config.index;
  if ((!valueType15 || ["textarea", "text"].includes(valueType15.toString())) && // valueEnum 存在说明是个select
  !(columnProps !== null && columnProps !== void 0 && columnProps.valueEnum) && config.mode === "read") {
    return SHOW_EMPTY_TEXT_LIST.includes(text) ? config.columnEmptyText : text;
  }
  if (typeof valueType15 === "function" && rowData) {
    return cellRenderToFromItem(_objectSpread2(_objectSpread2({}, config), {}, {
      valueType: valueType15(rowData, config.type) || "text"
    }));
  }
  var columnKey = (columnProps === null || columnProps === void 0 ? void 0 : columnProps.key) || (columnProps === null || columnProps === void 0 || (_columnProps$dataInde = columnProps.dataIndex) === null || _columnProps$dataInde === void 0 ? void 0 : _columnProps$dataInde.toString());
  var dependencies = columnProps !== null && columnProps !== void 0 && columnProps.dependencies ? [config.prefixName, config.prefixName ? index === null || index === void 0 ? void 0 : index.toString() : (_config$recordKey = config.recordKey) === null || _config$recordKey === void 0 ? void 0 : _config$recordKey.toString(), columnProps === null || columnProps === void 0 ? void 0 : columnProps.dependencies].filter(Boolean).flat(1) : [];
  var proFieldProps = {
    valueEnum: runFunction(columnProps === null || columnProps === void 0 ? void 0 : columnProps.valueEnum, rowData),
    request: columnProps === null || columnProps === void 0 ? void 0 : columnProps.request,
    dependencies: columnProps !== null && columnProps !== void 0 && columnProps.dependencies ? [dependencies] : void 0,
    originDependencies: columnProps !== null && columnProps !== void 0 && columnProps.dependencies ? [columnProps === null || columnProps === void 0 ? void 0 : columnProps.dependencies] : void 0,
    params: runFunction(columnProps === null || columnProps === void 0 ? void 0 : columnProps.params, rowData, columnProps),
    readonly: columnProps === null || columnProps === void 0 ? void 0 : columnProps.readonly,
    text: valueType15 === "index" || valueType15 === "indexBorder" ? config.index : text,
    mode: config.mode,
    renderFormItem: void 0,
    valueType: valueType15,
    // @ts-ignore
    record: rowData,
    proFieldProps: {
      emptyText: config.columnEmptyText,
      proFieldKey: columnKey ? "table-field-".concat(columnKey) : void 0
    }
  };
  if (config.mode !== "edit") {
    return (0, import_jsx_runtime162.jsx)(Field_default, _objectSpread2({
      mode: "read",
      ignoreFormItem: true,
      fieldProps: getFieldPropsOrFormItemProps(columnProps === null || columnProps === void 0 ? void 0 : columnProps.fieldProps, null, columnProps)
    }, proFieldProps));
  }
  return (0, import_jsx_runtime162.jsx)(CellRenderFromItem, _objectSpread2(_objectSpread2({}, config), {}, {
    proFieldProps
  }), config.recordKey);
}
var cellRenderToFromItem_default = cellRenderToFromItem;

// node_modules/@ant-design/pro-table/es/utils/columnRender.js
var import_jsx_runtime164 = __toESM(require_jsx_runtime());
var renderColumnsTitle = function renderColumnsTitle2(item) {
  var _item$ellipsis;
  var title = item.title;
  var ellipsis = typeof (item === null || item === void 0 ? void 0 : item.ellipsis) === "boolean" ? item === null || item === void 0 ? void 0 : item.ellipsis : item === null || item === void 0 || (_item$ellipsis = item.ellipsis) === null || _item$ellipsis === void 0 ? void 0 : _item$ellipsis.showTitle;
  if (title && typeof title === "function") {
    return title(
      item,
      "table",
      //@ts-expect-error
      (0, import_jsx_runtime164.jsx)(LabelIconTip, {
        label: null,
        tooltip: item.tooltip || item.tip
      })
    );
  }
  return (0, import_jsx_runtime164.jsx)(LabelIconTip, {
    label: title,
    tooltip: item.tooltip || item.tip,
    ellipsis
  });
};
function isNotEditableCell(text, rowData, index, editable) {
  if (typeof editable === "boolean") {
    return editable === false;
  }
  return (editable === null || editable === void 0 ? void 0 : editable(text, rowData, index)) === false;
}
var defaultOnFilter = function defaultOnFilter2(value, record, dataIndex) {
  var recordElement = Array.isArray(dataIndex) ? get(record, dataIndex) : record[dataIndex];
  var itemValue = String(recordElement);
  return String(itemValue) === String(value);
};
function columnRender(_ref) {
  var columnProps = _ref.columnProps, text = _ref.text, rowData = _ref.rowData, index = _ref.index, columnEmptyText = _ref.columnEmptyText, counter = _ref.counter, type = _ref.type, subName = _ref.subName, marginSM = _ref.marginSM, editableUtils = _ref.editableUtils;
  var action = counter.action, prefixName = counter.prefixName;
  var _editableUtils$isEdit = editableUtils.isEditable(_objectSpread2(_objectSpread2({}, rowData), {}, {
    index
  })), isEditable = _editableUtils$isEdit.isEditable, recordKey = _editableUtils$isEdit.recordKey;
  var _columnProps$renderTe = columnProps.renderText, renderText = _columnProps$renderTe === void 0 ? function(val) {
    return val;
  } : _columnProps$renderTe;
  var renderTextStr = renderText(text, rowData, index, action);
  var mode = isEditable && !isNotEditableCell(text, rowData, index, columnProps === null || columnProps === void 0 ? void 0 : columnProps.editable) ? "edit" : "read";
  var textDom = cellRenderToFromItem_default({
    text: renderTextStr,
    valueType: columnProps.valueType || "text",
    index,
    rowData,
    subName,
    columnProps: _objectSpread2(_objectSpread2({}, columnProps), {}, {
      // 为了兼容性，原来写了个错别字
      // @ts-ignore
      entry: rowData,
      entity: rowData
    }),
    counter,
    columnEmptyText,
    type,
    recordKey,
    mode,
    prefixName,
    editableUtils
  });
  var dom = mode === "edit" ? textDom : genCopyable(textDom, columnProps, renderTextStr);
  if (mode === "edit") {
    if (columnProps.valueType === "option") {
      return (0, import_jsx_runtime164.jsx)("div", {
        style: {
          display: "flex",
          alignItems: "center",
          gap: marginSM,
          justifyContent: columnProps.align === "center" ? "center" : "flex-start"
        },
        children: editableUtils.actionRender(_objectSpread2(_objectSpread2({}, rowData), {}, {
          index: columnProps.index || index
        }))
      });
    }
    return dom;
  }
  if (!columnProps.render) {
    var isReactRenderNode = import_react130.default.isValidElement(dom) || ["string", "number"].includes(_typeof(dom));
    return !isNil(dom) && isReactRenderNode ? dom : null;
  }
  var renderDom = columnProps.render(dom, rowData, index, _objectSpread2(_objectSpread2({}, action), editableUtils), _objectSpread2(_objectSpread2({}, columnProps), {}, {
    isEditable,
    type: "table"
  }));
  if (isMergeCell(renderDom)) {
    return renderDom;
  }
  if (renderDom && columnProps.valueType === "option" && Array.isArray(renderDom)) {
    return (0, import_jsx_runtime164.jsx)("div", {
      style: {
        display: "flex",
        alignItems: "center",
        justifyContent: "flex-start",
        gap: 8
      },
      children: renderDom
    });
  }
  return renderDom;
}

// node_modules/@ant-design/pro-table/es/utils/genProColumnToColumn.js
function genProColumnToColumn(params, parents) {
  var _columns$map;
  var columns = params.columns, counter = params.counter, columnEmptyText = params.columnEmptyText, type = params.type, editableUtils = params.editableUtils, marginSM = params.marginSM, _params$rowKey = params.rowKey, rowKey = _params$rowKey === void 0 ? "id" : _params$rowKey, _params$childrenColum = params.childrenColumnName, childrenColumnName = _params$childrenColum === void 0 ? "children" : _params$childrenColum;
  var subNameRecord = /* @__PURE__ */ new Map();
  return columns === null || columns === void 0 || (_columns$map = columns.map(function(columnProps, columnsIndex) {
    if (columnProps === table_default.EXPAND_COLUMN) return columnProps;
    if (columnProps === table_default.SELECTION_COLUMN) return columnProps;
    var _ref = columnProps, key2 = _ref.key, dataIndex = _ref.dataIndex, valueEnum = _ref.valueEnum, _ref$valueType = _ref.valueType, valueType15 = _ref$valueType === void 0 ? "text" : _ref$valueType, children = _ref.children, onFilter = _ref.onFilter, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? [] : _ref$filters;
    var columnKey = genColumnKey(key2 || (dataIndex === null || dataIndex === void 0 ? void 0 : dataIndex.toString()), [parents === null || parents === void 0 ? void 0 : parents.key, columnsIndex].filter(Boolean).join("-"));
    var noNeedPro = !valueEnum && !valueType15 && !children;
    if (noNeedPro) {
      return _objectSpread2({
        index: columnsIndex
      }, columnProps);
    }
    var isExtraColumns = columnProps === table_default.EXPAND_COLUMN || columnProps === table_default.SELECTION_COLUMN;
    if (isExtraColumns) {
      return {
        index: columnsIndex,
        isExtraColumns: true,
        hideInSearch: true,
        hideInTable: false,
        hideInForm: true,
        hideInSetting: true,
        extraColumn: columnProps
      };
    }
    var config = counter.columnsMap[columnKey] || {
      fixed: columnProps.fixed
    };
    var genOnFilter = function genOnFilter2() {
      if (onFilter === true) {
        return function(value, row) {
          return defaultOnFilter(value, row, dataIndex);
        };
      }
      return omitBoolean(onFilter);
    };
    var keyName = rowKey;
    var tempColumns = _objectSpread2(_objectSpread2({
      index: columnsIndex,
      key: columnKey
    }, columnProps), {}, {
      title: renderColumnsTitle(columnProps),
      valueEnum,
      filters: filters === true ? proFieldParsingValueEnumToArray(runFunction(valueEnum, void 0)).filter(function(valueItem) {
        return valueItem && valueItem.value !== "all";
      }) : filters,
      onFilter: genOnFilter(),
      fixed: config.fixed,
      width: columnProps.width || (columnProps.fixed ? 200 : void 0),
      children: columnProps.children ? genProColumnToColumn(_objectSpread2(_objectSpread2({}, params), {}, {
        columns: (columnProps === null || columnProps === void 0 ? void 0 : columnProps.children) || []
      }), _objectSpread2(_objectSpread2({}, columnProps), {}, {
        key: columnKey
      })) : void 0,
      render: function render3(text, rowData, index) {
        if (typeof rowKey === "function") {
          keyName = rowKey(rowData, index);
        }
        var uniqueKey;
        if (_typeof(rowData) === "object" && rowData !== null && Reflect.has(rowData, keyName)) {
          var _childrenColumnName;
          uniqueKey = rowData[keyName];
          var parentInfo = subNameRecord.get(uniqueKey) || [];
          (_childrenColumnName = rowData[childrenColumnName]) === null || _childrenColumnName === void 0 || _childrenColumnName.forEach(function(item) {
            var itemUniqueKey = item[keyName];
            if (!subNameRecord.has(itemUniqueKey)) {
              subNameRecord.set(itemUniqueKey, parentInfo.concat([index, childrenColumnName]));
            }
          });
        }
        var renderProps = {
          columnProps,
          text,
          rowData,
          index,
          columnEmptyText,
          counter,
          type,
          marginSM,
          subName: subNameRecord.get(uniqueKey),
          editableUtils
        };
        return columnRender(renderProps);
      }
    });
    return omitUndefinedAndEmptyArr(tempColumns);
  })) === null || _columns$map === void 0 ? void 0 : _columns$map.filter(function(item) {
    return !item.hideInTable;
  });
}

// node_modules/@ant-design/pro-table/es/Table.js
var import_jsx_runtime165 = __toESM(require_jsx_runtime());
var import_react132 = __toESM(require_react());
var import_jsx_runtime166 = __toESM(require_jsx_runtime());
var import_jsx_runtime167 = __toESM(require_jsx_runtime());
var _excluded78 = ["rowKey", "tableClassName", "defaultClassName", "action", "tableColumn", "type", "pagination", "rowSelection", "size", "defaultSize", "tableStyle", "toolbarDom", "hideToolbar", "searchNode", "style", "cardProps", "alertDom", "name", "onSortChange", "onFilterChange", "options", "isLightFilter", "className", "cardBordered", "editableUtils", "getRowKey"];
var _excluded218 = ["cardBordered", "request", "className", "params", "defaultData", "headerTitle", "postData", "ghost", "pagination", "actionRef", "columns", "toolBarRender", "optionsRender", "onLoad", "onRequestError", "style", "cardProps", "tableStyle", "tableClassName", "columnsStateMap", "onColumnsStateChange", "options", "search", "name", "onLoadingChange", "rowSelection", "beforeSearchSubmit", "tableAlertRender", "defaultClassName", "formRef", "type", "columnEmptyText", "toolbar", "rowKey", "manualRequest", "polling", "tooltip", "revalidateOnFocus", "searchFormRender"];
function TableRender(props) {
  var rowKey = props.rowKey, tableClassName = props.tableClassName, defaultClassName = props.defaultClassName, action = props.action, tableColumns = props.tableColumn, type = props.type, pagination = props.pagination, rowSelection = props.rowSelection, size = props.size, defaultSize = props.defaultSize, tableStyle = props.tableStyle, toolbarDom = props.toolbarDom, hideToolbar = props.hideToolbar, searchNode = props.searchNode, style = props.style, propsCardProps = props.cardProps, alertDom = props.alertDom, name = props.name, onSortChange = props.onSortChange, onFilterChange = props.onFilterChange, options = props.options, isLightFilter = props.isLightFilter, className = props.className, cardBordered = props.cardBordered, editableUtils = props.editableUtils, getRowKey = props.getRowKey, rest = _objectWithoutProperties(props, _excluded78);
  var counter = (0, import_react131.useContext)(TableContext);
  var columns = (0, import_react131.useMemo)(function() {
    var loopFilter = function loopFilter2(column) {
      return column.map(function(item) {
        var columnKey = genColumnKey(item.key, item.index);
        var config = counter.columnsMap[columnKey];
        if (config && config.show === false) {
          return false;
        }
        if (item.children) {
          return _objectSpread2(_objectSpread2({}, item), {}, {
            children: loopFilter2(item.children)
          });
        }
        return item;
      }).filter(Boolean);
    };
    return loopFilter(tableColumns);
  }, [counter.columnsMap, tableColumns]);
  var useLocaleFilter = (0, import_react131.useMemo)(function() {
    var _columns = [];
    var loopColumns = function loopColumns2(data) {
      for (var i = 0; i < data.length; i++) {
        var _curItem = data[i];
        if (_curItem.children) {
          loopColumns2(_curItem.children);
        } else {
          _columns.push(_curItem);
        }
      }
    };
    loopColumns(columns);
    return _columns === null || _columns === void 0 ? void 0 : _columns.every(function(column) {
      return !!column.filters && !!column.onFilter || column.filters === void 0 && column.onFilter === void 0;
    });
  }, [columns]);
  var editableDataSource = function editableDataSource2(dataSource) {
    var _ref = editableUtils.newLineRecord || {}, newLineOptions = _ref.options, row = _ref.defaultValue;
    var isNewLineRecordAtTop = (newLineOptions === null || newLineOptions === void 0 ? void 0 : newLineOptions.position) === "top";
    if (newLineOptions !== null && newLineOptions !== void 0 && newLineOptions.parentKey) {
      var _recordKeyToString, _props$expandable;
      var actionProps = {
        data: dataSource,
        getRowKey,
        row: _objectSpread2(_objectSpread2({}, row), {}, {
          map_row_parentKey: (_recordKeyToString = recordKeyToString(newLineOptions.parentKey)) === null || _recordKeyToString === void 0 ? void 0 : _recordKeyToString.toString()
        }),
        key: newLineOptions === null || newLineOptions === void 0 ? void 0 : newLineOptions.recordKey,
        childrenColumnName: ((_props$expandable = props.expandable) === null || _props$expandable === void 0 ? void 0 : _props$expandable.childrenColumnName) || "children"
      };
      return editableRowByKey(actionProps, isNewLineRecordAtTop ? "top" : "update");
    }
    if (isNewLineRecordAtTop) {
      return [row].concat(_toConsumableArray(action.dataSource));
    }
    if (pagination && pagination !== null && pagination !== void 0 && pagination.current && pagination !== null && pagination !== void 0 && pagination.pageSize) {
      var newDataSource = _toConsumableArray(action.dataSource);
      if ((pagination === null || pagination === void 0 ? void 0 : pagination.pageSize) > newDataSource.length) {
        newDataSource.push(row);
        return newDataSource;
      }
      newDataSource.splice((pagination === null || pagination === void 0 ? void 0 : pagination.current) * (pagination === null || pagination === void 0 ? void 0 : pagination.pageSize) - 1, 0, row);
      return newDataSource;
    }
    return [].concat(_toConsumableArray(action.dataSource), [row]);
  };
  var getTableProps = function getTableProps2() {
    return _objectSpread2(_objectSpread2({}, rest), {}, {
      size,
      rowSelection: rowSelection === false ? void 0 : rowSelection,
      className: tableClassName,
      style: tableStyle,
      columns: columns.map(function(item) {
        return item.isExtraColumns ? item.extraColumn : item;
      }),
      loading: action.loading,
      dataSource: editableUtils.newLineRecord ? editableDataSource(action.dataSource) : action.dataSource,
      pagination,
      onChange: function onChange(changePagination, filters, sorter, extra) {
        var _rest$onChange;
        (_rest$onChange = rest.onChange) === null || _rest$onChange === void 0 || _rest$onChange.call(rest, changePagination, filters, sorter, extra);
        if (!useLocaleFilter) {
          onFilterChange(omitUndefined(filters));
        }
        if (Array.isArray(sorter)) {
          var data = sorter.reduce(function(pre, value) {
            return _objectSpread2(_objectSpread2({}, pre), {}, _defineProperty({}, "".concat(value.field), value.order));
          }, {});
          onSortChange(omitUndefined(data));
        } else {
          var _sorter$column;
          var sorterOfColumn = (_sorter$column = sorter.column) === null || _sorter$column === void 0 ? void 0 : _sorter$column.sorter;
          var isSortByField = (sorterOfColumn === null || sorterOfColumn === void 0 ? void 0 : sorterOfColumn.toString()) === sorterOfColumn;
          onSortChange(omitUndefined(_defineProperty({}, "".concat(isSortByField ? sorterOfColumn : sorter.field), sorter.order)));
        }
      }
    });
  };
  var notNeedCardDom = (0, import_react131.useMemo)(function() {
    if (props.search === false && !props.headerTitle && props.toolBarRender === false) {
      return true;
    }
    return false;
  }, []);
  var baseTableDom = (0, import_jsx_runtime165.jsx)(GridContext.Provider, {
    value: {
      grid: false,
      colProps: void 0,
      rowProps: void 0
    },
    children: (0, import_jsx_runtime165.jsx)(table_default, _objectSpread2(_objectSpread2({}, getTableProps()), {}, {
      rowKey
    }))
  });
  var tableDom = props.tableViewRender ? props.tableViewRender(_objectSpread2(_objectSpread2({}, getTableProps()), {}, {
    rowSelection: rowSelection !== false ? rowSelection : void 0
  }), baseTableDom) : baseTableDom;
  var tableContentDom = (0, import_react131.useMemo)(function() {
    if (props.editable && !props.name) {
      var _props$editable, _props$editable2, _props$editable3;
      return (0, import_jsx_runtime167.jsxs)(import_jsx_runtime166.Fragment, {
        children: [toolbarDom, alertDom, (0, import_react132.createElement)(es_default6, _objectSpread2(_objectSpread2({}, (_props$editable = props.editable) === null || _props$editable === void 0 ? void 0 : _props$editable.formProps), {}, {
          formRef: (_props$editable2 = props.editable) === null || _props$editable2 === void 0 || (_props$editable2 = _props$editable2.formProps) === null || _props$editable2 === void 0 ? void 0 : _props$editable2.formRef,
          component: false,
          form: (_props$editable3 = props.editable) === null || _props$editable3 === void 0 ? void 0 : _props$editable3.form,
          onValuesChange: editableUtils.onValuesChange,
          key: "table",
          submitter: false,
          omitNil: false,
          dateFormatter: props.dateFormatter
        }), tableDom)]
      });
    }
    return (0, import_jsx_runtime167.jsxs)(import_jsx_runtime166.Fragment, {
      children: [toolbarDom, alertDom, tableDom]
    });
  }, [alertDom, props.loading, !!props.editable, tableDom, toolbarDom]);
  var cardBodyStyle = (0, import_react131.useMemo)(function() {
    if (propsCardProps === false || notNeedCardDom === true || !!props.name) return {};
    if (hideToolbar) {
      return {
        padding: 0
      };
    }
    if (toolbarDom) {
      return {
        paddingBlockStart: 0
      };
    }
    if (toolbarDom && pagination === false) {
      return {
        paddingBlockStart: 0
      };
    }
    return {
      padding: 0
    };
  }, [notNeedCardDom, pagination, props.name, propsCardProps, toolbarDom, hideToolbar]);
  var tableAreaDom = (
    // cardProps 或者 有了name 就不需要这个padding了，不然会导致不好对齐
    propsCardProps === false || notNeedCardDom === true || !!props.name ? tableContentDom : (0, import_jsx_runtime165.jsx)(es_default4, _objectSpread2(_objectSpread2({
      ghost: props.ghost,
      bordered: isBordered("table", cardBordered),
      bodyStyle: cardBodyStyle
    }, propsCardProps), {}, {
      children: tableContentDom
    }))
  );
  var renderTable = function renderTable2() {
    if (props.tableRender) {
      return props.tableRender(props, tableAreaDom, {
        toolbar: toolbarDom || void 0,
        alert: alertDom || void 0,
        table: tableDom || void 0
      });
    }
    return tableAreaDom;
  };
  var proTableDom = (0, import_jsx_runtime167.jsxs)("div", {
    className: (0, import_classnames26.default)(className, _defineProperty({}, "".concat(defaultClassName, "-polling"), action.pollingLoading)),
    style,
    ref: counter.rootDomRef,
    children: [isLightFilter ? null : searchNode, type !== "form" && props.tableExtraRender && (0, import_jsx_runtime165.jsx)("div", {
      className: (0, import_classnames26.default)(className, "".concat(defaultClassName, "-extra")),
      children: props.tableExtraRender(props, action.dataSource || [])
    }), type !== "form" && renderTable()]
  });
  if (!options || !(options !== null && options !== void 0 && options.fullScreen)) {
    return proTableDom;
  }
  return (0, import_jsx_runtime165.jsx)(config_provider_default, {
    getPopupContainer: function getPopupContainer() {
      return counter.rootDomRef.current || document.body;
    },
    children: proTableDom
  });
}
var emptyObj = {};
var ProTable = function ProTable2(props) {
  var _props$expandable2;
  var cardBordered = props.cardBordered, request = props.request, propsClassName = props.className, _props$params = props.params, params = _props$params === void 0 ? emptyObj : _props$params, defaultData2 = props.defaultData, headerTitle = props.headerTitle, postData = props.postData, ghost = props.ghost, propsPagination = props.pagination, propsActionRef = props.actionRef, _props$columns = props.columns, propsColumns = _props$columns === void 0 ? [] : _props$columns, toolBarRender = props.toolBarRender, optionsRender = props.optionsRender, onLoad = props.onLoad, onRequestError = props.onRequestError, style = props.style, cardProps = props.cardProps, tableStyle = props.tableStyle, tableClassName = props.tableClassName, columnsStateMap = props.columnsStateMap, onColumnsStateChange = props.onColumnsStateChange, options = props.options, search = props.search, isEditorTable = props.name, onLoadingChange = props.onLoadingChange, _props$rowSelection = props.rowSelection, propsRowSelection = _props$rowSelection === void 0 ? false : _props$rowSelection, beforeSearchSubmit = props.beforeSearchSubmit, tableAlertRender = props.tableAlertRender, defaultClassName = props.defaultClassName, propRef = props.formRef, _props$type = props.type, type = _props$type === void 0 ? "table" : _props$type, _props$columnEmptyTex = props.columnEmptyText, columnEmptyText = _props$columnEmptyTex === void 0 ? "-" : _props$columnEmptyTex, toolbar = props.toolbar, rowKey = props.rowKey, manualRequest = props.manualRequest, polling = props.polling, tooltip = props.tooltip, _props$revalidateOnFo = props.revalidateOnFocus, revalidateOnFocus = _props$revalidateOnFo === void 0 ? false : _props$revalidateOnFo, searchFormRender = props.searchFormRender, rest = _objectWithoutProperties(props, _excluded218);
  var _useStyle = useStyle14(props.defaultClassName), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var className = (0, import_classnames26.default)(defaultClassName, propsClassName, hashId);
  var actionRef = (0, import_react131.useRef)();
  var defaultFormRef = (0, import_react131.useRef)();
  var formRef = propRef || defaultFormRef;
  (0, import_react131.useImperativeHandle)(propsActionRef, function() {
    return actionRef.current;
  });
  var _useMountMergeState = useMergedState(propsRowSelection ? (propsRowSelection === null || propsRowSelection === void 0 ? void 0 : propsRowSelection.defaultSelectedRowKeys) || [] : void 0, {
    value: propsRowSelection ? propsRowSelection.selectedRowKeys : void 0
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), selectedRowKeys = _useMountMergeState2[0], setSelectedRowKeys = _useMountMergeState2[1];
  var _useMountMergeState3 = useMergedState(function() {
    if (manualRequest || search !== false) {
      return void 0;
    }
    return {};
  }), _useMountMergeState4 = _slicedToArray(_useMountMergeState3, 2), formSearch = _useMountMergeState4[0], setFormSearch = _useMountMergeState4[1];
  var _useMountMergeState5 = useMergedState({}), _useMountMergeState6 = _slicedToArray(_useMountMergeState5, 2), proFilter = _useMountMergeState6[0], setProFilter = _useMountMergeState6[1];
  var _useMountMergeState7 = useMergedState({}), _useMountMergeState8 = _slicedToArray(_useMountMergeState7, 2), proSort = _useMountMergeState8[0], setProSort = _useMountMergeState8[1];
  (0, import_react131.useEffect)(function() {
    var _parseDefaultColumnCo = parseDefaultColumnConfig(propsColumns), sort = _parseDefaultColumnCo.sort, filter = _parseDefaultColumnCo.filter;
    setProFilter(filter);
    setProSort(sort);
  }, []);
  var intl = useIntl();
  var fetchPagination = _typeof(propsPagination) === "object" ? propsPagination : {
    defaultCurrent: 1,
    defaultPageSize: 20,
    pageSize: 20,
    current: 1
  };
  var counter = (0, import_react131.useContext)(TableContext);
  var fetchData = (0, import_react131.useMemo)(function() {
    if (!request) return void 0;
    return function() {
      var _ref2 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(pageParams) {
        var actionParams, response;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              actionParams = _objectSpread2(_objectSpread2(_objectSpread2({}, pageParams || {}), formSearch), params);
              delete actionParams._timestamp;
              _context.next = 4;
              return request(actionParams, proSort, proFilter);
            case 4:
              response = _context.sent;
              return _context.abrupt("return", response);
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function(_x) {
        return _ref2.apply(this, arguments);
      };
    }();
  }, [formSearch, params, proFilter, proSort, request]);
  var action = useFetchData_default(fetchData, defaultData2, {
    pageInfo: propsPagination === false ? false : fetchPagination,
    loading: props.loading,
    dataSource: props.dataSource,
    onDataSourceChange: props.onDataSourceChange,
    onLoad,
    onLoadingChange,
    onRequestError,
    postData,
    revalidateOnFocus,
    manual: formSearch === void 0,
    polling,
    effects: [stringify_default(params), stringify_default(formSearch), stringify_default(proFilter), stringify_default(proSort)],
    debounceTime: props.debounceTime,
    onPageInfoChange: function onPageInfoChange(pageInfo) {
      var _propsPagination$onCh, _propsPagination$onSh;
      if (!propsPagination || !fetchData) return;
      propsPagination === null || propsPagination === void 0 || (_propsPagination$onCh = propsPagination.onChange) === null || _propsPagination$onCh === void 0 || _propsPagination$onCh.call(propsPagination, pageInfo.current, pageInfo.pageSize);
      propsPagination === null || propsPagination === void 0 || (_propsPagination$onSh = propsPagination.onShowSizeChange) === null || _propsPagination$onSh === void 0 || _propsPagination$onSh.call(propsPagination, pageInfo.current, pageInfo.pageSize);
    }
  });
  (0, import_react131.useEffect)(function() {
    var _props$form;
    if (props.manualRequest || !props.request || !revalidateOnFocus || (_props$form = props.form) !== null && _props$form !== void 0 && _props$form.ignoreRules) return;
    var visibilitychange = function visibilitychange2() {
      if (document.visibilityState === "visible") {
        action.reload();
      }
    };
    document.addEventListener("visibilitychange", visibilitychange);
    return function() {
      return document.removeEventListener("visibilitychange", visibilitychange);
    };
  }, []);
  var preserveRecordsRef = import_react131.default.useRef(/* @__PURE__ */ new Map());
  var getRowKey = import_react131.default.useMemo(function() {
    if (typeof rowKey === "function") {
      return rowKey;
    }
    return function(record, index) {
      var _ref3;
      if (index === -1) {
        return record === null || record === void 0 ? void 0 : record[rowKey];
      }
      if (props.name) {
        return index === null || index === void 0 ? void 0 : index.toString();
      }
      return (_ref3 = record === null || record === void 0 ? void 0 : record[rowKey]) !== null && _ref3 !== void 0 ? _ref3 : index === null || index === void 0 ? void 0 : index.toString();
    };
  }, [props.name, rowKey]);
  (0, import_react131.useMemo)(function() {
    var _action$dataSource;
    if ((_action$dataSource = action.dataSource) !== null && _action$dataSource !== void 0 && _action$dataSource.length) {
      var keys = action.dataSource.map(function(data) {
        var dataRowKey = getRowKey(data, -1);
        preserveRecordsRef.current.set(dataRowKey, data);
        return dataRowKey;
      });
      return keys;
    }
    return [];
  }, [action.dataSource, getRowKey]);
  var pagination = (0, import_react131.useMemo)(function() {
    var newPropsPagination = propsPagination === false ? false : _objectSpread2({}, propsPagination);
    var pageConfig = _objectSpread2(_objectSpread2({}, action.pageInfo), {}, {
      setPageInfo: function setPageInfo(_ref4) {
        var pageSize = _ref4.pageSize, current = _ref4.current;
        var pageInfo = action.pageInfo;
        if (pageSize === pageInfo.pageSize || pageInfo.current === 1) {
          action.setPageInfo({
            pageSize,
            current
          });
          return;
        }
        if (request) action.setDataSource([]);
        action.setPageInfo({
          pageSize,
          // 目前只有 List 和 Table 支持分页, List 有分页的时候 还是使用之前的当前页码
          current: type === "list" ? current : 1
        });
      }
    });
    if (request && newPropsPagination) {
      delete newPropsPagination.onChange;
      delete newPropsPagination.onShowSizeChange;
    }
    return mergePagination(newPropsPagination, pageConfig, intl);
  }, [propsPagination, action, intl]);
  useDeepCompareEffect(function() {
    var _action$pageInfo;
    if (props.request && !isEmpty_default(params) && action.dataSource && !isEqual_default(action.dataSource, defaultData2) && (action === null || action === void 0 || (_action$pageInfo = action.pageInfo) === null || _action$pageInfo === void 0 ? void 0 : _action$pageInfo.current) !== 1) {
      action.setPageInfo({
        current: 1
      });
    }
  }, [params]);
  counter.setPrefixName(props.name);
  var _onCleanSelected = (0, import_react131.useCallback)(function() {
    if (propsRowSelection && propsRowSelection.onChange) {
      propsRowSelection.onChange([], [], {
        type: "none"
      });
    }
    setSelectedRowKeys([]);
  }, [propsRowSelection, setSelectedRowKeys]);
  counter.propsRef.current = props;
  var editableUtils = useEditableArray(_objectSpread2(_objectSpread2({}, props.editable), {}, {
    tableName: props.name,
    getRowKey,
    childrenColumnName: ((_props$expandable2 = props.expandable) === null || _props$expandable2 === void 0 ? void 0 : _props$expandable2.childrenColumnName) || "children",
    dataSource: action.dataSource || [],
    setDataSource: function setDataSource(data) {
      var _props$editable4, _props$editable4$onVa;
      (_props$editable4 = props.editable) === null || _props$editable4 === void 0 || (_props$editable4$onVa = _props$editable4.onValuesChange) === null || _props$editable4$onVa === void 0 || _props$editable4$onVa.call(_props$editable4, void 0, data);
      action.setDataSource(data);
    }
  }));
  var _proTheme$useToken = proTheme === null || proTheme === void 0 ? void 0 : proTheme.useToken(), token = _proTheme$useToken.token;
  useActionType(actionRef, action, {
    fullScreen: function fullScreen() {
      var _counter$rootDomRef;
      if (!((_counter$rootDomRef = counter.rootDomRef) !== null && _counter$rootDomRef !== void 0 && _counter$rootDomRef.current) || !document.fullscreenEnabled) {
        return;
      }
      if (document.fullscreenElement) {
        document.exitFullscreen();
      } else {
        var _counter$rootDomRef2;
        (_counter$rootDomRef2 = counter.rootDomRef) === null || _counter$rootDomRef2 === void 0 || _counter$rootDomRef2.current.requestFullscreen();
      }
    },
    onCleanSelected: function onCleanSelected() {
      _onCleanSelected();
    },
    resetAll: function resetAll() {
      var _formRef$current;
      _onCleanSelected();
      setProFilter({});
      setProSort({});
      counter.setKeyWords(void 0);
      action.setPageInfo({
        current: 1
      });
      formRef === null || formRef === void 0 || (_formRef$current = formRef.current) === null || _formRef$current === void 0 || _formRef$current.resetFields();
      setFormSearch({});
    },
    editableUtils
  });
  counter.setAction(actionRef.current);
  var tableColumn = (0, import_react131.useMemo)(function() {
    var _props$expandable3;
    return genProColumnToColumn({
      columns: propsColumns,
      counter,
      columnEmptyText,
      type,
      marginSM: token.marginSM,
      editableUtils,
      rowKey,
      childrenColumnName: (_props$expandable3 = props.expandable) === null || _props$expandable3 === void 0 ? void 0 : _props$expandable3.childrenColumnName
    }).sort(columnSort(counter.columnsMap));
  }, [
    propsColumns,
    counter === null || counter === void 0 ? void 0 : counter.sortKeyColumns,
    counter === null || counter === void 0 ? void 0 : counter.columnsMap,
    columnEmptyText,
    type,
    // eslint-disable-next-line react-hooks/exhaustive-deps
    editableUtils.editableKeys && editableUtils.editableKeys.join(",")
  ]);
  useDeepCompareEffectDebounce(function() {
    if (tableColumn && tableColumn.length > 0) {
      var columnKeys = tableColumn.map(function(item) {
        return genColumnKey(item.key, item.index);
      });
      counter.setSortKeyColumns(columnKeys);
    }
  }, [tableColumn], ["render", "renderFormItem"], 100);
  useDeepCompareEffect(function() {
    var pageInfo = action.pageInfo;
    var _ref5 = propsPagination || {}, _ref5$current = _ref5.current, current = _ref5$current === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current : _ref5$current, _ref5$pageSize = _ref5.pageSize, pageSize = _ref5$pageSize === void 0 ? pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize : _ref5$pageSize;
    if (propsPagination && (current || pageSize) && (pageSize !== (pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.pageSize) || current !== (pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo.current))) {
      action.setPageInfo({
        pageSize: pageSize || pageInfo.pageSize,
        current: current || pageInfo.current
      });
    }
  }, [propsPagination && propsPagination.pageSize, propsPagination && propsPagination.current]);
  var rowSelection = _objectSpread2(_objectSpread2({
    selectedRowKeys
  }, propsRowSelection), {}, {
    onChange: function onChange(keys, rows, info) {
      if (propsRowSelection && propsRowSelection.onChange) {
        propsRowSelection.onChange(keys, rows, info);
      }
      setSelectedRowKeys(keys);
    }
  });
  var isLightFilter = search !== false && (search === null || search === void 0 ? void 0 : search.filterType) === "light";
  var _onFormSearchSubmit = (0, import_react131.useCallback)(function(values) {
    if (options && options.search) {
      var _options$search, _options$search$onSea;
      var _ref6 = options.search === true ? {} : options.search, _ref6$name = _ref6.name, name = _ref6$name === void 0 ? "keyword" : _ref6$name;
      var success2 = (_options$search = options.search) === null || _options$search === void 0 || (_options$search$onSea = _options$search.onSearch) === null || _options$search$onSea === void 0 ? void 0 : _options$search$onSea.call(_options$search, counter.keyWords);
      if (success2 !== false) {
        setFormSearch(_objectSpread2(_objectSpread2({}, values), {}, _defineProperty({}, name, counter.keyWords)));
        return;
      }
    }
    setFormSearch(values);
  }, [counter.keyWords, options, setFormSearch]);
  var loading = (0, import_react131.useMemo)(function() {
    if (_typeof(action.loading) === "object") {
      var _action$loading;
      return ((_action$loading = action.loading) === null || _action$loading === void 0 ? void 0 : _action$loading.spinning) || false;
    }
    return action.loading;
  }, [action.loading]);
  var searchNode = (0, import_react131.useMemo)(function() {
    var node = search === false && type !== "form" ? null : (0, import_jsx_runtime165.jsx)(Form_default, {
      pagination,
      beforeSearchSubmit,
      action: actionRef,
      columns: propsColumns,
      onFormSearchSubmit: function onFormSearchSubmit(values) {
        _onFormSearchSubmit(values);
      },
      ghost,
      onReset: props.onReset,
      onSubmit: props.onSubmit,
      loading: !!loading,
      manualRequest,
      search,
      form: props.form,
      formRef,
      type: props.type || "table",
      cardBordered: props.cardBordered,
      dateFormatter: props.dateFormatter
    });
    if (searchFormRender && node) {
      return (0, import_jsx_runtime165.jsx)(import_jsx_runtime166.Fragment, {
        children: searchFormRender(props, node)
      });
    } else {
      return node;
    }
  }, [beforeSearchSubmit, formRef, ghost, loading, manualRequest, _onFormSearchSubmit, pagination, props, propsColumns, search, searchFormRender, type]);
  var selectedRows = (0, import_react131.useMemo)(function() {
    return selectedRowKeys === null || selectedRowKeys === void 0 ? void 0 : selectedRowKeys.map(function(key2) {
      var _preserveRecordsRef$c;
      return (_preserveRecordsRef$c = preserveRecordsRef.current) === null || _preserveRecordsRef$c === void 0 ? void 0 : _preserveRecordsRef$c.get(key2);
    });
  }, [action.dataSource, selectedRowKeys]);
  var hideToolbar = (0, import_react131.useMemo)(function() {
    return options === false && !headerTitle && !toolBarRender && !toolbar && !isLightFilter;
  }, [options, headerTitle, toolBarRender, toolbar, isLightFilter]);
  var toolbarDom = toolBarRender === false ? null : (0, import_jsx_runtime165.jsx)(ToolBar_default, {
    headerTitle,
    hideToolbar,
    selectedRows,
    selectedRowKeys,
    tableColumn,
    tooltip,
    toolbar,
    onFormSearchSubmit: function onFormSearchSubmit(newValues) {
      setFormSearch(_objectSpread2(_objectSpread2({}, formSearch), newValues));
    },
    searchNode: isLightFilter ? searchNode : null,
    options,
    optionsRender,
    actionRef,
    toolBarRender
  });
  var alertDom = propsRowSelection !== false ? (0, import_jsx_runtime165.jsx)(Alert_default, {
    selectedRowKeys,
    selectedRows,
    onCleanSelected: _onCleanSelected,
    alertOptionRender: rest.tableAlertOptionRender,
    alertInfoRender: tableAlertRender,
    alwaysShowAlert: propsRowSelection === null || propsRowSelection === void 0 ? void 0 : propsRowSelection.alwaysShowAlert
  }) : null;
  return wrapSSR((0, import_jsx_runtime165.jsx)(TableRender, _objectSpread2(_objectSpread2({}, props), {}, {
    name: isEditorTable,
    defaultClassName,
    size: counter.tableSize,
    onSizeChange: counter.setTableSize,
    pagination,
    searchNode,
    rowSelection: propsRowSelection !== false ? rowSelection : void 0,
    className,
    tableColumn,
    isLightFilter,
    action,
    alertDom,
    toolbarDom,
    hideToolbar,
    onSortChange: function onSortChange(sortConfig) {
      if (proSort === sortConfig) return;
      setProSort(sortConfig !== null && sortConfig !== void 0 ? sortConfig : {});
    },
    onFilterChange: function onFilterChange(filterConfig) {
      if (filterConfig === proFilter) return;
      setProFilter(filterConfig);
    },
    editableUtils,
    getRowKey
  })));
};
var ProviderTableContainer = function ProviderTableContainer2(props) {
  var _useContext = (0, import_react131.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var ErrorComponent = props.ErrorBoundary === false ? import_react131.default.Fragment : props.ErrorBoundary || ErrorBoundary;
  return (0, import_jsx_runtime165.jsx)(Container, {
    initValue: props,
    children: (0, import_jsx_runtime165.jsx)(ProConfigProvider, {
      needDeps: true,
      children: (0, import_jsx_runtime165.jsx)(ErrorComponent, {
        children: (0, import_jsx_runtime165.jsx)(ProTable, _objectSpread2({
          defaultClassName: "".concat(getPrefixCls("pro-table"))
        }, props))
      })
    })
  });
};
ProviderTableContainer.Summary = table_default.Summary;
var Table_default = ProviderTableContainer;

// node_modules/@ant-design/pro-table/es/components/DragSortTable/index.js
var import_react138 = __toESM(require_react());

// node_modules/@dnd-kit/core/dist/core.esm.js
var import_react135 = __toESM(require_react());
var import_react_dom4 = __toESM(require_react_dom());

// node_modules/@dnd-kit/utilities/dist/utilities.esm.js
var import_react133 = __toESM(require_react());
function useCombinedRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }
  return (0, import_react133.useMemo)(
    () => (node) => {
      refs.forEach((ref) => ref(node));
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    refs
  );
}
var canUseDOM = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
function isWindow(element) {
  const elementString = Object.prototype.toString.call(element);
  return elementString === "[object Window]" || // In Electron context the Window object serializes to [object global]
  elementString === "[object global]";
}
function isNode(node) {
  return "nodeType" in node;
}
function getWindow(target) {
  var _target$ownerDocument, _target$ownerDocument2;
  if (!target) {
    return window;
  }
  if (isWindow(target)) {
    return target;
  }
  if (!isNode(target)) {
    return window;
  }
  return (_target$ownerDocument = (_target$ownerDocument2 = target.ownerDocument) == null ? void 0 : _target$ownerDocument2.defaultView) != null ? _target$ownerDocument : window;
}
function isDocument(node) {
  const {
    Document
  } = getWindow(node);
  return node instanceof Document;
}
function isHTMLElement(node) {
  if (isWindow(node)) {
    return false;
  }
  return node instanceof getWindow(node).HTMLElement;
}
function isSVGElement(node) {
  return node instanceof getWindow(node).SVGElement;
}
function getOwnerDocument(target) {
  if (!target) {
    return document;
  }
  if (isWindow(target)) {
    return target.document;
  }
  if (!isNode(target)) {
    return document;
  }
  if (isDocument(target)) {
    return target;
  }
  if (isHTMLElement(target) || isSVGElement(target)) {
    return target.ownerDocument;
  }
  return document;
}
var useIsomorphicLayoutEffect = canUseDOM ? import_react133.useLayoutEffect : import_react133.useEffect;
function useEvent(handler) {
  const handlerRef = (0, import_react133.useRef)(handler);
  useIsomorphicLayoutEffect(() => {
    handlerRef.current = handler;
  });
  return (0, import_react133.useCallback)(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return handlerRef.current == null ? void 0 : handlerRef.current(...args);
  }, []);
}
function useInterval() {
  const intervalRef = (0, import_react133.useRef)(null);
  const set2 = (0, import_react133.useCallback)((listener, duration) => {
    intervalRef.current = setInterval(listener, duration);
  }, []);
  const clear = (0, import_react133.useCallback)(() => {
    if (intervalRef.current !== null) {
      clearInterval(intervalRef.current);
      intervalRef.current = null;
    }
  }, []);
  return [set2, clear];
}
function useLatestValue(value, dependencies) {
  if (dependencies === void 0) {
    dependencies = [value];
  }
  const valueRef = (0, import_react133.useRef)(value);
  useIsomorphicLayoutEffect(() => {
    if (valueRef.current !== value) {
      valueRef.current = value;
    }
  }, dependencies);
  return valueRef;
}
function useLazyMemo(callback, dependencies) {
  const valueRef = (0, import_react133.useRef)();
  return (0, import_react133.useMemo)(
    () => {
      const newValue = callback(valueRef.current);
      valueRef.current = newValue;
      return newValue;
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [...dependencies]
  );
}
function useNodeRef(onChange) {
  const onChangeHandler = useEvent(onChange);
  const node = (0, import_react133.useRef)(null);
  const setNodeRef = (0, import_react133.useCallback)(
    (element) => {
      if (element !== node.current) {
        onChangeHandler == null ? void 0 : onChangeHandler(element, node.current);
      }
      node.current = element;
    },
    //eslint-disable-next-line
    []
  );
  return [node, setNodeRef];
}
function usePrevious2(value) {
  const ref = (0, import_react133.useRef)();
  (0, import_react133.useEffect)(() => {
    ref.current = value;
  }, [value]);
  return ref.current;
}
var ids = {};
function useUniqueId(prefix, value) {
  return (0, import_react133.useMemo)(() => {
    if (value) {
      return value;
    }
    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;
    ids[prefix] = id;
    return prefix + "-" + id;
  }, [prefix, value]);
}
function createAdjustmentFn(modifier) {
  return function(object) {
    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      adjustments[_key - 1] = arguments[_key];
    }
    return adjustments.reduce((accumulator, adjustment) => {
      const entries = Object.entries(adjustment);
      for (const [key2, valueAdjustment] of entries) {
        const value = accumulator[key2];
        if (value != null) {
          accumulator[key2] = value + modifier * valueAdjustment;
        }
      }
      return accumulator;
    }, {
      ...object
    });
  };
}
var add = createAdjustmentFn(1);
var subtract = createAdjustmentFn(-1);
function hasViewportRelativeCoordinates(event) {
  return "clientX" in event && "clientY" in event;
}
function isKeyboardEvent(event) {
  if (!event) {
    return false;
  }
  const {
    KeyboardEvent
  } = getWindow(event.target);
  return KeyboardEvent && event instanceof KeyboardEvent;
}
function isTouchEvent(event) {
  if (!event) {
    return false;
  }
  const {
    TouchEvent
  } = getWindow(event.target);
  return TouchEvent && event instanceof TouchEvent;
}
function getEventCoordinates(event) {
  if (isTouchEvent(event)) {
    if (event.touches && event.touches.length) {
      const {
        clientX: x,
        clientY: y
      } = event.touches[0];
      return {
        x,
        y
      };
    } else if (event.changedTouches && event.changedTouches.length) {
      const {
        clientX: x,
        clientY: y
      } = event.changedTouches[0];
      return {
        x,
        y
      };
    }
  }
  if (hasViewportRelativeCoordinates(event)) {
    return {
      x: event.clientX,
      y: event.clientY
    };
  }
  return null;
}
var CSS = Object.freeze({
  Translate: {
    toString(transform) {
      if (!transform) {
        return;
      }
      const {
        x,
        y
      } = transform;
      return "translate3d(" + (x ? Math.round(x) : 0) + "px, " + (y ? Math.round(y) : 0) + "px, 0)";
    }
  },
  Scale: {
    toString(transform) {
      if (!transform) {
        return;
      }
      const {
        scaleX,
        scaleY
      } = transform;
      return "scaleX(" + scaleX + ") scaleY(" + scaleY + ")";
    }
  },
  Transform: {
    toString(transform) {
      if (!transform) {
        return;
      }
      return [CSS.Translate.toString(transform), CSS.Scale.toString(transform)].join(" ");
    }
  },
  Transition: {
    toString(_ref) {
      let {
        property,
        duration,
        easing
      } = _ref;
      return property + " " + duration + "ms " + easing;
    }
  }
});
var SELECTOR = "a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]";
function findFirstFocusableNode(element) {
  if (element.matches(SELECTOR)) {
    return element;
  }
  return element.querySelector(SELECTOR);
}

// node_modules/@dnd-kit/accessibility/dist/accessibility.esm.js
var import_react134 = __toESM(require_react());
var hiddenStyles = {
  display: "none"
};
function HiddenText(_ref) {
  let {
    id,
    value
  } = _ref;
  return import_react134.default.createElement("div", {
    id,
    style: hiddenStyles
  }, value);
}
function LiveRegion(_ref) {
  let {
    id,
    announcement,
    ariaLiveType = "assertive"
  } = _ref;
  const visuallyHidden = {
    position: "fixed",
    width: 1,
    height: 1,
    margin: -1,
    border: 0,
    padding: 0,
    overflow: "hidden",
    clip: "rect(0 0 0 0)",
    clipPath: "inset(100%)",
    whiteSpace: "nowrap"
  };
  return import_react134.default.createElement("div", {
    id,
    style: visuallyHidden,
    role: "status",
    "aria-live": ariaLiveType,
    "aria-atomic": true
  }, announcement);
}
function useAnnouncement() {
  const [announcement, setAnnouncement] = (0, import_react134.useState)("");
  const announce = (0, import_react134.useCallback)((value) => {
    if (value != null) {
      setAnnouncement(value);
    }
  }, []);
  return {
    announce,
    announcement
  };
}

// node_modules/@dnd-kit/core/dist/core.esm.js
var DndMonitorContext = (0, import_react135.createContext)(null);
function useDndMonitor(listener) {
  const registerListener = (0, import_react135.useContext)(DndMonitorContext);
  (0, import_react135.useEffect)(() => {
    if (!registerListener) {
      throw new Error("useDndMonitor must be used within a children of <DndContext>");
    }
    const unsubscribe = registerListener(listener);
    return unsubscribe;
  }, [listener, registerListener]);
}
function useDndMonitorProvider() {
  const [listeners] = (0, import_react135.useState)(() => /* @__PURE__ */ new Set());
  const registerListener = (0, import_react135.useCallback)((listener) => {
    listeners.add(listener);
    return () => listeners.delete(listener);
  }, [listeners]);
  const dispatch = (0, import_react135.useCallback)((_ref) => {
    let {
      type,
      event
    } = _ref;
    listeners.forEach((listener) => {
      var _listener$type;
      return (_listener$type = listener[type]) == null ? void 0 : _listener$type.call(listener, event);
    });
  }, [listeners]);
  return [dispatch, registerListener];
}
var defaultScreenReaderInstructions = {
  draggable: "\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  "
};
var defaultAnnouncements = {
  onDragStart(_ref) {
    let {
      active
    } = _ref;
    return "Picked up draggable item " + active.id + ".";
  },
  onDragOver(_ref2) {
    let {
      active,
      over
    } = _ref2;
    if (over) {
      return "Draggable item " + active.id + " was moved over droppable area " + over.id + ".";
    }
    return "Draggable item " + active.id + " is no longer over a droppable area.";
  },
  onDragEnd(_ref3) {
    let {
      active,
      over
    } = _ref3;
    if (over) {
      return "Draggable item " + active.id + " was dropped over droppable area " + over.id;
    }
    return "Draggable item " + active.id + " was dropped.";
  },
  onDragCancel(_ref4) {
    let {
      active
    } = _ref4;
    return "Dragging was cancelled. Draggable item " + active.id + " was dropped.";
  }
};
function Accessibility(_ref) {
  let {
    announcements = defaultAnnouncements,
    container,
    hiddenTextDescribedById,
    screenReaderInstructions = defaultScreenReaderInstructions
  } = _ref;
  const {
    announce,
    announcement
  } = useAnnouncement();
  const liveRegionId = useUniqueId("DndLiveRegion");
  const [mounted, setMounted] = (0, import_react135.useState)(false);
  (0, import_react135.useEffect)(() => {
    setMounted(true);
  }, []);
  useDndMonitor((0, import_react135.useMemo)(() => ({
    onDragStart(_ref2) {
      let {
        active
      } = _ref2;
      announce(announcements.onDragStart({
        active
      }));
    },
    onDragMove(_ref3) {
      let {
        active,
        over
      } = _ref3;
      if (announcements.onDragMove) {
        announce(announcements.onDragMove({
          active,
          over
        }));
      }
    },
    onDragOver(_ref4) {
      let {
        active,
        over
      } = _ref4;
      announce(announcements.onDragOver({
        active,
        over
      }));
    },
    onDragEnd(_ref5) {
      let {
        active,
        over
      } = _ref5;
      announce(announcements.onDragEnd({
        active,
        over
      }));
    },
    onDragCancel(_ref6) {
      let {
        active,
        over
      } = _ref6;
      announce(announcements.onDragCancel({
        active,
        over
      }));
    }
  }), [announce, announcements]));
  if (!mounted) {
    return null;
  }
  const markup = import_react135.default.createElement(import_react135.default.Fragment, null, import_react135.default.createElement(HiddenText, {
    id: hiddenTextDescribedById,
    value: screenReaderInstructions.draggable
  }), import_react135.default.createElement(LiveRegion, {
    id: liveRegionId,
    announcement
  }));
  return container ? (0, import_react_dom4.createPortal)(markup, container) : markup;
}
var Action;
(function(Action2) {
  Action2["DragStart"] = "dragStart";
  Action2["DragMove"] = "dragMove";
  Action2["DragEnd"] = "dragEnd";
  Action2["DragCancel"] = "dragCancel";
  Action2["DragOver"] = "dragOver";
  Action2["RegisterDroppable"] = "registerDroppable";
  Action2["SetDroppableDisabled"] = "setDroppableDisabled";
  Action2["UnregisterDroppable"] = "unregisterDroppable";
})(Action || (Action = {}));
function noop() {
}
function useSensor(sensor, options) {
  return (0, import_react135.useMemo)(
    () => ({
      sensor,
      options: options != null ? options : {}
    }),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [sensor, options]
  );
}
function useSensors() {
  for (var _len = arguments.length, sensors = new Array(_len), _key = 0; _key < _len; _key++) {
    sensors[_key] = arguments[_key];
  }
  return (0, import_react135.useMemo)(
    () => [...sensors].filter((sensor) => sensor != null),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [...sensors]
  );
}
var defaultCoordinates = Object.freeze({
  x: 0,
  y: 0
});
function distanceBetween(p1, p2) {
  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
}
function getRelativeTransformOrigin(event, rect) {
  const eventCoordinates = getEventCoordinates(event);
  if (!eventCoordinates) {
    return "0 0";
  }
  const transformOrigin = {
    x: (eventCoordinates.x - rect.left) / rect.width * 100,
    y: (eventCoordinates.y - rect.top) / rect.height * 100
  };
  return transformOrigin.x + "% " + transformOrigin.y + "%";
}
function sortCollisionsAsc(_ref, _ref2) {
  let {
    data: {
      value: a
    }
  } = _ref;
  let {
    data: {
      value: b
    }
  } = _ref2;
  return a - b;
}
function sortCollisionsDesc(_ref3, _ref4) {
  let {
    data: {
      value: a
    }
  } = _ref3;
  let {
    data: {
      value: b
    }
  } = _ref4;
  return b - a;
}
function getFirstCollision(collisions, property) {
  if (!collisions || collisions.length === 0) {
    return null;
  }
  const [firstCollision] = collisions;
  return property ? firstCollision[property] : firstCollision;
}
function centerOfRectangle(rect, left, top) {
  if (left === void 0) {
    left = rect.left;
  }
  if (top === void 0) {
    top = rect.top;
  }
  return {
    x: left + rect.width * 0.5,
    y: top + rect.height * 0.5
  };
}
var closestCenter = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const centerRect = centerOfRectangle(collisionRect, collisionRect.left, collisionRect.top);
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id
    } = droppableContainer;
    const rect = droppableRects.get(id);
    if (rect) {
      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);
      collisions.push({
        id,
        data: {
          droppableContainer,
          value: distBetween
        }
      });
    }
  }
  return collisions.sort(sortCollisionsAsc);
};
function getIntersectionRatio(entry, target) {
  const top = Math.max(target.top, entry.top);
  const left = Math.max(target.left, entry.left);
  const right = Math.min(target.left + target.width, entry.left + entry.width);
  const bottom = Math.min(target.top + target.height, entry.top + entry.height);
  const width = right - left;
  const height = bottom - top;
  if (left < right && top < bottom) {
    const targetArea = target.width * target.height;
    const entryArea = entry.width * entry.height;
    const intersectionArea = width * height;
    const intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);
    return Number(intersectionRatio.toFixed(4));
  }
  return 0;
}
var rectIntersection = (_ref) => {
  let {
    collisionRect,
    droppableRects,
    droppableContainers
  } = _ref;
  const collisions = [];
  for (const droppableContainer of droppableContainers) {
    const {
      id
    } = droppableContainer;
    const rect = droppableRects.get(id);
    if (rect) {
      const intersectionRatio = getIntersectionRatio(rect, collisionRect);
      if (intersectionRatio > 0) {
        collisions.push({
          id,
          data: {
            droppableContainer,
            value: intersectionRatio
          }
        });
      }
    }
  }
  return collisions.sort(sortCollisionsDesc);
};
function adjustScale(transform, rect1, rect2) {
  return {
    ...transform,
    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,
    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1
  };
}
function getRectDelta(rect1, rect2) {
  return rect1 && rect2 ? {
    x: rect1.left - rect2.left,
    y: rect1.top - rect2.top
  } : defaultCoordinates;
}
function createRectAdjustmentFn(modifier) {
  return function adjustClientRect(rect) {
    for (var _len = arguments.length, adjustments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      adjustments[_key - 1] = arguments[_key];
    }
    return adjustments.reduce((acc, adjustment) => ({
      ...acc,
      top: acc.top + modifier * adjustment.y,
      bottom: acc.bottom + modifier * adjustment.y,
      left: acc.left + modifier * adjustment.x,
      right: acc.right + modifier * adjustment.x
    }), {
      ...rect
    });
  };
}
var getAdjustedRect = createRectAdjustmentFn(1);
function parseTransform(transform) {
  if (transform.startsWith("matrix3d(")) {
    const transformArray = transform.slice(9, -1).split(/, /);
    return {
      x: +transformArray[12],
      y: +transformArray[13],
      scaleX: +transformArray[0],
      scaleY: +transformArray[5]
    };
  } else if (transform.startsWith("matrix(")) {
    const transformArray = transform.slice(7, -1).split(/, /);
    return {
      x: +transformArray[4],
      y: +transformArray[5],
      scaleX: +transformArray[0],
      scaleY: +transformArray[3]
    };
  }
  return null;
}
function inverseTransform(rect, transform, transformOrigin) {
  const parsedTransform = parseTransform(transform);
  if (!parsedTransform) {
    return rect;
  }
  const {
    scaleX,
    scaleY,
    x: translateX,
    y: translateY
  } = parsedTransform;
  const x = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);
  const y = rect.top - translateY - (1 - scaleY) * parseFloat(transformOrigin.slice(transformOrigin.indexOf(" ") + 1));
  const w = scaleX ? rect.width / scaleX : rect.width;
  const h = scaleY ? rect.height / scaleY : rect.height;
  return {
    width: w,
    height: h,
    top: y,
    right: x + w,
    bottom: y + h,
    left: x
  };
}
var defaultOptions = {
  ignoreTransform: false
};
function getClientRect(element, options) {
  if (options === void 0) {
    options = defaultOptions;
  }
  let rect = element.getBoundingClientRect();
  if (options.ignoreTransform) {
    const {
      transform,
      transformOrigin
    } = getWindow(element).getComputedStyle(element);
    if (transform) {
      rect = inverseTransform(rect, transform, transformOrigin);
    }
  }
  const {
    top,
    left,
    width,
    height,
    bottom,
    right
  } = rect;
  return {
    top,
    left,
    width,
    height,
    bottom,
    right
  };
}
function getTransformAgnosticClientRect(element) {
  return getClientRect(element, {
    ignoreTransform: true
  });
}
function getWindowClientRect(element) {
  const width = element.innerWidth;
  const height = element.innerHeight;
  return {
    top: 0,
    left: 0,
    right: width,
    bottom: height,
    width,
    height
  };
}
function isFixed(node, computedStyle) {
  if (computedStyle === void 0) {
    computedStyle = getWindow(node).getComputedStyle(node);
  }
  return computedStyle.position === "fixed";
}
function isScrollable(element, computedStyle) {
  if (computedStyle === void 0) {
    computedStyle = getWindow(element).getComputedStyle(element);
  }
  const overflowRegex = /(auto|scroll|overlay)/;
  const properties2 = ["overflow", "overflowX", "overflowY"];
  return properties2.some((property) => {
    const value = computedStyle[property];
    return typeof value === "string" ? overflowRegex.test(value) : false;
  });
}
function getScrollableAncestors(element, limit) {
  const scrollParents = [];
  function findScrollableAncestors(node) {
    if (limit != null && scrollParents.length >= limit) {
      return scrollParents;
    }
    if (!node) {
      return scrollParents;
    }
    if (isDocument(node) && node.scrollingElement != null && !scrollParents.includes(node.scrollingElement)) {
      scrollParents.push(node.scrollingElement);
      return scrollParents;
    }
    if (!isHTMLElement(node) || isSVGElement(node)) {
      return scrollParents;
    }
    if (scrollParents.includes(node)) {
      return scrollParents;
    }
    const computedStyle = getWindow(element).getComputedStyle(node);
    if (node !== element) {
      if (isScrollable(node, computedStyle)) {
        scrollParents.push(node);
      }
    }
    if (isFixed(node, computedStyle)) {
      return scrollParents;
    }
    return findScrollableAncestors(node.parentNode);
  }
  if (!element) {
    return scrollParents;
  }
  return findScrollableAncestors(element);
}
function getFirstScrollableAncestor(node) {
  const [firstScrollableAncestor] = getScrollableAncestors(node, 1);
  return firstScrollableAncestor != null ? firstScrollableAncestor : null;
}
function getScrollableElement(element) {
  if (!canUseDOM || !element) {
    return null;
  }
  if (isWindow(element)) {
    return element;
  }
  if (!isNode(element)) {
    return null;
  }
  if (isDocument(element) || element === getOwnerDocument(element).scrollingElement) {
    return window;
  }
  if (isHTMLElement(element)) {
    return element;
  }
  return null;
}
function getScrollXCoordinate(element) {
  if (isWindow(element)) {
    return element.scrollX;
  }
  return element.scrollLeft;
}
function getScrollYCoordinate(element) {
  if (isWindow(element)) {
    return element.scrollY;
  }
  return element.scrollTop;
}
function getScrollCoordinates(element) {
  return {
    x: getScrollXCoordinate(element),
    y: getScrollYCoordinate(element)
  };
}
var Direction;
(function(Direction2) {
  Direction2[Direction2["Forward"] = 1] = "Forward";
  Direction2[Direction2["Backward"] = -1] = "Backward";
})(Direction || (Direction = {}));
function isDocumentScrollingElement(element) {
  if (!canUseDOM || !element) {
    return false;
  }
  return element === document.scrollingElement;
}
function getScrollPosition(scrollingContainer) {
  const minScroll = {
    x: 0,
    y: 0
  };
  const dimensions = isDocumentScrollingElement(scrollingContainer) ? {
    height: window.innerHeight,
    width: window.innerWidth
  } : {
    height: scrollingContainer.clientHeight,
    width: scrollingContainer.clientWidth
  };
  const maxScroll = {
    x: scrollingContainer.scrollWidth - dimensions.width,
    y: scrollingContainer.scrollHeight - dimensions.height
  };
  const isTop = scrollingContainer.scrollTop <= minScroll.y;
  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;
  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;
  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;
  return {
    isTop,
    isLeft,
    isBottom,
    isRight,
    maxScroll,
    minScroll
  };
}
var defaultThreshold = {
  x: 0.2,
  y: 0.2
};
function getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, _ref, acceleration, thresholdPercentage) {
  let {
    top,
    left,
    right,
    bottom
  } = _ref;
  if (acceleration === void 0) {
    acceleration = 10;
  }
  if (thresholdPercentage === void 0) {
    thresholdPercentage = defaultThreshold;
  }
  const {
    isTop,
    isBottom,
    isLeft,
    isRight
  } = getScrollPosition(scrollContainer);
  const direction = {
    x: 0,
    y: 0
  };
  const speed = {
    x: 0,
    y: 0
  };
  const threshold = {
    height: scrollContainerRect.height * thresholdPercentage.y,
    width: scrollContainerRect.width * thresholdPercentage.x
  };
  if (!isTop && top <= scrollContainerRect.top + threshold.height) {
    direction.y = Direction.Backward;
    speed.y = acceleration * Math.abs((scrollContainerRect.top + threshold.height - top) / threshold.height);
  } else if (!isBottom && bottom >= scrollContainerRect.bottom - threshold.height) {
    direction.y = Direction.Forward;
    speed.y = acceleration * Math.abs((scrollContainerRect.bottom - threshold.height - bottom) / threshold.height);
  }
  if (!isRight && right >= scrollContainerRect.right - threshold.width) {
    direction.x = Direction.Forward;
    speed.x = acceleration * Math.abs((scrollContainerRect.right - threshold.width - right) / threshold.width);
  } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {
    direction.x = Direction.Backward;
    speed.x = acceleration * Math.abs((scrollContainerRect.left + threshold.width - left) / threshold.width);
  }
  return {
    direction,
    speed
  };
}
function getScrollElementRect(element) {
  if (element === document.scrollingElement) {
    const {
      innerWidth,
      innerHeight
    } = window;
    return {
      top: 0,
      left: 0,
      right: innerWidth,
      bottom: innerHeight,
      width: innerWidth,
      height: innerHeight
    };
  }
  const {
    top,
    left,
    right,
    bottom
  } = element.getBoundingClientRect();
  return {
    top,
    left,
    right,
    bottom,
    width: element.clientWidth,
    height: element.clientHeight
  };
}
function getScrollOffsets(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return add(acc, getScrollCoordinates(node));
  }, defaultCoordinates);
}
function getScrollXOffset(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return acc + getScrollXCoordinate(node);
  }, 0);
}
function getScrollYOffset(scrollableAncestors) {
  return scrollableAncestors.reduce((acc, node) => {
    return acc + getScrollYCoordinate(node);
  }, 0);
}
function scrollIntoViewIfNeeded(element, measure) {
  if (measure === void 0) {
    measure = getClientRect;
  }
  if (!element) {
    return;
  }
  const {
    top,
    left,
    bottom,
    right
  } = measure(element);
  const firstScrollableAncestor = getFirstScrollableAncestor(element);
  if (!firstScrollableAncestor) {
    return;
  }
  if (bottom <= 0 || right <= 0 || top >= window.innerHeight || left >= window.innerWidth) {
    element.scrollIntoView({
      block: "center",
      inline: "center"
    });
  }
}
var properties = [["x", ["left", "right"], getScrollXOffset], ["y", ["top", "bottom"], getScrollYOffset]];
var Rect = class {
  constructor(rect, element) {
    this.rect = void 0;
    this.width = void 0;
    this.height = void 0;
    this.top = void 0;
    this.bottom = void 0;
    this.right = void 0;
    this.left = void 0;
    const scrollableAncestors = getScrollableAncestors(element);
    const scrollOffsets = getScrollOffsets(scrollableAncestors);
    this.rect = {
      ...rect
    };
    this.width = rect.width;
    this.height = rect.height;
    for (const [axis, keys, getScrollOffset] of properties) {
      for (const key2 of keys) {
        Object.defineProperty(this, key2, {
          get: () => {
            const currentOffsets = getScrollOffset(scrollableAncestors);
            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;
            return this.rect[key2] + scrollOffsetsDeltla;
          },
          enumerable: true
        });
      }
    }
    Object.defineProperty(this, "rect", {
      enumerable: false
    });
  }
};
var Listeners = class {
  constructor(target) {
    this.target = void 0;
    this.listeners = [];
    this.removeAll = () => {
      this.listeners.forEach((listener) => {
        var _this$target;
        return (_this$target = this.target) == null ? void 0 : _this$target.removeEventListener(...listener);
      });
    };
    this.target = target;
  }
  add(eventName, handler, options) {
    var _this$target2;
    (_this$target2 = this.target) == null ? void 0 : _this$target2.addEventListener(eventName, handler, options);
    this.listeners.push([eventName, handler, options]);
  }
};
function getEventListenerTarget(target) {
  const {
    EventTarget
  } = getWindow(target);
  return target instanceof EventTarget ? target : getOwnerDocument(target);
}
function hasExceededDistance(delta, measurement) {
  const dx = Math.abs(delta.x);
  const dy = Math.abs(delta.y);
  if (typeof measurement === "number") {
    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;
  }
  if ("x" in measurement && "y" in measurement) {
    return dx > measurement.x && dy > measurement.y;
  }
  if ("x" in measurement) {
    return dx > measurement.x;
  }
  if ("y" in measurement) {
    return dy > measurement.y;
  }
  return false;
}
var EventName;
(function(EventName2) {
  EventName2["Click"] = "click";
  EventName2["DragStart"] = "dragstart";
  EventName2["Keydown"] = "keydown";
  EventName2["ContextMenu"] = "contextmenu";
  EventName2["Resize"] = "resize";
  EventName2["SelectionChange"] = "selectionchange";
  EventName2["VisibilityChange"] = "visibilitychange";
})(EventName || (EventName = {}));
function preventDefault(event) {
  event.preventDefault();
}
function stopPropagation(event) {
  event.stopPropagation();
}
var KeyboardCode;
(function(KeyboardCode2) {
  KeyboardCode2["Space"] = "Space";
  KeyboardCode2["Down"] = "ArrowDown";
  KeyboardCode2["Right"] = "ArrowRight";
  KeyboardCode2["Left"] = "ArrowLeft";
  KeyboardCode2["Up"] = "ArrowUp";
  KeyboardCode2["Esc"] = "Escape";
  KeyboardCode2["Enter"] = "Enter";
})(KeyboardCode || (KeyboardCode = {}));
var defaultKeyboardCodes = {
  start: [KeyboardCode.Space, KeyboardCode.Enter],
  cancel: [KeyboardCode.Esc],
  end: [KeyboardCode.Space, KeyboardCode.Enter]
};
var defaultKeyboardCoordinateGetter = (event, _ref) => {
  let {
    currentCoordinates
  } = _ref;
  switch (event.code) {
    case KeyboardCode.Right:
      return {
        ...currentCoordinates,
        x: currentCoordinates.x + 25
      };
    case KeyboardCode.Left:
      return {
        ...currentCoordinates,
        x: currentCoordinates.x - 25
      };
    case KeyboardCode.Down:
      return {
        ...currentCoordinates,
        y: currentCoordinates.y + 25
      };
    case KeyboardCode.Up:
      return {
        ...currentCoordinates,
        y: currentCoordinates.y - 25
      };
  }
  return void 0;
};
var KeyboardSensor = class {
  constructor(props) {
    this.props = void 0;
    this.autoScrollEnabled = false;
    this.referenceCoordinates = void 0;
    this.listeners = void 0;
    this.windowListeners = void 0;
    this.props = props;
    const {
      event: {
        target
      }
    } = props;
    this.props = props;
    this.listeners = new Listeners(getOwnerDocument(target));
    this.windowListeners = new Listeners(getWindow(target));
    this.handleKeyDown = this.handleKeyDown.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.attach();
  }
  attach() {
    this.handleStart();
    this.windowListeners.add(EventName.Resize, this.handleCancel);
    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));
  }
  handleStart() {
    const {
      activeNode,
      onStart
    } = this.props;
    const node = activeNode.node.current;
    if (node) {
      scrollIntoViewIfNeeded(node);
    }
    onStart(defaultCoordinates);
  }
  handleKeyDown(event) {
    if (isKeyboardEvent(event)) {
      const {
        active,
        context,
        options
      } = this.props;
      const {
        keyboardCodes = defaultKeyboardCodes,
        coordinateGetter = defaultKeyboardCoordinateGetter,
        scrollBehavior = "smooth"
      } = options;
      const {
        code
      } = event;
      if (keyboardCodes.end.includes(code)) {
        this.handleEnd(event);
        return;
      }
      if (keyboardCodes.cancel.includes(code)) {
        this.handleCancel(event);
        return;
      }
      const {
        collisionRect
      } = context.current;
      const currentCoordinates = collisionRect ? {
        x: collisionRect.left,
        y: collisionRect.top
      } : defaultCoordinates;
      if (!this.referenceCoordinates) {
        this.referenceCoordinates = currentCoordinates;
      }
      const newCoordinates = coordinateGetter(event, {
        active,
        context: context.current,
        currentCoordinates
      });
      if (newCoordinates) {
        const coordinatesDelta = subtract(newCoordinates, currentCoordinates);
        const scrollDelta = {
          x: 0,
          y: 0
        };
        const {
          scrollableAncestors
        } = context.current;
        for (const scrollContainer of scrollableAncestors) {
          const direction = event.code;
          const {
            isTop,
            isRight,
            isLeft,
            isBottom,
            maxScroll,
            minScroll
          } = getScrollPosition(scrollContainer);
          const scrollElementRect = getScrollElementRect(scrollContainer);
          const clampedCoordinates = {
            x: Math.min(direction === KeyboardCode.Right ? scrollElementRect.right - scrollElementRect.width / 2 : scrollElementRect.right, Math.max(direction === KeyboardCode.Right ? scrollElementRect.left : scrollElementRect.left + scrollElementRect.width / 2, newCoordinates.x)),
            y: Math.min(direction === KeyboardCode.Down ? scrollElementRect.bottom - scrollElementRect.height / 2 : scrollElementRect.bottom, Math.max(direction === KeyboardCode.Down ? scrollElementRect.top : scrollElementRect.top + scrollElementRect.height / 2, newCoordinates.y))
          };
          const canScrollX = direction === KeyboardCode.Right && !isRight || direction === KeyboardCode.Left && !isLeft;
          const canScrollY = direction === KeyboardCode.Down && !isBottom || direction === KeyboardCode.Up && !isTop;
          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {
            const newScrollCoordinates = scrollContainer.scrollLeft + coordinatesDelta.x;
            const canScrollToNewCoordinates = direction === KeyboardCode.Right && newScrollCoordinates <= maxScroll.x || direction === KeyboardCode.Left && newScrollCoordinates >= minScroll.x;
            if (canScrollToNewCoordinates && !coordinatesDelta.y) {
              scrollContainer.scrollTo({
                left: newScrollCoordinates,
                behavior: scrollBehavior
              });
              return;
            }
            if (canScrollToNewCoordinates) {
              scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;
            } else {
              scrollDelta.x = direction === KeyboardCode.Right ? scrollContainer.scrollLeft - maxScroll.x : scrollContainer.scrollLeft - minScroll.x;
            }
            if (scrollDelta.x) {
              scrollContainer.scrollBy({
                left: -scrollDelta.x,
                behavior: scrollBehavior
              });
            }
            break;
          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {
            const newScrollCoordinates = scrollContainer.scrollTop + coordinatesDelta.y;
            const canScrollToNewCoordinates = direction === KeyboardCode.Down && newScrollCoordinates <= maxScroll.y || direction === KeyboardCode.Up && newScrollCoordinates >= minScroll.y;
            if (canScrollToNewCoordinates && !coordinatesDelta.x) {
              scrollContainer.scrollTo({
                top: newScrollCoordinates,
                behavior: scrollBehavior
              });
              return;
            }
            if (canScrollToNewCoordinates) {
              scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;
            } else {
              scrollDelta.y = direction === KeyboardCode.Down ? scrollContainer.scrollTop - maxScroll.y : scrollContainer.scrollTop - minScroll.y;
            }
            if (scrollDelta.y) {
              scrollContainer.scrollBy({
                top: -scrollDelta.y,
                behavior: scrollBehavior
              });
            }
            break;
          }
        }
        this.handleMove(event, add(subtract(newCoordinates, this.referenceCoordinates), scrollDelta));
      }
    }
  }
  handleMove(event, coordinates) {
    const {
      onMove
    } = this.props;
    event.preventDefault();
    onMove(coordinates);
  }
  handleEnd(event) {
    const {
      onEnd
    } = this.props;
    event.preventDefault();
    this.detach();
    onEnd();
  }
  handleCancel(event) {
    const {
      onCancel
    } = this.props;
    event.preventDefault();
    this.detach();
    onCancel();
  }
  detach() {
    this.listeners.removeAll();
    this.windowListeners.removeAll();
  }
};
KeyboardSensor.activators = [{
  eventName: "onKeyDown",
  handler: (event, _ref, _ref2) => {
    let {
      keyboardCodes = defaultKeyboardCodes,
      onActivation
    } = _ref;
    let {
      active
    } = _ref2;
    const {
      code
    } = event.nativeEvent;
    if (keyboardCodes.start.includes(code)) {
      const activator = active.activatorNode.current;
      if (activator && event.target !== activator) {
        return false;
      }
      event.preventDefault();
      onActivation == null ? void 0 : onActivation({
        event: event.nativeEvent
      });
      return true;
    }
    return false;
  }
}];
function isDistanceConstraint(constraint) {
  return Boolean(constraint && "distance" in constraint);
}
function isDelayConstraint(constraint) {
  return Boolean(constraint && "delay" in constraint);
}
var AbstractPointerSensor = class {
  constructor(props, events2, listenerTarget) {
    var _getEventCoordinates;
    if (listenerTarget === void 0) {
      listenerTarget = getEventListenerTarget(props.event.target);
    }
    this.props = void 0;
    this.events = void 0;
    this.autoScrollEnabled = true;
    this.document = void 0;
    this.activated = false;
    this.initialCoordinates = void 0;
    this.timeoutId = null;
    this.listeners = void 0;
    this.documentListeners = void 0;
    this.windowListeners = void 0;
    this.props = props;
    this.events = events2;
    const {
      event
    } = props;
    const {
      target
    } = event;
    this.props = props;
    this.events = events2;
    this.document = getOwnerDocument(target);
    this.documentListeners = new Listeners(this.document);
    this.listeners = new Listeners(listenerTarget);
    this.windowListeners = new Listeners(getWindow(target));
    this.initialCoordinates = (_getEventCoordinates = getEventCoordinates(event)) != null ? _getEventCoordinates : defaultCoordinates;
    this.handleStart = this.handleStart.bind(this);
    this.handleMove = this.handleMove.bind(this);
    this.handleEnd = this.handleEnd.bind(this);
    this.handleCancel = this.handleCancel.bind(this);
    this.handleKeydown = this.handleKeydown.bind(this);
    this.removeTextSelection = this.removeTextSelection.bind(this);
    this.attach();
  }
  attach() {
    const {
      events: events2,
      props: {
        options: {
          activationConstraint,
          bypassActivationConstraint
        }
      }
    } = this;
    this.listeners.add(events2.move.name, this.handleMove, {
      passive: false
    });
    this.listeners.add(events2.end.name, this.handleEnd);
    this.windowListeners.add(EventName.Resize, this.handleCancel);
    this.windowListeners.add(EventName.DragStart, preventDefault);
    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);
    this.windowListeners.add(EventName.ContextMenu, preventDefault);
    this.documentListeners.add(EventName.Keydown, this.handleKeydown);
    if (activationConstraint) {
      if (bypassActivationConstraint != null && bypassActivationConstraint({
        event: this.props.event,
        activeNode: this.props.activeNode,
        options: this.props.options
      })) {
        return this.handleStart();
      }
      if (isDelayConstraint(activationConstraint)) {
        this.timeoutId = setTimeout(this.handleStart, activationConstraint.delay);
        return;
      }
      if (isDistanceConstraint(activationConstraint)) {
        return;
      }
    }
    this.handleStart();
  }
  detach() {
    this.listeners.removeAll();
    this.windowListeners.removeAll();
    setTimeout(this.documentListeners.removeAll, 50);
    if (this.timeoutId !== null) {
      clearTimeout(this.timeoutId);
      this.timeoutId = null;
    }
  }
  handleStart() {
    const {
      initialCoordinates
    } = this;
    const {
      onStart
    } = this.props;
    if (initialCoordinates) {
      this.activated = true;
      this.documentListeners.add(EventName.Click, stopPropagation, {
        capture: true
      });
      this.removeTextSelection();
      this.documentListeners.add(EventName.SelectionChange, this.removeTextSelection);
      onStart(initialCoordinates);
    }
  }
  handleMove(event) {
    var _getEventCoordinates2;
    const {
      activated,
      initialCoordinates,
      props
    } = this;
    const {
      onMove,
      options: {
        activationConstraint
      }
    } = props;
    if (!initialCoordinates) {
      return;
    }
    const coordinates = (_getEventCoordinates2 = getEventCoordinates(event)) != null ? _getEventCoordinates2 : defaultCoordinates;
    const delta = subtract(initialCoordinates, coordinates);
    if (!activated && activationConstraint) {
      if (isDistanceConstraint(activationConstraint)) {
        if (activationConstraint.tolerance != null && hasExceededDistance(delta, activationConstraint.tolerance)) {
          return this.handleCancel();
        }
        if (hasExceededDistance(delta, activationConstraint.distance)) {
          return this.handleStart();
        }
      }
      if (isDelayConstraint(activationConstraint)) {
        if (hasExceededDistance(delta, activationConstraint.tolerance)) {
          return this.handleCancel();
        }
      }
      return;
    }
    if (event.cancelable) {
      event.preventDefault();
    }
    onMove(coordinates);
  }
  handleEnd() {
    const {
      onEnd
    } = this.props;
    this.detach();
    onEnd();
  }
  handleCancel() {
    const {
      onCancel
    } = this.props;
    this.detach();
    onCancel();
  }
  handleKeydown(event) {
    if (event.code === KeyboardCode.Esc) {
      this.handleCancel();
    }
  }
  removeTextSelection() {
    var _this$document$getSel;
    (_this$document$getSel = this.document.getSelection()) == null ? void 0 : _this$document$getSel.removeAllRanges();
  }
};
var events = {
  move: {
    name: "pointermove"
  },
  end: {
    name: "pointerup"
  }
};
var PointerSensor = class extends AbstractPointerSensor {
  constructor(props) {
    const {
      event
    } = props;
    const listenerTarget = getOwnerDocument(event.target);
    super(props, events, listenerTarget);
  }
};
PointerSensor.activators = [{
  eventName: "onPointerDown",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    if (!event.isPrimary || event.button !== 0) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var events$1 = {
  move: {
    name: "mousemove"
  },
  end: {
    name: "mouseup"
  }
};
var MouseButton;
(function(MouseButton2) {
  MouseButton2[MouseButton2["RightClick"] = 2] = "RightClick";
})(MouseButton || (MouseButton = {}));
var MouseSensor = class extends AbstractPointerSensor {
  constructor(props) {
    super(props, events$1, getOwnerDocument(props.event.target));
  }
};
MouseSensor.activators = [{
  eventName: "onMouseDown",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    if (event.button === MouseButton.RightClick) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var events$2 = {
  move: {
    name: "touchmove"
  },
  end: {
    name: "touchend"
  }
};
var TouchSensor = class extends AbstractPointerSensor {
  constructor(props) {
    super(props, events$2);
  }
  static setup() {
    window.addEventListener(events$2.move.name, noop2, {
      capture: false,
      passive: false
    });
    return function teardown() {
      window.removeEventListener(events$2.move.name, noop2);
    };
    function noop2() {
    }
  }
};
TouchSensor.activators = [{
  eventName: "onTouchStart",
  handler: (_ref, _ref2) => {
    let {
      nativeEvent: event
    } = _ref;
    let {
      onActivation
    } = _ref2;
    const {
      touches
    } = event;
    if (touches.length > 1) {
      return false;
    }
    onActivation == null ? void 0 : onActivation({
      event
    });
    return true;
  }
}];
var AutoScrollActivator;
(function(AutoScrollActivator2) {
  AutoScrollActivator2[AutoScrollActivator2["Pointer"] = 0] = "Pointer";
  AutoScrollActivator2[AutoScrollActivator2["DraggableRect"] = 1] = "DraggableRect";
})(AutoScrollActivator || (AutoScrollActivator = {}));
var TraversalOrder;
(function(TraversalOrder2) {
  TraversalOrder2[TraversalOrder2["TreeOrder"] = 0] = "TreeOrder";
  TraversalOrder2[TraversalOrder2["ReversedTreeOrder"] = 1] = "ReversedTreeOrder";
})(TraversalOrder || (TraversalOrder = {}));
function useAutoScroller(_ref) {
  let {
    acceleration,
    activator = AutoScrollActivator.Pointer,
    canScroll,
    draggingRect,
    enabled,
    interval = 5,
    order = TraversalOrder.TreeOrder,
    pointerCoordinates,
    scrollableAncestors,
    scrollableAncestorRects,
    delta,
    threshold
  } = _ref;
  const scrollIntent = useScrollIntent({
    delta,
    disabled: !enabled
  });
  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();
  const scrollSpeed = (0, import_react135.useRef)({
    x: 0,
    y: 0
  });
  const scrollDirection = (0, import_react135.useRef)({
    x: 0,
    y: 0
  });
  const rect = (0, import_react135.useMemo)(() => {
    switch (activator) {
      case AutoScrollActivator.Pointer:
        return pointerCoordinates ? {
          top: pointerCoordinates.y,
          bottom: pointerCoordinates.y,
          left: pointerCoordinates.x,
          right: pointerCoordinates.x
        } : null;
      case AutoScrollActivator.DraggableRect:
        return draggingRect;
    }
  }, [activator, draggingRect, pointerCoordinates]);
  const scrollContainerRef = (0, import_react135.useRef)(null);
  const autoScroll = (0, import_react135.useCallback)(() => {
    const scrollContainer = scrollContainerRef.current;
    if (!scrollContainer) {
      return;
    }
    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;
    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;
    scrollContainer.scrollBy(scrollLeft, scrollTop);
  }, []);
  const sortedScrollableAncestors = (0, import_react135.useMemo)(() => order === TraversalOrder.TreeOrder ? [...scrollableAncestors].reverse() : scrollableAncestors, [order, scrollableAncestors]);
  (0, import_react135.useEffect)(
    () => {
      if (!enabled || !scrollableAncestors.length || !rect) {
        clearAutoScrollInterval();
        return;
      }
      for (const scrollContainer of sortedScrollableAncestors) {
        if ((canScroll == null ? void 0 : canScroll(scrollContainer)) === false) {
          continue;
        }
        const index = scrollableAncestors.indexOf(scrollContainer);
        const scrollContainerRect = scrollableAncestorRects[index];
        if (!scrollContainerRect) {
          continue;
        }
        const {
          direction,
          speed
        } = getScrollDirectionAndSpeed(scrollContainer, scrollContainerRect, rect, acceleration, threshold);
        for (const axis of ["x", "y"]) {
          if (!scrollIntent[axis][direction[axis]]) {
            speed[axis] = 0;
            direction[axis] = 0;
          }
        }
        if (speed.x > 0 || speed.y > 0) {
          clearAutoScrollInterval();
          scrollContainerRef.current = scrollContainer;
          setAutoScrollInterval(autoScroll, interval);
          scrollSpeed.current = speed;
          scrollDirection.current = direction;
          return;
        }
      }
      scrollSpeed.current = {
        x: 0,
        y: 0
      };
      scrollDirection.current = {
        x: 0,
        y: 0
      };
      clearAutoScrollInterval();
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      acceleration,
      autoScroll,
      canScroll,
      clearAutoScrollInterval,
      enabled,
      interval,
      // eslint-disable-next-line react-hooks/exhaustive-deps
      JSON.stringify(rect),
      // eslint-disable-next-line react-hooks/exhaustive-deps
      JSON.stringify(scrollIntent),
      setAutoScrollInterval,
      scrollableAncestors,
      sortedScrollableAncestors,
      scrollableAncestorRects,
      // eslint-disable-next-line react-hooks/exhaustive-deps
      JSON.stringify(threshold)
    ]
  );
}
var defaultScrollIntent = {
  x: {
    [Direction.Backward]: false,
    [Direction.Forward]: false
  },
  y: {
    [Direction.Backward]: false,
    [Direction.Forward]: false
  }
};
function useScrollIntent(_ref2) {
  let {
    delta,
    disabled
  } = _ref2;
  const previousDelta = usePrevious2(delta);
  return useLazyMemo((previousIntent) => {
    if (disabled || !previousDelta || !previousIntent) {
      return defaultScrollIntent;
    }
    const direction = {
      x: Math.sign(delta.x - previousDelta.x),
      y: Math.sign(delta.y - previousDelta.y)
    };
    return {
      x: {
        [Direction.Backward]: previousIntent.x[Direction.Backward] || direction.x === -1,
        [Direction.Forward]: previousIntent.x[Direction.Forward] || direction.x === 1
      },
      y: {
        [Direction.Backward]: previousIntent.y[Direction.Backward] || direction.y === -1,
        [Direction.Forward]: previousIntent.y[Direction.Forward] || direction.y === 1
      }
    };
  }, [disabled, delta, previousDelta]);
}
function useCachedNode(draggableNodes, id) {
  const draggableNode = id !== null ? draggableNodes.get(id) : void 0;
  const node = draggableNode ? draggableNode.node.current : null;
  return useLazyMemo((cachedNode) => {
    var _ref;
    if (id === null) {
      return null;
    }
    return (_ref = node != null ? node : cachedNode) != null ? _ref : null;
  }, [node, id]);
}
function useCombineActivators(sensors, getSyntheticHandler) {
  return (0, import_react135.useMemo)(() => sensors.reduce((accumulator, sensor) => {
    const {
      sensor: Sensor
    } = sensor;
    const sensorActivators = Sensor.activators.map((activator) => ({
      eventName: activator.eventName,
      handler: getSyntheticHandler(activator.handler, sensor)
    }));
    return [...accumulator, ...sensorActivators];
  }, []), [sensors, getSyntheticHandler]);
}
var MeasuringStrategy;
(function(MeasuringStrategy2) {
  MeasuringStrategy2[MeasuringStrategy2["Always"] = 0] = "Always";
  MeasuringStrategy2[MeasuringStrategy2["BeforeDragging"] = 1] = "BeforeDragging";
  MeasuringStrategy2[MeasuringStrategy2["WhileDragging"] = 2] = "WhileDragging";
})(MeasuringStrategy || (MeasuringStrategy = {}));
var MeasuringFrequency;
(function(MeasuringFrequency2) {
  MeasuringFrequency2["Optimized"] = "optimized";
})(MeasuringFrequency || (MeasuringFrequency = {}));
var defaultValue = /* @__PURE__ */ new Map();
function useDroppableMeasuring(containers, _ref) {
  let {
    dragging,
    dependencies,
    config
  } = _ref;
  const [queue, setQueue] = (0, import_react135.useState)(null);
  const {
    frequency,
    measure,
    strategy
  } = config;
  const containersRef = (0, import_react135.useRef)(containers);
  const disabled = isDisabled();
  const disabledRef = useLatestValue(disabled);
  const measureDroppableContainers = (0, import_react135.useCallback)(function(ids2) {
    if (ids2 === void 0) {
      ids2 = [];
    }
    if (disabledRef.current) {
      return;
    }
    setQueue((value) => {
      if (value === null) {
        return ids2;
      }
      return value.concat(ids2.filter((id) => !value.includes(id)));
    });
  }, [disabledRef]);
  const timeoutId = (0, import_react135.useRef)(null);
  const droppableRects = useLazyMemo((previousValue) => {
    if (disabled && !dragging) {
      return defaultValue;
    }
    if (!previousValue || previousValue === defaultValue || containersRef.current !== containers || queue != null) {
      const map = /* @__PURE__ */ new Map();
      for (let container of containers) {
        if (!container) {
          continue;
        }
        if (queue && queue.length > 0 && !queue.includes(container.id) && container.rect.current) {
          map.set(container.id, container.rect.current);
          continue;
        }
        const node = container.node.current;
        const rect = node ? new Rect(measure(node), node) : null;
        container.rect.current = rect;
        if (rect) {
          map.set(container.id, rect);
        }
      }
      return map;
    }
    return previousValue;
  }, [containers, queue, dragging, disabled, measure]);
  (0, import_react135.useEffect)(() => {
    containersRef.current = containers;
  }, [containers]);
  (0, import_react135.useEffect)(
    () => {
      if (disabled) {
        return;
      }
      measureDroppableContainers();
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [dragging, disabled]
  );
  (0, import_react135.useEffect)(
    () => {
      if (queue && queue.length > 0) {
        setQueue(null);
      }
    },
    //eslint-disable-next-line react-hooks/exhaustive-deps
    [JSON.stringify(queue)]
  );
  (0, import_react135.useEffect)(
    () => {
      if (disabled || typeof frequency !== "number" || timeoutId.current !== null) {
        return;
      }
      timeoutId.current = setTimeout(() => {
        measureDroppableContainers();
        timeoutId.current = null;
      }, frequency);
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [frequency, disabled, measureDroppableContainers, ...dependencies]
  );
  return {
    droppableRects,
    measureDroppableContainers,
    measuringScheduled: queue != null
  };
  function isDisabled() {
    switch (strategy) {
      case MeasuringStrategy.Always:
        return false;
      case MeasuringStrategy.BeforeDragging:
        return dragging;
      default:
        return !dragging;
    }
  }
}
function useInitialValue(value, computeFn) {
  return useLazyMemo((previousValue) => {
    if (!value) {
      return null;
    }
    if (previousValue) {
      return previousValue;
    }
    return typeof computeFn === "function" ? computeFn(value) : value;
  }, [computeFn, value]);
}
function useInitialRect(node, measure) {
  return useInitialValue(node, measure);
}
function useMutationObserver(_ref) {
  let {
    callback,
    disabled
  } = _ref;
  const handleMutations = useEvent(callback);
  const mutationObserver = (0, import_react135.useMemo)(() => {
    if (disabled || typeof window === "undefined" || typeof window.MutationObserver === "undefined") {
      return void 0;
    }
    const {
      MutationObserver
    } = window;
    return new MutationObserver(handleMutations);
  }, [handleMutations, disabled]);
  (0, import_react135.useEffect)(() => {
    return () => mutationObserver == null ? void 0 : mutationObserver.disconnect();
  }, [mutationObserver]);
  return mutationObserver;
}
function useResizeObserver(_ref) {
  let {
    callback,
    disabled
  } = _ref;
  const handleResize = useEvent(callback);
  const resizeObserver = (0, import_react135.useMemo)(
    () => {
      if (disabled || typeof window === "undefined" || typeof window.ResizeObserver === "undefined") {
        return void 0;
      }
      const {
        ResizeObserver
      } = window;
      return new ResizeObserver(handleResize);
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [disabled]
  );
  (0, import_react135.useEffect)(() => {
    return () => resizeObserver == null ? void 0 : resizeObserver.disconnect();
  }, [resizeObserver]);
  return resizeObserver;
}
function defaultMeasure(element) {
  return new Rect(getClientRect(element), element);
}
function useRect(element, measure, fallbackRect) {
  if (measure === void 0) {
    measure = defaultMeasure;
  }
  const [rect, measureRect] = (0, import_react135.useReducer)(reducer2, null);
  const mutationObserver = useMutationObserver({
    callback(records) {
      if (!element) {
        return;
      }
      for (const record of records) {
        const {
          type,
          target
        } = record;
        if (type === "childList" && target instanceof HTMLElement && target.contains(element)) {
          measureRect();
          break;
        }
      }
    }
  });
  const resizeObserver = useResizeObserver({
    callback: measureRect
  });
  useIsomorphicLayoutEffect(() => {
    measureRect();
    if (element) {
      resizeObserver == null ? void 0 : resizeObserver.observe(element);
      mutationObserver == null ? void 0 : mutationObserver.observe(document.body, {
        childList: true,
        subtree: true
      });
    } else {
      resizeObserver == null ? void 0 : resizeObserver.disconnect();
      mutationObserver == null ? void 0 : mutationObserver.disconnect();
    }
  }, [element]);
  return rect;
  function reducer2(currentRect) {
    if (!element) {
      return null;
    }
    if (element.isConnected === false) {
      var _ref;
      return (_ref = currentRect != null ? currentRect : fallbackRect) != null ? _ref : null;
    }
    const newRect = measure(element);
    if (JSON.stringify(currentRect) === JSON.stringify(newRect)) {
      return currentRect;
    }
    return newRect;
  }
}
function useRectDelta(rect) {
  const initialRect = useInitialValue(rect);
  return getRectDelta(rect, initialRect);
}
var defaultValue$1 = [];
function useScrollableAncestors(node) {
  const previousNode = (0, import_react135.useRef)(node);
  const ancestors = useLazyMemo((previousValue) => {
    if (!node) {
      return defaultValue$1;
    }
    if (previousValue && previousValue !== defaultValue$1 && node && previousNode.current && node.parentNode === previousNode.current.parentNode) {
      return previousValue;
    }
    return getScrollableAncestors(node);
  }, [node]);
  (0, import_react135.useEffect)(() => {
    previousNode.current = node;
  }, [node]);
  return ancestors;
}
function useScrollOffsets(elements) {
  const [scrollCoordinates, setScrollCoordinates] = (0, import_react135.useState)(null);
  const prevElements = (0, import_react135.useRef)(elements);
  const handleScroll = (0, import_react135.useCallback)((event) => {
    const scrollingElement = getScrollableElement(event.target);
    if (!scrollingElement) {
      return;
    }
    setScrollCoordinates((scrollCoordinates2) => {
      if (!scrollCoordinates2) {
        return null;
      }
      scrollCoordinates2.set(scrollingElement, getScrollCoordinates(scrollingElement));
      return new Map(scrollCoordinates2);
    });
  }, []);
  (0, import_react135.useEffect)(() => {
    const previousElements = prevElements.current;
    if (elements !== previousElements) {
      cleanup(previousElements);
      const entries = elements.map((element) => {
        const scrollableElement = getScrollableElement(element);
        if (scrollableElement) {
          scrollableElement.addEventListener("scroll", handleScroll, {
            passive: true
          });
          return [scrollableElement, getScrollCoordinates(scrollableElement)];
        }
        return null;
      }).filter((entry) => entry != null);
      setScrollCoordinates(entries.length ? new Map(entries) : null);
      prevElements.current = elements;
    }
    return () => {
      cleanup(elements);
      cleanup(previousElements);
    };
    function cleanup(elements2) {
      elements2.forEach((element) => {
        const scrollableElement = getScrollableElement(element);
        scrollableElement == null ? void 0 : scrollableElement.removeEventListener("scroll", handleScroll);
      });
    }
  }, [handleScroll, elements]);
  return (0, import_react135.useMemo)(() => {
    if (elements.length) {
      return scrollCoordinates ? Array.from(scrollCoordinates.values()).reduce((acc, coordinates) => add(acc, coordinates), defaultCoordinates) : getScrollOffsets(elements);
    }
    return defaultCoordinates;
  }, [elements, scrollCoordinates]);
}
function useScrollOffsetsDelta(scrollOffsets, dependencies) {
  if (dependencies === void 0) {
    dependencies = [];
  }
  const initialScrollOffsets = (0, import_react135.useRef)(null);
  (0, import_react135.useEffect)(
    () => {
      initialScrollOffsets.current = null;
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    dependencies
  );
  (0, import_react135.useEffect)(() => {
    const hasScrollOffsets = scrollOffsets !== defaultCoordinates;
    if (hasScrollOffsets && !initialScrollOffsets.current) {
      initialScrollOffsets.current = scrollOffsets;
    }
    if (!hasScrollOffsets && initialScrollOffsets.current) {
      initialScrollOffsets.current = null;
    }
  }, [scrollOffsets]);
  return initialScrollOffsets.current ? subtract(scrollOffsets, initialScrollOffsets.current) : defaultCoordinates;
}
function useSensorSetup(sensors) {
  (0, import_react135.useEffect)(
    () => {
      if (!canUseDOM) {
        return;
      }
      const teardownFns = sensors.map((_ref) => {
        let {
          sensor
        } = _ref;
        return sensor.setup == null ? void 0 : sensor.setup();
      });
      return () => {
        for (const teardown of teardownFns) {
          teardown == null ? void 0 : teardown();
        }
      };
    },
    // TO-DO: Sensors length could theoretically change which would not be a valid dependency
    // eslint-disable-next-line react-hooks/exhaustive-deps
    sensors.map((_ref2) => {
      let {
        sensor
      } = _ref2;
      return sensor;
    })
  );
}
function useSyntheticListeners(listeners, id) {
  return (0, import_react135.useMemo)(() => {
    return listeners.reduce((acc, _ref) => {
      let {
        eventName,
        handler
      } = _ref;
      acc[eventName] = (event) => {
        handler(event, id);
      };
      return acc;
    }, {});
  }, [listeners, id]);
}
function useWindowRect(element) {
  return (0, import_react135.useMemo)(() => element ? getWindowClientRect(element) : null, [element]);
}
var defaultValue$2 = [];
function useRects(elements, measure) {
  if (measure === void 0) {
    measure = getClientRect;
  }
  const [firstElement] = elements;
  const windowRect = useWindowRect(firstElement ? getWindow(firstElement) : null);
  const [rects, measureRects] = (0, import_react135.useReducer)(reducer2, defaultValue$2);
  const resizeObserver = useResizeObserver({
    callback: measureRects
  });
  if (elements.length > 0 && rects === defaultValue$2) {
    measureRects();
  }
  useIsomorphicLayoutEffect(() => {
    if (elements.length) {
      elements.forEach((element) => resizeObserver == null ? void 0 : resizeObserver.observe(element));
    } else {
      resizeObserver == null ? void 0 : resizeObserver.disconnect();
      measureRects();
    }
  }, [elements]);
  return rects;
  function reducer2() {
    if (!elements.length) {
      return defaultValue$2;
    }
    return elements.map((element) => isDocumentScrollingElement(element) ? windowRect : new Rect(measure(element), element));
  }
}
function getMeasurableNode(node) {
  if (!node) {
    return null;
  }
  if (node.children.length > 1) {
    return node;
  }
  const firstChild = node.children[0];
  return isHTMLElement(firstChild) ? firstChild : node;
}
function useDragOverlayMeasuring(_ref) {
  let {
    measure
  } = _ref;
  const [rect, setRect] = (0, import_react135.useState)(null);
  const handleResize = (0, import_react135.useCallback)((entries) => {
    for (const {
      target
    } of entries) {
      if (isHTMLElement(target)) {
        setRect((rect2) => {
          const newRect = measure(target);
          return rect2 ? {
            ...rect2,
            width: newRect.width,
            height: newRect.height
          } : newRect;
        });
        break;
      }
    }
  }, [measure]);
  const resizeObserver = useResizeObserver({
    callback: handleResize
  });
  const handleNodeChange = (0, import_react135.useCallback)((element) => {
    const node = getMeasurableNode(element);
    resizeObserver == null ? void 0 : resizeObserver.disconnect();
    if (node) {
      resizeObserver == null ? void 0 : resizeObserver.observe(node);
    }
    setRect(node ? measure(node) : null);
  }, [measure, resizeObserver]);
  const [nodeRef, setRef] = useNodeRef(handleNodeChange);
  return (0, import_react135.useMemo)(() => ({
    nodeRef,
    rect,
    setRef
  }), [rect, nodeRef, setRef]);
}
var defaultSensors = [{
  sensor: PointerSensor,
  options: {}
}, {
  sensor: KeyboardSensor,
  options: {}
}];
var defaultData = {
  current: {}
};
var defaultMeasuringConfiguration = {
  draggable: {
    measure: getTransformAgnosticClientRect
  },
  droppable: {
    measure: getTransformAgnosticClientRect,
    strategy: MeasuringStrategy.WhileDragging,
    frequency: MeasuringFrequency.Optimized
  },
  dragOverlay: {
    measure: getClientRect
  }
};
var DroppableContainersMap = class extends Map {
  get(id) {
    var _super$get;
    return id != null ? (_super$get = super.get(id)) != null ? _super$get : void 0 : void 0;
  }
  toArray() {
    return Array.from(this.values());
  }
  getEnabled() {
    return this.toArray().filter((_ref) => {
      let {
        disabled
      } = _ref;
      return !disabled;
    });
  }
  getNodeFor(id) {
    var _this$get$node$curren, _this$get;
    return (_this$get$node$curren = (_this$get = this.get(id)) == null ? void 0 : _this$get.node.current) != null ? _this$get$node$curren : void 0;
  }
};
var defaultPublicContext = {
  activatorEvent: null,
  active: null,
  activeNode: null,
  activeNodeRect: null,
  collisions: null,
  containerNodeRect: null,
  draggableNodes: /* @__PURE__ */ new Map(),
  droppableRects: /* @__PURE__ */ new Map(),
  droppableContainers: new DroppableContainersMap(),
  over: null,
  dragOverlay: {
    nodeRef: {
      current: null
    },
    rect: null,
    setRef: noop
  },
  scrollableAncestors: [],
  scrollableAncestorRects: [],
  measuringConfiguration: defaultMeasuringConfiguration,
  measureDroppableContainers: noop,
  windowRect: null,
  measuringScheduled: false
};
var defaultInternalContext = {
  activatorEvent: null,
  activators: [],
  active: null,
  activeNodeRect: null,
  ariaDescribedById: {
    draggable: ""
  },
  dispatch: noop,
  draggableNodes: /* @__PURE__ */ new Map(),
  over: null,
  measureDroppableContainers: noop
};
var InternalContext = (0, import_react135.createContext)(defaultInternalContext);
var PublicContext = (0, import_react135.createContext)(defaultPublicContext);
function getInitialState() {
  return {
    draggable: {
      active: null,
      initialCoordinates: {
        x: 0,
        y: 0
      },
      nodes: /* @__PURE__ */ new Map(),
      translate: {
        x: 0,
        y: 0
      }
    },
    droppable: {
      containers: new DroppableContainersMap()
    }
  };
}
function reducer(state, action) {
  switch (action.type) {
    case Action.DragStart:
      return {
        ...state,
        draggable: {
          ...state.draggable,
          initialCoordinates: action.initialCoordinates,
          active: action.active
        }
      };
    case Action.DragMove:
      if (!state.draggable.active) {
        return state;
      }
      return {
        ...state,
        draggable: {
          ...state.draggable,
          translate: {
            x: action.coordinates.x - state.draggable.initialCoordinates.x,
            y: action.coordinates.y - state.draggable.initialCoordinates.y
          }
        }
      };
    case Action.DragEnd:
    case Action.DragCancel:
      return {
        ...state,
        draggable: {
          ...state.draggable,
          active: null,
          initialCoordinates: {
            x: 0,
            y: 0
          },
          translate: {
            x: 0,
            y: 0
          }
        }
      };
    case Action.RegisterDroppable: {
      const {
        element
      } = action;
      const {
        id
      } = element;
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.set(id, element);
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    case Action.SetDroppableDisabled: {
      const {
        id,
        key: key2,
        disabled
      } = action;
      const element = state.droppable.containers.get(id);
      if (!element || key2 !== element.key) {
        return state;
      }
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.set(id, {
        ...element,
        disabled
      });
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    case Action.UnregisterDroppable: {
      const {
        id,
        key: key2
      } = action;
      const element = state.droppable.containers.get(id);
      if (!element || key2 !== element.key) {
        return state;
      }
      const containers = new DroppableContainersMap(state.droppable.containers);
      containers.delete(id);
      return {
        ...state,
        droppable: {
          ...state.droppable,
          containers
        }
      };
    }
    default: {
      return state;
    }
  }
}
function RestoreFocus(_ref) {
  let {
    disabled
  } = _ref;
  const {
    active,
    activatorEvent,
    draggableNodes
  } = (0, import_react135.useContext)(InternalContext);
  const previousActivatorEvent = usePrevious2(activatorEvent);
  const previousActiveId = usePrevious2(active == null ? void 0 : active.id);
  (0, import_react135.useEffect)(() => {
    if (disabled) {
      return;
    }
    if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {
      if (!isKeyboardEvent(previousActivatorEvent)) {
        return;
      }
      if (document.activeElement === previousActivatorEvent.target) {
        return;
      }
      const draggableNode = draggableNodes.get(previousActiveId);
      if (!draggableNode) {
        return;
      }
      const {
        activatorNode,
        node
      } = draggableNode;
      if (!activatorNode.current && !node.current) {
        return;
      }
      requestAnimationFrame(() => {
        for (const element of [activatorNode.current, node.current]) {
          if (!element) {
            continue;
          }
          const focusableNode = findFirstFocusableNode(element);
          if (focusableNode) {
            focusableNode.focus();
            break;
          }
        }
      });
    }
  }, [activatorEvent, disabled, draggableNodes, previousActiveId, previousActivatorEvent]);
  return null;
}
function applyModifiers(modifiers, _ref) {
  let {
    transform,
    ...args
  } = _ref;
  return modifiers != null && modifiers.length ? modifiers.reduce((accumulator, modifier) => {
    return modifier({
      transform: accumulator,
      ...args
    });
  }, transform) : transform;
}
function useMeasuringConfiguration(config) {
  return (0, import_react135.useMemo)(
    () => ({
      draggable: {
        ...defaultMeasuringConfiguration.draggable,
        ...config == null ? void 0 : config.draggable
      },
      droppable: {
        ...defaultMeasuringConfiguration.droppable,
        ...config == null ? void 0 : config.droppable
      },
      dragOverlay: {
        ...defaultMeasuringConfiguration.dragOverlay,
        ...config == null ? void 0 : config.dragOverlay
      }
    }),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [config == null ? void 0 : config.draggable, config == null ? void 0 : config.droppable, config == null ? void 0 : config.dragOverlay]
  );
}
function useLayoutShiftScrollCompensation(_ref) {
  let {
    activeNode,
    measure,
    initialRect,
    config = true
  } = _ref;
  const initialized = (0, import_react135.useRef)(false);
  const {
    x,
    y
  } = typeof config === "boolean" ? {
    x: config,
    y: config
  } : config;
  useIsomorphicLayoutEffect(() => {
    const disabled = !x && !y;
    if (disabled || !activeNode) {
      initialized.current = false;
      return;
    }
    if (initialized.current || !initialRect) {
      return;
    }
    const node = activeNode == null ? void 0 : activeNode.node.current;
    if (!node || node.isConnected === false) {
      return;
    }
    const rect = measure(node);
    const rectDelta = getRectDelta(rect, initialRect);
    if (!x) {
      rectDelta.x = 0;
    }
    if (!y) {
      rectDelta.y = 0;
    }
    initialized.current = true;
    if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {
      const firstScrollableAncestor = getFirstScrollableAncestor(node);
      if (firstScrollableAncestor) {
        firstScrollableAncestor.scrollBy({
          top: rectDelta.y,
          left: rectDelta.x
        });
      }
    }
  }, [activeNode, x, y, initialRect, measure]);
}
var ActiveDraggableContext = (0, import_react135.createContext)({
  ...defaultCoordinates,
  scaleX: 1,
  scaleY: 1
});
var Status2;
(function(Status3) {
  Status3[Status3["Uninitialized"] = 0] = "Uninitialized";
  Status3[Status3["Initializing"] = 1] = "Initializing";
  Status3[Status3["Initialized"] = 2] = "Initialized";
})(Status2 || (Status2 = {}));
var DndContext = (0, import_react135.memo)(function DndContext2(_ref) {
  var _sensorContext$curren, _dragOverlay$nodeRef$, _dragOverlay$rect, _over$rect;
  let {
    id,
    accessibility,
    autoScroll = true,
    children,
    sensors = defaultSensors,
    collisionDetection = rectIntersection,
    measuring,
    modifiers,
    ...props
  } = _ref;
  const store = (0, import_react135.useReducer)(reducer, void 0, getInitialState);
  const [state, dispatch] = store;
  const [dispatchMonitorEvent, registerMonitorListener] = useDndMonitorProvider();
  const [status, setStatus] = (0, import_react135.useState)(Status2.Uninitialized);
  const isInitialized = status === Status2.Initialized;
  const {
    draggable: {
      active: activeId,
      nodes: draggableNodes,
      translate
    },
    droppable: {
      containers: droppableContainers
    }
  } = state;
  const node = activeId ? draggableNodes.get(activeId) : null;
  const activeRects = (0, import_react135.useRef)({
    initial: null,
    translated: null
  });
  const active = (0, import_react135.useMemo)(() => {
    var _node$data;
    return activeId != null ? {
      id: activeId,
      // It's possible for the active node to unmount while dragging
      data: (_node$data = node == null ? void 0 : node.data) != null ? _node$data : defaultData,
      rect: activeRects
    } : null;
  }, [activeId, node]);
  const activeRef = (0, import_react135.useRef)(null);
  const [activeSensor, setActiveSensor] = (0, import_react135.useState)(null);
  const [activatorEvent, setActivatorEvent] = (0, import_react135.useState)(null);
  const latestProps = useLatestValue(props, Object.values(props));
  const draggableDescribedById = useUniqueId("DndDescribedBy", id);
  const enabledDroppableContainers = (0, import_react135.useMemo)(() => droppableContainers.getEnabled(), [droppableContainers]);
  const measuringConfiguration = useMeasuringConfiguration(measuring);
  const {
    droppableRects,
    measureDroppableContainers,
    measuringScheduled
  } = useDroppableMeasuring(enabledDroppableContainers, {
    dragging: isInitialized,
    dependencies: [translate.x, translate.y],
    config: measuringConfiguration.droppable
  });
  const activeNode = useCachedNode(draggableNodes, activeId);
  const activationCoordinates = (0, import_react135.useMemo)(() => activatorEvent ? getEventCoordinates(activatorEvent) : null, [activatorEvent]);
  const autoScrollOptions = getAutoScrollerOptions();
  const initialActiveNodeRect = useInitialRect(activeNode, measuringConfiguration.draggable.measure);
  useLayoutShiftScrollCompensation({
    activeNode: activeId ? draggableNodes.get(activeId) : null,
    config: autoScrollOptions.layoutShiftCompensation,
    initialRect: initialActiveNodeRect,
    measure: measuringConfiguration.draggable.measure
  });
  const activeNodeRect = useRect(activeNode, measuringConfiguration.draggable.measure, initialActiveNodeRect);
  const containerNodeRect = useRect(activeNode ? activeNode.parentElement : null);
  const sensorContext = (0, import_react135.useRef)({
    activatorEvent: null,
    active: null,
    activeNode,
    collisionRect: null,
    collisions: null,
    droppableRects,
    draggableNodes,
    draggingNode: null,
    draggingNodeRect: null,
    droppableContainers,
    over: null,
    scrollableAncestors: [],
    scrollAdjustedTranslate: null
  });
  const overNode = droppableContainers.getNodeFor((_sensorContext$curren = sensorContext.current.over) == null ? void 0 : _sensorContext$curren.id);
  const dragOverlay = useDragOverlayMeasuring({
    measure: measuringConfiguration.dragOverlay.measure
  });
  const draggingNode = (_dragOverlay$nodeRef$ = dragOverlay.nodeRef.current) != null ? _dragOverlay$nodeRef$ : activeNode;
  const draggingNodeRect = isInitialized ? (_dragOverlay$rect = dragOverlay.rect) != null ? _dragOverlay$rect : activeNodeRect : null;
  const usesDragOverlay = Boolean(dragOverlay.nodeRef.current && dragOverlay.rect);
  const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect);
  const windowRect = useWindowRect(draggingNode ? getWindow(draggingNode) : null);
  const scrollableAncestors = useScrollableAncestors(isInitialized ? overNode != null ? overNode : activeNode : null);
  const scrollableAncestorRects = useRects(scrollableAncestors);
  const modifiedTranslate = applyModifiers(modifiers, {
    transform: {
      x: translate.x - nodeRectDelta.x,
      y: translate.y - nodeRectDelta.y,
      scaleX: 1,
      scaleY: 1
    },
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggingNodeRect,
    over: sensorContext.current.over,
    overlayNodeRect: dragOverlay.rect,
    scrollableAncestors,
    scrollableAncestorRects,
    windowRect
  });
  const pointerCoordinates = activationCoordinates ? add(activationCoordinates, translate) : null;
  const scrollOffsets = useScrollOffsets(scrollableAncestors);
  const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets);
  const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [activeNodeRect]);
  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);
  const collisionRect = draggingNodeRect ? getAdjustedRect(draggingNodeRect, modifiedTranslate) : null;
  const collisions = active && collisionRect ? collisionDetection({
    active,
    collisionRect,
    droppableRects,
    droppableContainers: enabledDroppableContainers,
    pointerCoordinates
  }) : null;
  const overId = getFirstCollision(collisions, "id");
  const [over, setOver] = (0, import_react135.useState)(null);
  const appliedTranslate = usesDragOverlay ? modifiedTranslate : add(modifiedTranslate, activeNodeScrollDelta);
  const transform = adjustScale(appliedTranslate, (_over$rect = over == null ? void 0 : over.rect) != null ? _over$rect : null, activeNodeRect);
  const instantiateSensor = (0, import_react135.useCallback)(
    (event, _ref2) => {
      let {
        sensor: Sensor,
        options
      } = _ref2;
      if (activeRef.current == null) {
        return;
      }
      const activeNode2 = draggableNodes.get(activeRef.current);
      if (!activeNode2) {
        return;
      }
      const activatorEvent2 = event.nativeEvent;
      const sensorInstance = new Sensor({
        active: activeRef.current,
        activeNode: activeNode2,
        event: activatorEvent2,
        options,
        // Sensors need to be instantiated with refs for arguments that change over time
        // otherwise they are frozen in time with the stale arguments
        context: sensorContext,
        onStart(initialCoordinates) {
          const id2 = activeRef.current;
          if (id2 == null) {
            return;
          }
          const draggableNode = draggableNodes.get(id2);
          if (!draggableNode) {
            return;
          }
          const {
            onDragStart
          } = latestProps.current;
          const event2 = {
            active: {
              id: id2,
              data: draggableNode.data,
              rect: activeRects
            }
          };
          (0, import_react_dom4.unstable_batchedUpdates)(() => {
            onDragStart == null ? void 0 : onDragStart(event2);
            setStatus(Status2.Initializing);
            dispatch({
              type: Action.DragStart,
              initialCoordinates,
              active: id2
            });
            dispatchMonitorEvent({
              type: "onDragStart",
              event: event2
            });
          });
        },
        onMove(coordinates) {
          dispatch({
            type: Action.DragMove,
            coordinates
          });
        },
        onEnd: createHandler(Action.DragEnd),
        onCancel: createHandler(Action.DragCancel)
      });
      (0, import_react_dom4.unstable_batchedUpdates)(() => {
        setActiveSensor(sensorInstance);
        setActivatorEvent(event.nativeEvent);
      });
      function createHandler(type) {
        return async function handler() {
          const {
            active: active2,
            collisions: collisions2,
            over: over2,
            scrollAdjustedTranslate: scrollAdjustedTranslate2
          } = sensorContext.current;
          let event2 = null;
          if (active2 && scrollAdjustedTranslate2) {
            const {
              cancelDrop
            } = latestProps.current;
            event2 = {
              activatorEvent: activatorEvent2,
              active: active2,
              collisions: collisions2,
              delta: scrollAdjustedTranslate2,
              over: over2
            };
            if (type === Action.DragEnd && typeof cancelDrop === "function") {
              const shouldCancel = await Promise.resolve(cancelDrop(event2));
              if (shouldCancel) {
                type = Action.DragCancel;
              }
            }
          }
          activeRef.current = null;
          (0, import_react_dom4.unstable_batchedUpdates)(() => {
            dispatch({
              type
            });
            setStatus(Status2.Uninitialized);
            setOver(null);
            setActiveSensor(null);
            setActivatorEvent(null);
            const eventName = type === Action.DragEnd ? "onDragEnd" : "onDragCancel";
            if (event2) {
              const handler2 = latestProps.current[eventName];
              handler2 == null ? void 0 : handler2(event2);
              dispatchMonitorEvent({
                type: eventName,
                event: event2
              });
            }
          });
        };
      }
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [draggableNodes]
  );
  const bindActivatorToSensorInstantiator = (0, import_react135.useCallback)((handler, sensor) => {
    return (event, active2) => {
      const nativeEvent = event.nativeEvent;
      const activeDraggableNode = draggableNodes.get(active2);
      if (
        // Another sensor is already instantiating
        activeRef.current !== null || // No active draggable
        !activeDraggableNode || // Event has already been captured
        nativeEvent.dndKit || nativeEvent.defaultPrevented
      ) {
        return;
      }
      const activationContext = {
        active: activeDraggableNode
      };
      const shouldActivate = handler(event, sensor.options, activationContext);
      if (shouldActivate === true) {
        nativeEvent.dndKit = {
          capturedBy: sensor.sensor
        };
        activeRef.current = active2;
        instantiateSensor(event, sensor);
      }
    };
  }, [draggableNodes, instantiateSensor]);
  const activators = useCombineActivators(sensors, bindActivatorToSensorInstantiator);
  useSensorSetup(sensors);
  useIsomorphicLayoutEffect(() => {
    if (activeNodeRect && status === Status2.Initializing) {
      setStatus(Status2.Initialized);
    }
  }, [activeNodeRect, status]);
  (0, import_react135.useEffect)(
    () => {
      const {
        onDragMove
      } = latestProps.current;
      const {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        over: over2
      } = sensorContext.current;
      if (!active2 || !activatorEvent2) {
        return;
      }
      const event = {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        delta: {
          x: scrollAdjustedTranslate.x,
          y: scrollAdjustedTranslate.y
        },
        over: over2
      };
      (0, import_react_dom4.unstable_batchedUpdates)(() => {
        onDragMove == null ? void 0 : onDragMove(event);
        dispatchMonitorEvent({
          type: "onDragMove",
          event
        });
      });
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]
  );
  (0, import_react135.useEffect)(
    () => {
      const {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        droppableContainers: droppableContainers2,
        scrollAdjustedTranslate: scrollAdjustedTranslate2
      } = sensorContext.current;
      if (!active2 || activeRef.current == null || !activatorEvent2 || !scrollAdjustedTranslate2) {
        return;
      }
      const {
        onDragOver
      } = latestProps.current;
      const overContainer = droppableContainers2.get(overId);
      const over2 = overContainer && overContainer.rect.current ? {
        id: overContainer.id,
        rect: overContainer.rect.current,
        data: overContainer.data,
        disabled: overContainer.disabled
      } : null;
      const event = {
        active: active2,
        activatorEvent: activatorEvent2,
        collisions: collisions2,
        delta: {
          x: scrollAdjustedTranslate2.x,
          y: scrollAdjustedTranslate2.y
        },
        over: over2
      };
      (0, import_react_dom4.unstable_batchedUpdates)(() => {
        setOver(over2);
        onDragOver == null ? void 0 : onDragOver(event);
        dispatchMonitorEvent({
          type: "onDragOver",
          event
        });
      });
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [overId]
  );
  useIsomorphicLayoutEffect(() => {
    sensorContext.current = {
      activatorEvent,
      active,
      activeNode,
      collisionRect,
      collisions,
      droppableRects,
      draggableNodes,
      draggingNode,
      draggingNodeRect,
      droppableContainers,
      over,
      scrollableAncestors,
      scrollAdjustedTranslate
    };
    activeRects.current = {
      initial: draggingNodeRect,
      translated: collisionRect
    };
  }, [active, activeNode, collisions, collisionRect, draggableNodes, draggingNode, draggingNodeRect, droppableRects, droppableContainers, over, scrollableAncestors, scrollAdjustedTranslate]);
  useAutoScroller({
    ...autoScrollOptions,
    delta: translate,
    draggingRect: collisionRect,
    pointerCoordinates,
    scrollableAncestors,
    scrollableAncestorRects
  });
  const publicContext = (0, import_react135.useMemo)(() => {
    const context = {
      active,
      activeNode,
      activeNodeRect,
      activatorEvent,
      collisions,
      containerNodeRect,
      dragOverlay,
      draggableNodes,
      droppableContainers,
      droppableRects,
      over,
      measureDroppableContainers,
      scrollableAncestors,
      scrollableAncestorRects,
      measuringConfiguration,
      measuringScheduled,
      windowRect
    };
    return context;
  }, [active, activeNode, activeNodeRect, activatorEvent, collisions, containerNodeRect, dragOverlay, draggableNodes, droppableContainers, droppableRects, over, measureDroppableContainers, scrollableAncestors, scrollableAncestorRects, measuringConfiguration, measuringScheduled, windowRect]);
  const internalContext = (0, import_react135.useMemo)(() => {
    const context = {
      activatorEvent,
      activators,
      active,
      activeNodeRect,
      ariaDescribedById: {
        draggable: draggableDescribedById
      },
      dispatch,
      draggableNodes,
      over,
      measureDroppableContainers
    };
    return context;
  }, [activatorEvent, activators, active, activeNodeRect, dispatch, draggableDescribedById, draggableNodes, over, measureDroppableContainers]);
  return import_react135.default.createElement(DndMonitorContext.Provider, {
    value: registerMonitorListener
  }, import_react135.default.createElement(InternalContext.Provider, {
    value: internalContext
  }, import_react135.default.createElement(PublicContext.Provider, {
    value: publicContext
  }, import_react135.default.createElement(ActiveDraggableContext.Provider, {
    value: transform
  }, children)), import_react135.default.createElement(RestoreFocus, {
    disabled: (accessibility == null ? void 0 : accessibility.restoreFocus) === false
  })), import_react135.default.createElement(Accessibility, {
    ...accessibility,
    hiddenTextDescribedById: draggableDescribedById
  }));
  function getAutoScrollerOptions() {
    const activeSensorDisablesAutoscroll = (activeSensor == null ? void 0 : activeSensor.autoScrollEnabled) === false;
    const autoScrollGloballyDisabled = typeof autoScroll === "object" ? autoScroll.enabled === false : autoScroll === false;
    const enabled = isInitialized && !activeSensorDisablesAutoscroll && !autoScrollGloballyDisabled;
    if (typeof autoScroll === "object") {
      return {
        ...autoScroll,
        enabled
      };
    }
    return {
      enabled
    };
  }
});
var NullContext = (0, import_react135.createContext)(null);
var defaultRole = "button";
var ID_PREFIX = "Droppable";
function useDraggable(_ref) {
  let {
    id,
    data,
    disabled = false,
    attributes
  } = _ref;
  const key2 = useUniqueId(ID_PREFIX);
  const {
    activators,
    activatorEvent,
    active,
    activeNodeRect,
    ariaDescribedById,
    draggableNodes,
    over
  } = (0, import_react135.useContext)(InternalContext);
  const {
    role = defaultRole,
    roleDescription = "draggable",
    tabIndex = 0
  } = attributes != null ? attributes : {};
  const isDragging = (active == null ? void 0 : active.id) === id;
  const transform = (0, import_react135.useContext)(isDragging ? ActiveDraggableContext : NullContext);
  const [node, setNodeRef] = useNodeRef();
  const [activatorNode, setActivatorNodeRef] = useNodeRef();
  const listeners = useSyntheticListeners(activators, id);
  const dataRef = useLatestValue(data);
  useIsomorphicLayoutEffect(
    () => {
      draggableNodes.set(id, {
        id,
        key: key2,
        node,
        activatorNode,
        data: dataRef
      });
      return () => {
        const node2 = draggableNodes.get(id);
        if (node2 && node2.key === key2) {
          draggableNodes.delete(id);
        }
      };
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [draggableNodes, id]
  );
  const memoizedAttributes = (0, import_react135.useMemo)(() => ({
    role,
    tabIndex,
    "aria-disabled": disabled,
    "aria-pressed": isDragging && role === defaultRole ? true : void 0,
    "aria-roledescription": roleDescription,
    "aria-describedby": ariaDescribedById.draggable
  }), [disabled, role, tabIndex, isDragging, roleDescription, ariaDescribedById.draggable]);
  return {
    active,
    activatorEvent,
    activeNodeRect,
    attributes: memoizedAttributes,
    isDragging,
    listeners: disabled ? void 0 : listeners,
    node,
    over,
    setNodeRef,
    setActivatorNodeRef,
    transform
  };
}
function useDndContext() {
  return (0, import_react135.useContext)(PublicContext);
}
var ID_PREFIX$1 = "Droppable";
var defaultResizeObserverConfig = {
  timeout: 25
};
function useDroppable(_ref) {
  let {
    data,
    disabled = false,
    id,
    resizeObserverConfig
  } = _ref;
  const key2 = useUniqueId(ID_PREFIX$1);
  const {
    active,
    dispatch,
    over,
    measureDroppableContainers
  } = (0, import_react135.useContext)(InternalContext);
  const previous = (0, import_react135.useRef)({
    disabled
  });
  const resizeObserverConnected = (0, import_react135.useRef)(false);
  const rect = (0, import_react135.useRef)(null);
  const callbackId = (0, import_react135.useRef)(null);
  const {
    disabled: resizeObserverDisabled,
    updateMeasurementsFor,
    timeout: resizeObserverTimeout
  } = {
    ...defaultResizeObserverConfig,
    ...resizeObserverConfig
  };
  const ids2 = useLatestValue(updateMeasurementsFor != null ? updateMeasurementsFor : id);
  const handleResize = (0, import_react135.useCallback)(
    () => {
      if (!resizeObserverConnected.current) {
        resizeObserverConnected.current = true;
        return;
      }
      if (callbackId.current != null) {
        clearTimeout(callbackId.current);
      }
      callbackId.current = setTimeout(() => {
        measureDroppableContainers(Array.isArray(ids2.current) ? ids2.current : [ids2.current]);
        callbackId.current = null;
      }, resizeObserverTimeout);
    },
    //eslint-disable-next-line react-hooks/exhaustive-deps
    [resizeObserverTimeout]
  );
  const resizeObserver = useResizeObserver({
    callback: handleResize,
    disabled: resizeObserverDisabled || !active
  });
  const handleNodeChange = (0, import_react135.useCallback)((newElement, previousElement) => {
    if (!resizeObserver) {
      return;
    }
    if (previousElement) {
      resizeObserver.unobserve(previousElement);
      resizeObserverConnected.current = false;
    }
    if (newElement) {
      resizeObserver.observe(newElement);
    }
  }, [resizeObserver]);
  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);
  const dataRef = useLatestValue(data);
  (0, import_react135.useEffect)(() => {
    if (!resizeObserver || !nodeRef.current) {
      return;
    }
    resizeObserver.disconnect();
    resizeObserverConnected.current = false;
    resizeObserver.observe(nodeRef.current);
  }, [nodeRef, resizeObserver]);
  useIsomorphicLayoutEffect(
    () => {
      dispatch({
        type: Action.RegisterDroppable,
        element: {
          id,
          key: key2,
          disabled,
          node: nodeRef,
          rect,
          data: dataRef
        }
      });
      return () => dispatch({
        type: Action.UnregisterDroppable,
        key: key2,
        id
      });
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [id]
  );
  (0, import_react135.useEffect)(() => {
    if (disabled !== previous.current.disabled) {
      dispatch({
        type: Action.SetDroppableDisabled,
        id,
        key: key2,
        disabled
      });
      previous.current.disabled = disabled;
    }
  }, [id, key2, disabled, dispatch]);
  return {
    active,
    rect,
    isOver: (over == null ? void 0 : over.id) === id,
    node: nodeRef,
    over,
    setNodeRef
  };
}
function AnimationManager(_ref) {
  let {
    animation,
    children
  } = _ref;
  const [clonedChildren, setClonedChildren] = (0, import_react135.useState)(null);
  const [element, setElement] = (0, import_react135.useState)(null);
  const previousChildren = usePrevious2(children);
  if (!children && !clonedChildren && previousChildren) {
    setClonedChildren(previousChildren);
  }
  useIsomorphicLayoutEffect(() => {
    if (!element) {
      return;
    }
    const key2 = clonedChildren == null ? void 0 : clonedChildren.key;
    const id = clonedChildren == null ? void 0 : clonedChildren.props.id;
    if (key2 == null || id == null) {
      setClonedChildren(null);
      return;
    }
    Promise.resolve(animation(id, element)).then(() => {
      setClonedChildren(null);
    });
  }, [animation, clonedChildren, element]);
  return import_react135.default.createElement(import_react135.default.Fragment, null, children, clonedChildren ? (0, import_react135.cloneElement)(clonedChildren, {
    ref: setElement
  }) : null);
}
var defaultTransform = {
  x: 0,
  y: 0,
  scaleX: 1,
  scaleY: 1
};
function NullifiedContextProvider(_ref) {
  let {
    children
  } = _ref;
  return import_react135.default.createElement(InternalContext.Provider, {
    value: defaultInternalContext
  }, import_react135.default.createElement(ActiveDraggableContext.Provider, {
    value: defaultTransform
  }, children));
}
var baseStyles = {
  position: "fixed",
  touchAction: "none"
};
var defaultTransition = (activatorEvent) => {
  const isKeyboardActivator = isKeyboardEvent(activatorEvent);
  return isKeyboardActivator ? "transform 250ms ease" : void 0;
};
var PositionedOverlay = (0, import_react135.forwardRef)((_ref, ref) => {
  let {
    as,
    activatorEvent,
    adjustScale: adjustScale2,
    children,
    className,
    rect,
    style,
    transform,
    transition = defaultTransition
  } = _ref;
  if (!rect) {
    return null;
  }
  const scaleAdjustedTransform = adjustScale2 ? transform : {
    ...transform,
    scaleX: 1,
    scaleY: 1
  };
  const styles = {
    ...baseStyles,
    width: rect.width,
    height: rect.height,
    top: rect.top,
    left: rect.left,
    transform: CSS.Transform.toString(scaleAdjustedTransform),
    transformOrigin: adjustScale2 && activatorEvent ? getRelativeTransformOrigin(activatorEvent, rect) : void 0,
    transition: typeof transition === "function" ? transition(activatorEvent) : transition,
    ...style
  };
  return import_react135.default.createElement(as, {
    className,
    style: styles,
    ref
  }, children);
});
var defaultDropAnimationSideEffects = (options) => (_ref) => {
  let {
    active,
    dragOverlay
  } = _ref;
  const originalStyles = {};
  const {
    styles,
    className
  } = options;
  if (styles != null && styles.active) {
    for (const [key2, value] of Object.entries(styles.active)) {
      if (value === void 0) {
        continue;
      }
      originalStyles[key2] = active.node.style.getPropertyValue(key2);
      active.node.style.setProperty(key2, value);
    }
  }
  if (styles != null && styles.dragOverlay) {
    for (const [key2, value] of Object.entries(styles.dragOverlay)) {
      if (value === void 0) {
        continue;
      }
      dragOverlay.node.style.setProperty(key2, value);
    }
  }
  if (className != null && className.active) {
    active.node.classList.add(className.active);
  }
  if (className != null && className.dragOverlay) {
    dragOverlay.node.classList.add(className.dragOverlay);
  }
  return function cleanup() {
    for (const [key2, value] of Object.entries(originalStyles)) {
      active.node.style.setProperty(key2, value);
    }
    if (className != null && className.active) {
      active.node.classList.remove(className.active);
    }
  };
};
var defaultKeyframeResolver = (_ref2) => {
  let {
    transform: {
      initial,
      final
    }
  } = _ref2;
  return [{
    transform: CSS.Transform.toString(initial)
  }, {
    transform: CSS.Transform.toString(final)
  }];
};
var defaultDropAnimationConfiguration = {
  duration: 250,
  easing: "ease",
  keyframes: defaultKeyframeResolver,
  sideEffects: defaultDropAnimationSideEffects({
    styles: {
      active: {
        opacity: "0"
      }
    }
  })
};
function useDropAnimation(_ref3) {
  let {
    config,
    draggableNodes,
    droppableContainers,
    measuringConfiguration
  } = _ref3;
  return useEvent((id, node) => {
    if (config === null) {
      return;
    }
    const activeDraggable = draggableNodes.get(id);
    if (!activeDraggable) {
      return;
    }
    const activeNode = activeDraggable.node.current;
    if (!activeNode) {
      return;
    }
    const measurableNode = getMeasurableNode(node);
    if (!measurableNode) {
      return;
    }
    const {
      transform
    } = getWindow(node).getComputedStyle(node);
    const parsedTransform = parseTransform(transform);
    if (!parsedTransform) {
      return;
    }
    const animation = typeof config === "function" ? config : createDefaultDropAnimation(config);
    scrollIntoViewIfNeeded(activeNode, measuringConfiguration.draggable.measure);
    return animation({
      active: {
        id,
        data: activeDraggable.data,
        node: activeNode,
        rect: measuringConfiguration.draggable.measure(activeNode)
      },
      draggableNodes,
      dragOverlay: {
        node,
        rect: measuringConfiguration.dragOverlay.measure(measurableNode)
      },
      droppableContainers,
      measuringConfiguration,
      transform: parsedTransform
    });
  });
}
function createDefaultDropAnimation(options) {
  const {
    duration,
    easing,
    sideEffects,
    keyframes
  } = {
    ...defaultDropAnimationConfiguration,
    ...options
  };
  return (_ref4) => {
    let {
      active,
      dragOverlay,
      transform,
      ...rest
    } = _ref4;
    if (!duration) {
      return;
    }
    const delta = {
      x: dragOverlay.rect.left - active.rect.left,
      y: dragOverlay.rect.top - active.rect.top
    };
    const scale = {
      scaleX: transform.scaleX !== 1 ? active.rect.width * transform.scaleX / dragOverlay.rect.width : 1,
      scaleY: transform.scaleY !== 1 ? active.rect.height * transform.scaleY / dragOverlay.rect.height : 1
    };
    const finalTransform = {
      x: transform.x - delta.x,
      y: transform.y - delta.y,
      ...scale
    };
    const animationKeyframes = keyframes({
      ...rest,
      active,
      dragOverlay,
      transform: {
        initial: transform,
        final: finalTransform
      }
    });
    const [firstKeyframe] = animationKeyframes;
    const lastKeyframe = animationKeyframes[animationKeyframes.length - 1];
    if (JSON.stringify(firstKeyframe) === JSON.stringify(lastKeyframe)) {
      return;
    }
    const cleanup = sideEffects == null ? void 0 : sideEffects({
      active,
      dragOverlay,
      ...rest
    });
    const animation = dragOverlay.node.animate(animationKeyframes, {
      duration,
      easing,
      fill: "forwards"
    });
    return new Promise((resolve) => {
      animation.onfinish = () => {
        cleanup == null ? void 0 : cleanup();
        resolve();
      };
    });
  };
}
var key = 0;
function useKey(id) {
  return (0, import_react135.useMemo)(() => {
    if (id == null) {
      return;
    }
    key++;
    return key;
  }, [id]);
}
var DragOverlay = import_react135.default.memo((_ref) => {
  let {
    adjustScale: adjustScale2 = false,
    children,
    dropAnimation: dropAnimationConfig,
    style,
    transition,
    modifiers,
    wrapperElement = "div",
    className,
    zIndex = 999
  } = _ref;
  const {
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggableNodes,
    droppableContainers,
    dragOverlay,
    over,
    measuringConfiguration,
    scrollableAncestors,
    scrollableAncestorRects,
    windowRect
  } = useDndContext();
  const transform = (0, import_react135.useContext)(ActiveDraggableContext);
  const key2 = useKey(active == null ? void 0 : active.id);
  const modifiedTransform = applyModifiers(modifiers, {
    activatorEvent,
    active,
    activeNodeRect,
    containerNodeRect,
    draggingNodeRect: dragOverlay.rect,
    over,
    overlayNodeRect: dragOverlay.rect,
    scrollableAncestors,
    scrollableAncestorRects,
    transform,
    windowRect
  });
  const initialRect = useInitialValue(activeNodeRect);
  const dropAnimation = useDropAnimation({
    config: dropAnimationConfig,
    draggableNodes,
    droppableContainers,
    measuringConfiguration
  });
  const ref = initialRect ? dragOverlay.setRef : void 0;
  return import_react135.default.createElement(NullifiedContextProvider, null, import_react135.default.createElement(AnimationManager, {
    animation: dropAnimation
  }, active && key2 ? import_react135.default.createElement(PositionedOverlay, {
    key: key2,
    id: active.id,
    ref,
    as: wrapperElement,
    activatorEvent,
    adjustScale: adjustScale2,
    className,
    transition,
    rect: initialRect,
    style: {
      zIndex,
      ...style
    },
    transform: modifiedTransform
  }, children) : null));
});

// node_modules/@dnd-kit/modifiers/dist/modifiers.esm.js
var restrictToVerticalAxis = (_ref) => {
  let {
    transform
  } = _ref;
  return {
    ...transform,
    x: 0
  };
};

// node_modules/@dnd-kit/sortable/dist/sortable.esm.js
var import_react136 = __toESM(require_react());
function arrayMove(array, from, to) {
  const newArray = array.slice();
  newArray.splice(to < 0 ? newArray.length + to : to, 0, newArray.splice(from, 1)[0]);
  return newArray;
}
function getSortedRects(items, rects) {
  return items.reduce((accumulator, id, index) => {
    const rect = rects.get(id);
    if (rect) {
      accumulator[index] = rect;
    }
    return accumulator;
  }, Array(items.length));
}
function isValidIndex(index) {
  return index !== null && index >= 0;
}
function itemsEqual(a, b) {
  if (a === b) {
    return true;
  }
  if (a.length !== b.length) {
    return false;
  }
  for (let i = 0; i < a.length; i++) {
    if (a[i] !== b[i]) {
      return false;
    }
  }
  return true;
}
function normalizeDisabled(disabled) {
  if (typeof disabled === "boolean") {
    return {
      draggable: disabled,
      droppable: disabled
    };
  }
  return disabled;
}
var rectSortingStrategy = (_ref) => {
  let {
    rects,
    activeIndex,
    overIndex,
    index
  } = _ref;
  const newRects = arrayMove(rects, overIndex, activeIndex);
  const oldRect = rects[index];
  const newRect = newRects[index];
  if (!newRect || !oldRect) {
    return null;
  }
  return {
    x: newRect.left - oldRect.left,
    y: newRect.top - oldRect.top,
    scaleX: newRect.width / oldRect.width,
    scaleY: newRect.height / oldRect.height
  };
};
var defaultScale$1 = {
  scaleX: 1,
  scaleY: 1
};
var verticalListSortingStrategy = (_ref) => {
  var _rects$activeIndex;
  let {
    activeIndex,
    activeNodeRect: fallbackActiveRect,
    index,
    rects,
    overIndex
  } = _ref;
  const activeNodeRect = (_rects$activeIndex = rects[activeIndex]) != null ? _rects$activeIndex : fallbackActiveRect;
  if (!activeNodeRect) {
    return null;
  }
  if (index === activeIndex) {
    const overIndexRect = rects[overIndex];
    if (!overIndexRect) {
      return null;
    }
    return {
      x: 0,
      y: activeIndex < overIndex ? overIndexRect.top + overIndexRect.height - (activeNodeRect.top + activeNodeRect.height) : overIndexRect.top - activeNodeRect.top,
      ...defaultScale$1
    };
  }
  const itemGap = getItemGap$1(rects, index, activeIndex);
  if (index > activeIndex && index <= overIndex) {
    return {
      x: 0,
      y: -activeNodeRect.height - itemGap,
      ...defaultScale$1
    };
  }
  if (index < activeIndex && index >= overIndex) {
    return {
      x: 0,
      y: activeNodeRect.height + itemGap,
      ...defaultScale$1
    };
  }
  return {
    x: 0,
    y: 0,
    ...defaultScale$1
  };
};
function getItemGap$1(clientRects, index, activeIndex) {
  const currentRect = clientRects[index];
  const previousRect = clientRects[index - 1];
  const nextRect = clientRects[index + 1];
  if (!currentRect) {
    return 0;
  }
  if (activeIndex < index) {
    return previousRect ? currentRect.top - (previousRect.top + previousRect.height) : nextRect ? nextRect.top - (currentRect.top + currentRect.height) : 0;
  }
  return nextRect ? nextRect.top - (currentRect.top + currentRect.height) : previousRect ? currentRect.top - (previousRect.top + previousRect.height) : 0;
}
var ID_PREFIX2 = "Sortable";
var Context = import_react136.default.createContext({
  activeIndex: -1,
  containerId: ID_PREFIX2,
  disableTransforms: false,
  items: [],
  overIndex: -1,
  useDragOverlay: false,
  sortedRects: [],
  strategy: rectSortingStrategy,
  disabled: {
    draggable: false,
    droppable: false
  }
});
function SortableContext(_ref) {
  let {
    children,
    id,
    items: userDefinedItems,
    strategy = rectSortingStrategy,
    disabled: disabledProp = false
  } = _ref;
  const {
    active,
    dragOverlay,
    droppableRects,
    over,
    measureDroppableContainers
  } = useDndContext();
  const containerId = useUniqueId(ID_PREFIX2, id);
  const useDragOverlay = Boolean(dragOverlay.rect !== null);
  const items = (0, import_react136.useMemo)(() => userDefinedItems.map((item) => typeof item === "object" && "id" in item ? item.id : item), [userDefinedItems]);
  const isDragging = active != null;
  const activeIndex = active ? items.indexOf(active.id) : -1;
  const overIndex = over ? items.indexOf(over.id) : -1;
  const previousItemsRef = (0, import_react136.useRef)(items);
  const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);
  const disableTransforms = overIndex !== -1 && activeIndex === -1 || itemsHaveChanged;
  const disabled = normalizeDisabled(disabledProp);
  useIsomorphicLayoutEffect(() => {
    if (itemsHaveChanged && isDragging) {
      measureDroppableContainers(items);
    }
  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers]);
  (0, import_react136.useEffect)(() => {
    previousItemsRef.current = items;
  }, [items]);
  const contextValue = (0, import_react136.useMemo)(
    () => ({
      activeIndex,
      containerId,
      disabled,
      disableTransforms,
      items,
      overIndex,
      useDragOverlay,
      sortedRects: getSortedRects(items, droppableRects),
      strategy
    }),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [activeIndex, containerId, disabled.draggable, disabled.droppable, disableTransforms, items, overIndex, droppableRects, useDragOverlay, strategy]
  );
  return import_react136.default.createElement(Context.Provider, {
    value: contextValue
  }, children);
}
var defaultNewIndexGetter = (_ref) => {
  let {
    id,
    items,
    activeIndex,
    overIndex
  } = _ref;
  return arrayMove(items, activeIndex, overIndex).indexOf(id);
};
var defaultAnimateLayoutChanges = (_ref2) => {
  let {
    containerId,
    isSorting,
    wasDragging,
    index,
    items,
    newIndex,
    previousItems,
    previousContainerId,
    transition
  } = _ref2;
  if (!transition || !wasDragging) {
    return false;
  }
  if (previousItems !== items && index === newIndex) {
    return false;
  }
  if (isSorting) {
    return true;
  }
  return newIndex !== index && containerId === previousContainerId;
};
var defaultTransition2 = {
  duration: 200,
  easing: "ease"
};
var transitionProperty = "transform";
var disabledTransition = CSS.Transition.toString({
  property: transitionProperty,
  duration: 0,
  easing: "linear"
});
var defaultAttributes = {
  roleDescription: "sortable"
};
function useDerivedTransform(_ref) {
  let {
    disabled,
    index,
    node,
    rect
  } = _ref;
  const [derivedTransform, setDerivedtransform] = (0, import_react136.useState)(null);
  const previousIndex = (0, import_react136.useRef)(index);
  useIsomorphicLayoutEffect(() => {
    if (!disabled && index !== previousIndex.current && node.current) {
      const initial = rect.current;
      if (initial) {
        const current = getClientRect(node.current, {
          ignoreTransform: true
        });
        const delta = {
          x: initial.left - current.left,
          y: initial.top - current.top,
          scaleX: initial.width / current.width,
          scaleY: initial.height / current.height
        };
        if (delta.x || delta.y) {
          setDerivedtransform(delta);
        }
      }
    }
    if (index !== previousIndex.current) {
      previousIndex.current = index;
    }
  }, [disabled, index, node, rect]);
  (0, import_react136.useEffect)(() => {
    if (derivedTransform) {
      setDerivedtransform(null);
    }
  }, [derivedTransform]);
  return derivedTransform;
}
function useSortable(_ref) {
  let {
    animateLayoutChanges = defaultAnimateLayoutChanges,
    attributes: userDefinedAttributes,
    disabled: localDisabled,
    data: customData,
    getNewIndex = defaultNewIndexGetter,
    id,
    strategy: localStrategy,
    resizeObserverConfig,
    transition = defaultTransition2
  } = _ref;
  const {
    items,
    containerId,
    activeIndex,
    disabled: globalDisabled,
    disableTransforms,
    sortedRects,
    overIndex,
    useDragOverlay,
    strategy: globalStrategy
  } = (0, import_react136.useContext)(Context);
  const disabled = normalizeLocalDisabled(localDisabled, globalDisabled);
  const index = items.indexOf(id);
  const data = (0, import_react136.useMemo)(() => ({
    sortable: {
      containerId,
      index,
      items
    },
    ...customData
  }), [containerId, customData, index, items]);
  const itemsAfterCurrentSortable = (0, import_react136.useMemo)(() => items.slice(items.indexOf(id)), [items, id]);
  const {
    rect,
    node,
    isOver,
    setNodeRef: setDroppableNodeRef
  } = useDroppable({
    id,
    data,
    disabled: disabled.droppable,
    resizeObserverConfig: {
      updateMeasurementsFor: itemsAfterCurrentSortable,
      ...resizeObserverConfig
    }
  });
  const {
    active,
    activatorEvent,
    activeNodeRect,
    attributes,
    setNodeRef: setDraggableNodeRef,
    listeners,
    isDragging,
    over,
    setActivatorNodeRef,
    transform
  } = useDraggable({
    id,
    data,
    attributes: {
      ...defaultAttributes,
      ...userDefinedAttributes
    },
    disabled: disabled.draggable
  });
  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);
  const isSorting = Boolean(active);
  const displaceItem = isSorting && !disableTransforms && isValidIndex(activeIndex) && isValidIndex(overIndex);
  const shouldDisplaceDragSource = !useDragOverlay && isDragging;
  const dragSourceDisplacement = shouldDisplaceDragSource && displaceItem ? transform : null;
  const strategy = localStrategy != null ? localStrategy : globalStrategy;
  const finalTransform = displaceItem ? dragSourceDisplacement != null ? dragSourceDisplacement : strategy({
    rects: sortedRects,
    activeNodeRect,
    activeIndex,
    overIndex,
    index
  }) : null;
  const newIndex = isValidIndex(activeIndex) && isValidIndex(overIndex) ? getNewIndex({
    id,
    items,
    activeIndex,
    overIndex
  }) : index;
  const activeId = active == null ? void 0 : active.id;
  const previous = (0, import_react136.useRef)({
    activeId,
    items,
    newIndex,
    containerId
  });
  const itemsHaveChanged = items !== previous.current.items;
  const shouldAnimateLayoutChanges = animateLayoutChanges({
    active,
    containerId,
    isDragging,
    isSorting,
    id,
    index,
    items,
    newIndex: previous.current.newIndex,
    previousItems: previous.current.items,
    previousContainerId: previous.current.containerId,
    transition,
    wasDragging: previous.current.activeId != null
  });
  const derivedTransform = useDerivedTransform({
    disabled: !shouldAnimateLayoutChanges,
    index,
    node,
    rect
  });
  (0, import_react136.useEffect)(() => {
    if (isSorting && previous.current.newIndex !== newIndex) {
      previous.current.newIndex = newIndex;
    }
    if (containerId !== previous.current.containerId) {
      previous.current.containerId = containerId;
    }
    if (items !== previous.current.items) {
      previous.current.items = items;
    }
  }, [isSorting, newIndex, containerId, items]);
  (0, import_react136.useEffect)(() => {
    if (activeId === previous.current.activeId) {
      return;
    }
    if (activeId && !previous.current.activeId) {
      previous.current.activeId = activeId;
      return;
    }
    const timeoutId = setTimeout(() => {
      previous.current.activeId = activeId;
    }, 50);
    return () => clearTimeout(timeoutId);
  }, [activeId]);
  return {
    active,
    activeIndex,
    attributes,
    data,
    rect,
    index,
    newIndex,
    items,
    isOver,
    isSorting,
    isDragging,
    listeners,
    node,
    overIndex,
    over,
    setNodeRef,
    setActivatorNodeRef,
    setDroppableNodeRef,
    setDraggableNodeRef,
    transform: derivedTransform != null ? derivedTransform : finalTransform,
    transition: getTransition()
  };
  function getTransition() {
    if (
      // Temporarily disable transitions for a single frame to set up derived transforms
      derivedTransform || // Or to prevent items jumping to back to their "new" position when items change
      itemsHaveChanged && previous.current.newIndex === index
    ) {
      return disabledTransition;
    }
    if (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent) || !transition) {
      return void 0;
    }
    if (isSorting || shouldAnimateLayoutChanges) {
      return CSS.Transition.toString({
        ...transition,
        property: transitionProperty
      });
    }
    return void 0;
  }
}
function normalizeLocalDisabled(localDisabled, globalDisabled) {
  var _localDisabled$dragga, _localDisabled$droppa;
  if (typeof localDisabled === "boolean") {
    return {
      draggable: localDisabled,
      // Backwards compatibility
      droppable: false
    };
  }
  return {
    draggable: (_localDisabled$dragga = localDisabled == null ? void 0 : localDisabled.draggable) != null ? _localDisabled$dragga : globalDisabled.draggable,
    droppable: (_localDisabled$droppa = localDisabled == null ? void 0 : localDisabled.droppable) != null ? _localDisabled$droppa : globalDisabled.droppable
  };
}
var directions = [KeyboardCode.Down, KeyboardCode.Right, KeyboardCode.Up, KeyboardCode.Left];

// node_modules/@ant-design/pro-table/es/utils/useDragSort.js
var import_react137 = __toESM(require_react());
var import_jsx_runtime168 = __toESM(require_jsx_runtime());
var import_jsx_runtime169 = __toESM(require_jsx_runtime());
var _excluded79 = ["DragHandle", "dragSortKey"];
var _excluded219 = ["dragSortKey"];
var SortableItemContextValue = (0, import_react137.createContext)({
  handle: null
});
var SortableRow = function SortableRow2(props) {
  var _useSortable = useSortable({
    id: props.id
  }), attributes = _useSortable.attributes, listeners = _useSortable.listeners, setNodeRef = _useSortable.setNodeRef, transform = _useSortable.transform, transition = _useSortable.transition;
  var style = _objectSpread2({
    transform: CSS.Transform.toString(transform),
    transition
  }, props === null || props === void 0 ? void 0 : props.style);
  var DragHandle = props.DragHandle, dragSortKey = props.dragSortKey, rest = _objectWithoutProperties(props, _excluded79);
  if (dragSortKey) {
    var doms = [];
    import_react137.default.Children.forEach(rest.children, function(child, index) {
      if (child.key === dragSortKey) {
        var _child$props, _child$props2;
        doms.push((0, import_jsx_runtime168.jsx)(SortableItemContextValue.Provider, {
          value: {
            handle: (0, import_jsx_runtime168.jsx)(DragHandle, _objectSpread2(_objectSpread2({
              rowData: child === null || child === void 0 || (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.record,
              index: child === null || child === void 0 || (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.index
            }, listeners), attributes))
          },
          children: child
        }, child.key || index));
        return;
      }
      doms.push(child);
    });
    return (0, import_jsx_runtime168.jsx)("tr", _objectSpread2(_objectSpread2({}, rest), {}, {
      ref: setNodeRef,
      style,
      children: doms
    }));
  }
  return (0, import_jsx_runtime168.jsx)("tr", _objectSpread2(_objectSpread2(_objectSpread2({}, rest), {}, {
    ref: setNodeRef,
    style
  }, attributes), listeners));
};
var SortableItemCell = import_react137.default.memo(function(props) {
  var dragSortKey = props.dragSortKey, rest = _objectWithoutProperties(props, _excluded219);
  var _useContext = (0, import_react137.useContext)(SortableItemContextValue), handle = _useContext.handle;
  if (handle) {
    return (0, import_jsx_runtime168.jsx)("td", _objectSpread2(_objectSpread2({}, rest), {}, {
      children: (0, import_jsx_runtime169.jsxs)("div", {
        style: {
          display: "flex",
          alignItems: "center"
        },
        children: [handle, " ", rest.children]
      })
    }));
  }
  return (0, import_jsx_runtime168.jsx)("td", _objectSpread2({}, rest));
});
var SortContainer = function SortContainer2(p) {
  return (0, import_jsx_runtime168.jsx)("tbody", _objectSpread2({}, p));
};
function useDragSort(props) {
  var _props$dataSource = props.dataSource, dataSource = _props$dataSource === void 0 ? [] : _props$dataSource, onDragSortEnd = props.onDragSortEnd, DragHandle = props.DragHandle, dragSortKey = props.dragSortKey;
  var sensors = useSensors(useSensor(PointerSensor), useSensor(MouseSensor));
  var handleDragEnd = (0, import_react137.useCallback)(function(event) {
    var _over$id;
    var active = event.active, over = event.over;
    if (over !== null && over !== void 0 && (_over$id = over.id) !== null && _over$id !== void 0 && _over$id.toString() && active.id !== (over === null || over === void 0 ? void 0 : over.id)) {
      var newData = arrayMove(dataSource || [], parseInt(active.id), parseInt(over.id));
      onDragSortEnd === null || onDragSortEnd === void 0 || onDragSortEnd(parseInt(active.id), parseInt(over.id), newData || []);
    }
  }, [dataSource, onDragSortEnd]);
  var DraggableContainer = useRefFunction(function(p) {
    return (0, import_jsx_runtime168.jsx)(SortableContext, {
      items: dataSource.map(function(_, index) {
        return index === null || index === void 0 ? void 0 : index.toString();
      }),
      strategy: verticalListSortingStrategy,
      children: (0, import_jsx_runtime168.jsx)(SortContainer, _objectSpread2({}, p))
    });
  });
  var DraggableBodyRow = useRefFunction(function(p) {
    var _dataSource$findIndex;
    var restProps = Object.assign({}, (_objectDestructuringEmpty(p), p));
    var index = (_dataSource$findIndex = dataSource.findIndex(function(item) {
      var _props$rowKey;
      return item[(_props$rowKey = props.rowKey) !== null && _props$rowKey !== void 0 ? _props$rowKey : "index"] === restProps["data-row-key"];
    })) === null || _dataSource$findIndex === void 0 ? void 0 : _dataSource$findIndex.toString();
    return (0, import_jsx_runtime168.jsx)(SortableRow, _objectSpread2({
      id: index,
      dragSortKey,
      DragHandle
    }, restProps), index);
  });
  var components = props.components || {};
  if (dragSortKey) {
    var _props$components;
    components.body = _objectSpread2({
      wrapper: DraggableContainer,
      row: DraggableBodyRow,
      cell: SortableItemCell
    }, ((_props$components = props.components) === null || _props$components === void 0 ? void 0 : _props$components.body) || {});
  }
  var memoDndContext = (0, import_react137.useMemo)(function() {
    return function(contextProps) {
      return (0, import_jsx_runtime168.jsx)(DndContext, {
        modifiers: [restrictToVerticalAxis],
        sensors,
        collisionDetection: closestCenter,
        onDragEnd: handleDragEnd,
        children: contextProps.children
      });
    };
  }, [handleDragEnd, sensors]);
  return {
    DndContext: memoDndContext,
    components
  };
}

// node_modules/@ant-design/pro-table/es/components/DragSortTable/style.js
var genProListStyle5 = function genProListStyle6(token) {
  return _defineProperty({}, token.componentCls, {
    "&-icon": {
      marginInlineEnd: 8,
      color: token.colorTextSecondary,
      cursor: "grab !important",
      padding: 4,
      fontSize: 12,
      borderRadius: token.borderRadius,
      "&:hover": {
        color: token.colorText,
        backgroundColor: token.colorInfoBg
      }
    }
  });
};
function useStyle15(prefixCls) {
  return useStyle("DragSortTable", function(token) {
    var proListToken = _objectSpread2(_objectSpread2({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProListStyle5(proListToken)];
  });
}

// node_modules/@ant-design/pro-table/es/components/DragSortTable/index.js
var import_jsx_runtime170 = __toESM(require_jsx_runtime());
var _excluded80 = ["rowKey", "dragSortKey", "dragSortHandlerRender", "onDragSortEnd", "onDataSourceChange", "defaultData", "dataSource", "onLoad"];
var _excluded220 = ["rowData", "index", "className"];
function DragSortTable(props) {
  var _otherProps$columns;
  var rowKey = props.rowKey, dragSortKey = props.dragSortKey, dragSortHandlerRender = props.dragSortHandlerRender, onDragSortEnd = props.onDragSortEnd, onDataSourceChange = props.onDataSourceChange, defaultData2 = props.defaultData, originDataSource = props.dataSource, onLoad = props.onLoad, otherProps = _objectWithoutProperties(props, _excluded80);
  var _useContext = (0, import_react138.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var _useMergedState = useMergedState(function() {
    return defaultData2 || [];
  }, {
    value: originDataSource,
    onChange: onDataSourceChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), dataSource = _useMergedState2[0], setDataSource = _useMergedState2[1];
  var _useStyle = useStyle15(getPrefixCls("pro-table-drag")), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var DragHandle = (0, import_react138.useMemo)(function() {
    return function(dragHandleProps) {
      var rowData = dragHandleProps.rowData, index = dragHandleProps.index, className = dragHandleProps.className, rest = _objectWithoutProperties(dragHandleProps, _excluded220);
      var defaultDom = (0, import_jsx_runtime170.jsx)(HolderOutlined_default, _objectSpread2(_objectSpread2({}, rest), {}, {
        className: "".concat(getPrefixCls("pro-table-drag-icon"), " ").concat(className || "", " ").concat(hashId || "").trim()
      }));
      var handel = dragSortHandlerRender ? dragSortHandlerRender(dragHandleProps === null || dragHandleProps === void 0 ? void 0 : dragHandleProps.rowData, dragHandleProps === null || dragHandleProps === void 0 ? void 0 : dragHandleProps.index) : defaultDom;
      return (0, import_jsx_runtime170.jsx)("div", _objectSpread2(_objectSpread2({}, rest), {}, {
        children: handel
      }));
    };
  }, [getPrefixCls]);
  var _useDragSort = useDragSort({
    dataSource: dataSource === null || dataSource === void 0 ? void 0 : dataSource.slice(),
    dragSortKey,
    onDragSortEnd,
    components: props.components,
    rowKey,
    DragHandle
  }), components = _useDragSort.components, DndContext3 = _useDragSort.DndContext;
  var wrapOnload = function() {
    var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(ds) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            setDataSource(ds);
            return _context.abrupt("return", onLoad === null || onLoad === void 0 ? void 0 : onLoad(ds));
          case 2:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function wrapOnload2(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  return wrapSSR((0, import_jsx_runtime170.jsx)(Table_default, _objectSpread2(_objectSpread2({}, otherProps), {}, {
    columns: (_otherProps$columns = otherProps.columns) === null || _otherProps$columns === void 0 ? void 0 : _otherProps$columns.map(function(item) {
      if (item.dataIndex == dragSortKey || item.key === dragSortKey) {
        if (!item.render) {
          item.render = function() {
            return null;
          };
        }
      }
      return item;
    }),
    onLoad: wrapOnload,
    rowKey,
    tableViewRender: function tableViewRender(_, defaultDom) {
      return (0, import_jsx_runtime170.jsx)(DndContext3, {
        children: defaultDom
      });
    },
    dataSource,
    components,
    onDataSourceChange
  })));
}
var DragSortTable_default = DragSortTable;

// node_modules/@ant-design/pro-table/es/components/Dropdown/index.js
var import_classnames27 = __toESM(require_classnames());
var import_react139 = __toESM(require_react());
var import_jsx_runtime171 = __toESM(require_jsx_runtime());
var import_jsx_runtime172 = __toESM(require_jsx_runtime());
var _excluded81 = ["key", "name"];
var DropdownButton = function DropdownButton2(_ref) {
  var children = _ref.children, menus = _ref.menus, onSelect = _ref.onSelect, className = _ref.className, style = _ref.style;
  var _useContext = (0, import_react139.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var tempClassName = getPrefixCls("pro-table-dropdown");
  var dropdownProps = menuOverlayCompatible({
    onClick: function onClick(params) {
      return onSelect && onSelect(params.key);
    },
    items: menus === null || menus === void 0 ? void 0 : menus.map(function(item) {
      return {
        label: item.name,
        key: item.key
      };
    })
  });
  return (0, import_jsx_runtime171.jsx)(dropdown_default, _objectSpread2(_objectSpread2({}, dropdownProps), {}, {
    className: (0, import_classnames27.default)(tempClassName, className),
    children: (0, import_jsx_runtime172.jsxs)(button_default, {
      style,
      children: [children, " ", (0, import_jsx_runtime171.jsx)(DownOutlined_default, {})]
    })
  }));
};
var TableDropdown = function TableDropdown2(_ref2) {
  var propsClassName = _ref2.className, style = _ref2.style, onSelect = _ref2.onSelect, _ref2$menus = _ref2.menus, menus = _ref2$menus === void 0 ? [] : _ref2$menus, children = _ref2.children;
  var _useContext2 = (0, import_react139.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext2.getPrefixCls;
  var className = getPrefixCls("pro-table-dropdown");
  var dropdownProps = menuOverlayCompatible({
    onClick: function onClick(params) {
      onSelect === null || onSelect === void 0 || onSelect(params.key);
    },
    items: menus.map(function(_ref3) {
      var key2 = _ref3.key, name = _ref3.name, rest = _objectWithoutProperties(_ref3, _excluded81);
      return _objectSpread2(_objectSpread2({
        key: key2
      }, rest), {}, {
        title: rest.title,
        label: name
      });
    })
  });
  return (0, import_jsx_runtime171.jsx)(dropdown_default, _objectSpread2(_objectSpread2({}, dropdownProps), {}, {
    className: (0, import_classnames27.default)(className, propsClassName),
    children: (0, import_jsx_runtime171.jsx)("a", {
      style,
      children: children || (0, import_jsx_runtime171.jsx)(EllipsisOutlined_default, {})
    })
  }));
};
TableDropdown.Button = DropdownButton;
var Dropdown_default = TableDropdown;

// node_modules/@ant-design/pro-table/es/components/EditableTable/index.js
var import_react140 = __toESM(require_react());
var import_jsx_runtime173 = __toESM(require_jsx_runtime());
var import_jsx_runtime174 = __toESM(require_jsx_runtime());
var import_jsx_runtime175 = __toESM(require_jsx_runtime());
var _excluded82 = ["onTableChange", "maxLength", "formItemProps", "recordCreatorProps", "rowKey", "controlled", "defaultValue", "onChange", "editableFormRef"];
var _excluded221 = ["record", "position", "creatorButtonText", "newRecordType", "parentKey", "style"];
var EditableTableActionContext = import_react140.default.createContext(void 0);
function RecordCreator(props) {
  var children = props.children, record = props.record, position = props.position, newRecordType = props.newRecordType, parentKey = props.parentKey;
  var actionRef = (0, import_react140.useContext)(EditableTableActionContext);
  return import_react140.default.cloneElement(children, _objectSpread2(_objectSpread2({}, children.props), {}, {
    onClick: function() {
      var _onClick = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(e) {
        var _children$props$onCli, _children$props, _actionRef$current;
        var isOk;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return (_children$props$onCli = (_children$props = children.props).onClick) === null || _children$props$onCli === void 0 ? void 0 : _children$props$onCli.call(_children$props, e);
            case 2:
              isOk = _context.sent;
              if (!(isOk === false)) {
                _context.next = 5;
                break;
              }
              return _context.abrupt("return");
            case 5:
              actionRef === null || actionRef === void 0 || (_actionRef$current = actionRef.current) === null || _actionRef$current === void 0 || _actionRef$current.addEditRecord(record, {
                position,
                newRecordType,
                parentKey
              });
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function onClick(_x) {
        return _onClick.apply(this, arguments);
      }
      return onClick;
    }()
  }));
}
function EditableTable(props) {
  var _props$editable2, _props$editable4;
  var intl = useIntl();
  var onTableChange = props.onTableChange, maxLength = props.maxLength, formItemProps = props.formItemProps, recordCreatorProps = props.recordCreatorProps, rowKey = props.rowKey, controlled = props.controlled, defaultValue2 = props.defaultValue, onChange = props.onChange, editableFormRef = props.editableFormRef, rest = _objectWithoutProperties(props, _excluded82);
  var preData = (0, import_react140.useRef)(void 0);
  var actionRef = (0, import_react140.useRef)();
  var formRef = (0, import_react140.useRef)();
  (0, import_react140.useImperativeHandle)(rest.actionRef, function() {
    return actionRef.current;
  }, [actionRef.current]);
  var _useMergedState = useMergedState(function() {
    return props.value || defaultValue2 || [];
  }, {
    value: props.value,
    onChange: props.onChange
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), value = _useMergedState2[0], setValue = _useMergedState2[1];
  var getRowKey = import_react140.default.useMemo(function() {
    if (typeof rowKey === "function") {
      return rowKey;
    }
    return function(record2, index) {
      return record2[rowKey] || index;
    };
  }, [rowKey]);
  var coverRowKey = useRefFunction(function(finlayRowKey) {
    if (typeof finlayRowKey === "number" && !props.name) {
      if (finlayRowKey >= value.length) return finlayRowKey;
      var rowData = value && value[finlayRowKey];
      return getRowKey === null || getRowKey === void 0 ? void 0 : getRowKey(rowData, finlayRowKey);
    }
    if ((typeof finlayRowKey === "string" || finlayRowKey >= value.length) && props.name) {
      var _rowIndex = value.findIndex(function(item, index) {
        var _getRowKey;
        return (getRowKey === null || getRowKey === void 0 || (_getRowKey = getRowKey(item, index)) === null || _getRowKey === void 0 ? void 0 : _getRowKey.toString()) === (finlayRowKey === null || finlayRowKey === void 0 ? void 0 : finlayRowKey.toString());
      });
      if (_rowIndex !== -1) return _rowIndex;
    }
    return finlayRowKey;
  });
  (0, import_react140.useImperativeHandle)(editableFormRef, function() {
    var getRowData = function getRowData2(rowIndex) {
      var _finlayRowKey$toStrin, _formRef$current;
      if (rowIndex == void 0) {
        throw new Error("rowIndex is required");
      }
      var finlayRowKey = coverRowKey(rowIndex);
      var rowKeyName = [props.name, (_finlayRowKey$toStrin = finlayRowKey === null || finlayRowKey === void 0 ? void 0 : finlayRowKey.toString()) !== null && _finlayRowKey$toStrin !== void 0 ? _finlayRowKey$toStrin : ""].flat(1).filter(Boolean);
      return (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.getFieldValue(rowKeyName);
    };
    var getRowsData = function getRowsData2() {
      var _formRef$current3;
      var rowKeyName = [props.name].flat(1).filter(Boolean);
      if (Array.isArray(rowKeyName) && rowKeyName.length === 0) {
        var _formRef$current2;
        var rowData = (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.getFieldsValue();
        if (Array.isArray(rowData)) return rowData;
        return Object.keys(rowData).map(function(key2) {
          return rowData[key2];
        });
      }
      return (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.getFieldValue(rowKeyName);
    };
    return _objectSpread2(_objectSpread2({}, formRef.current), {}, {
      getRowData,
      getRowsData,
      /**
       * 设置一行的数据，会将数据进行简单的 merge
       * @param rowIndex
       * @param data
       * @returns void
       */
      setRowData: function setRowData(rowIndex, data) {
        var _finlayRowKey$toStrin2, _formRef$current4;
        if (rowIndex == void 0) {
          throw new Error("rowIndex is required");
        }
        var finlayRowKey = coverRowKey(rowIndex);
        var rowKeyName = [props.name, (_finlayRowKey$toStrin2 = finlayRowKey === null || finlayRowKey === void 0 ? void 0 : finlayRowKey.toString()) !== null && _finlayRowKey$toStrin2 !== void 0 ? _finlayRowKey$toStrin2 : ""].flat(1).filter(Boolean);
        var newRowData = Object.assign({}, _objectSpread2(_objectSpread2({}, getRowData(rowIndex)), data || {}));
        var updateValues = set({}, rowKeyName, newRowData);
        (_formRef$current4 = formRef.current) === null || _formRef$current4 === void 0 || _formRef$current4.setFieldsValue(updateValues);
        return true;
      }
    });
  }, [coverRowKey, props.name, formRef.current]);
  (0, import_react140.useEffect)(function() {
    if (!props.controlled) return;
    (value || []).forEach(function(current, index) {
      var _formRef$current5;
      (_formRef$current5 = formRef.current) === null || _formRef$current5 === void 0 || _formRef$current5.setFieldsValue(_defineProperty({}, "".concat(getRowKey(current, index)), current));
    }, {});
  }, [stringify_default(value), props.controlled]);
  (0, import_react140.useEffect)(function() {
    if (props.name) {
      var _props$editable;
      formRef.current = props === null || props === void 0 || (_props$editable = props.editable) === null || _props$editable === void 0 ? void 0 : _props$editable.form;
    }
  }, [(_props$editable2 = props.editable) === null || _props$editable2 === void 0 ? void 0 : _props$editable2.form, props.name]);
  var _ref = recordCreatorProps || {}, record = _ref.record, position = _ref.position, creatorButtonText = _ref.creatorButtonText, newRecordType = _ref.newRecordType, parentKey = _ref.parentKey, style = _ref.style, restButtonProps = _objectWithoutProperties(_ref, _excluded221);
  var isTop = position === "top";
  var creatorButtonDom = (0, import_react140.useMemo)(function() {
    if (typeof maxLength === "number" && maxLength <= (value === null || value === void 0 ? void 0 : value.length)) {
      return false;
    }
    return recordCreatorProps !== false && (0, import_jsx_runtime173.jsx)(RecordCreator, {
      record: runFunction(record, value === null || value === void 0 ? void 0 : value.length, value) || {},
      position,
      parentKey: runFunction(parentKey, value === null || value === void 0 ? void 0 : value.length, value),
      newRecordType,
      children: (0, import_jsx_runtime173.jsx)(button_default, _objectSpread2(_objectSpread2({
        type: "dashed",
        style: _objectSpread2({
          display: "block",
          margin: "10px 0",
          width: "100%"
        }, style),
        icon: (0, import_jsx_runtime173.jsx)(PlusOutlined_default, {})
      }, restButtonProps), {}, {
        children: creatorButtonText || intl.getMessage("editableTable.action.add", "添加一行数据")
      }))
    });
  }, [recordCreatorProps, maxLength, value === null || value === void 0 ? void 0 : value.length]);
  var buttonRenderProps = (0, import_react140.useMemo)(function() {
    if (!creatorButtonDom) {
      return {};
    }
    if (isTop) {
      return {
        components: {
          header: {
            wrapper: function wrapper(_ref2) {
              var _rest$columns;
              var className = _ref2.className, children = _ref2.children;
              return (0, import_jsx_runtime174.jsxs)("thead", {
                className,
                children: [children, (0, import_jsx_runtime174.jsxs)("tr", {
                  style: {
                    position: "relative"
                  },
                  children: [(0, import_jsx_runtime173.jsx)("td", {
                    colSpan: 0,
                    style: {
                      visibility: "hidden"
                    },
                    children: creatorButtonDom
                  }), (0, import_jsx_runtime173.jsx)("td", {
                    style: {
                      position: "absolute",
                      left: 0,
                      width: "100%"
                    },
                    colSpan: (_rest$columns = rest.columns) === null || _rest$columns === void 0 ? void 0 : _rest$columns.length,
                    children: creatorButtonDom
                  })]
                })]
              });
            }
          }
        }
      };
    }
    return {
      tableViewRender: function tableViewRender(_, dom) {
        var _props$tableViewRende, _props$tableViewRende2;
        return (0, import_jsx_runtime174.jsxs)(import_jsx_runtime175.Fragment, {
          children: [(_props$tableViewRende = (_props$tableViewRende2 = props.tableViewRender) === null || _props$tableViewRende2 === void 0 ? void 0 : _props$tableViewRende2.call(props, _, dom)) !== null && _props$tableViewRende !== void 0 ? _props$tableViewRende : dom, creatorButtonDom]
        });
      }
    };
  }, [isTop, creatorButtonDom]);
  var editableProps = _objectSpread2({}, props.editable);
  var newOnValueChange = useRefFunction(function(r, dataSource) {
    var _props$editable3, _props$editable3$onVa, _props$onValuesChange;
    (_props$editable3 = props.editable) === null || _props$editable3 === void 0 || (_props$editable3$onVa = _props$editable3.onValuesChange) === null || _props$editable3$onVa === void 0 || _props$editable3$onVa.call(_props$editable3, r, dataSource);
    (_props$onValuesChange = props.onValuesChange) === null || _props$onValuesChange === void 0 || _props$onValuesChange.call(props, dataSource, r);
    if (props.controlled) {
      var _props$onChange;
      props === null || props === void 0 || (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call(props, dataSource);
    }
  });
  if (props !== null && props !== void 0 && props.onValuesChange || (_props$editable4 = props.editable) !== null && _props$editable4 !== void 0 && _props$editable4.onValuesChange || // 受控模式需要触发 onchange
  props.controlled && props !== null && props !== void 0 && props.onChange) {
    editableProps.onValuesChange = newOnValueChange;
  }
  return (0, import_jsx_runtime174.jsxs)(import_jsx_runtime175.Fragment, {
    children: [(0, import_jsx_runtime173.jsx)(EditableTableActionContext.Provider, {
      value: actionRef,
      children: (0, import_jsx_runtime173.jsx)(Table_default, _objectSpread2(_objectSpread2(_objectSpread2({
        search: false,
        options: false,
        pagination: false,
        rowKey,
        revalidateOnFocus: false
      }, rest), buttonRenderProps), {}, {
        tableLayout: "fixed",
        actionRef,
        onChange: onTableChange,
        editable: _objectSpread2(_objectSpread2({}, editableProps), {}, {
          formProps: _objectSpread2({
            formRef
          }, editableProps.formProps)
        }),
        dataSource: value,
        onDataSourceChange: function onDataSourceChange(dataSource) {
          setValue(dataSource);
          if (props.name && position === "top") {
            var _formRef$current6;
            var newValue = set({}, [props.name].flat(1).filter(Boolean), dataSource);
            (_formRef$current6 = formRef.current) === null || _formRef$current6 === void 0 || _formRef$current6.setFieldsValue(newValue);
          }
        }
      }))
    }), props.name ? (0, import_jsx_runtime173.jsx)(Dependency_default, {
      name: [props.name],
      children: function children(changeValue) {
        var _props$editable5, _props$editable5$onVa;
        if (!preData.current) {
          preData.current = value;
          return null;
        }
        var list = get(changeValue, [props.name].flat(1));
        var changeItem = list === null || list === void 0 ? void 0 : list.find(function(item, index) {
          var _preData$current;
          return !isDeepEqualReact(item, (_preData$current = preData.current) === null || _preData$current === void 0 ? void 0 : _preData$current[index]);
        });
        preData.current = value;
        if (!changeItem) return null;
        props === null || props === void 0 || (_props$editable5 = props.editable) === null || _props$editable5 === void 0 || (_props$editable5$onVa = _props$editable5.onValuesChange) === null || _props$editable5$onVa === void 0 || _props$editable5$onVa.call(_props$editable5, changeItem, list);
        return null;
      }
    }) : null]
  });
}
function FieldEditableTable(props) {
  var form = es_default6.useFormInstance();
  if (!props.name) return (0, import_jsx_runtime173.jsx)(EditableTable, _objectSpread2({
    tableLayout: "fixed",
    scroll: {
      x: "max-content"
    }
  }, props));
  return (0, import_jsx_runtime173.jsx)(form_default.Item, _objectSpread2(_objectSpread2({
    style: {
      maxWidth: "100%"
    }
  }, props === null || props === void 0 ? void 0 : props.formItemProps), {}, {
    name: props.name,
    shouldUpdate: function shouldUpdate(prev, next) {
      var name = [props.name].flat(1);
      try {
        return JSON.stringify(get(prev, name)) !== JSON.stringify(get(next, name));
      } catch (error2) {
        return true;
      }
    },
    children: (0, import_jsx_runtime173.jsx)(EditableTable, _objectSpread2(_objectSpread2({
      tableLayout: "fixed",
      scroll: {
        x: "max-content"
      }
    }, props), {}, {
      editable: _objectSpread2(_objectSpread2({}, props.editable), {}, {
        form
      })
    }))
  }));
}
FieldEditableTable.RecordCreator = RecordCreator;
var EditableTable_default = FieldEditableTable;

// node_modules/@ant-design/pro-table/es/components/EditableTable/CellEditorTable.js
var import_react141 = __toESM(require_react());
var import_jsx_runtime176 = __toESM(require_jsx_runtime());
function CellEditorTable(props) {
  var _props$columns;
  var _React$useState = import_react141.default.useState([]), _React$useState2 = _slicedToArray(_React$useState, 2), editableKeys = _React$useState2[0], setEditableRowKeys = _React$useState2[1];
  var _React$useState3 = import_react141.default.useState([]), _React$useState4 = _slicedToArray(_React$useState3, 2), dataIndex = _React$useState4[0], setDataIndex = _React$useState4[1];
  var rowKey = props.rowKey || "id";
  var getRowKey = import_react141.default.useMemo(function() {
    if (typeof rowKey === "function") {
      return rowKey;
    }
    return function(record, index) {
      var _ref;
      if (index === -1) {
        return record === null || record === void 0 ? void 0 : record[rowKey];
      }
      if (props.name) {
        return index === null || index === void 0 ? void 0 : index.toString();
      }
      return (_ref = record === null || record === void 0 ? void 0 : record[rowKey]) !== null && _ref !== void 0 ? _ref : index === null || index === void 0 ? void 0 : index.toString();
    };
  }, [props.name, rowKey]);
  return (0, import_jsx_runtime176.jsx)(EditableTable_default, _objectSpread2(_objectSpread2({
    bordered: true,
    pagination: false
  }, props), {}, {
    editable: _objectSpread2({
      editableKeys
    }, props.editable),
    columns: (props === null || props === void 0 || (_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : _props$columns.map(function(item) {
      return _objectSpread2(_objectSpread2({}, item), {}, {
        editable: dataIndex.flat(1).join(".") === [item.dataIndex || item.key].flat(1).join(".") ? void 0 : false,
        onCell: function onCell(record, rowIndex) {
          return {
            onDoubleClick: function onDoubleClick() {
              setEditableRowKeys([getRowKey(record, rowIndex)]);
              setDataIndex([item.dataIndex || item.key]);
            },
            onBlur: function onBlur() {
              setEditableRowKeys([]);
            }
          };
        }
      });
    })) || []
  }));
}

// node_modules/@ant-design/pro-table/es/components/EditableTable/RowEditorTable.js
var import_react142 = __toESM(require_react());
var import_jsx_runtime177 = __toESM(require_jsx_runtime());
function RowEditorTable(props) {
  var _props$columns;
  var _React$useState = import_react142.default.useState([]), _React$useState2 = _slicedToArray(_React$useState, 2), editableKeys = _React$useState2[0], setEditableRowKeys = _React$useState2[1];
  var rowKey = props.rowKey || "id";
  var getRowKey = import_react142.default.useMemo(function() {
    if (typeof rowKey === "function") {
      return rowKey;
    }
    return function(record, index) {
      var _ref;
      if (index === -1) {
        return record === null || record === void 0 ? void 0 : record[rowKey];
      }
      if (props.name) {
        return index === null || index === void 0 ? void 0 : index.toString();
      }
      return (_ref = record === null || record === void 0 ? void 0 : record[rowKey]) !== null && _ref !== void 0 ? _ref : index === null || index === void 0 ? void 0 : index.toString();
    };
  }, [props.name, rowKey]);
  return (0, import_jsx_runtime177.jsx)(EditableTable_default, _objectSpread2(_objectSpread2({
    bordered: true,
    pagination: false
  }, props), {}, {
    editable: _objectSpread2({
      editableKeys
    }, props.editable),
    columns: (props === null || props === void 0 || (_props$columns = props.columns) === null || _props$columns === void 0 ? void 0 : _props$columns.map(function(item) {
      return _objectSpread2(_objectSpread2({}, item), {}, {
        onCell: function onCell(record, rowIndex) {
          return {
            onDoubleClick: function onDoubleClick() {
              setEditableRowKeys([getRowKey(record, rowIndex)]);
            },
            onBlur: function onBlur() {
              setEditableRowKeys([]);
            }
          };
        }
      });
    })) || []
  }));
}

// node_modules/@ant-design/pro-table/es/index.js
var es_default7 = Table_default;
export {
  CellEditorTable,
  ConfigConsumer,
  DragSortTable_default as DragSortTable,
  EditableTable_default as EditableProTable,
  IndexColumn_default as IndexColumn,
  ConfigConsumer as IntlConsumer,
  ListToolBar_default as ListToolBar,
  Table_default as ProTable,
  RowEditorTable,
  Form_default as Search,
  Dropdown_default as TableDropdown,
  Status_default as TableStatus,
  arEGIntl,
  caESIntl,
  createIntl,
  es_default7 as default,
  enUSIntl,
  esESIntl,
  frFRIntl,
  itITIntl,
  jaJPIntl,
  msMYIntl,
  ptBRIntl,
  ruRUIntl,
  thTHIntl,
  viVNIntl,
  zhCNIntl,
  zhTWIntl
};
//# sourceMappingURL=@ant-design_pro-table.js.map
