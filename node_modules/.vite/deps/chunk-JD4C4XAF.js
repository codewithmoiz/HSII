import {
  SWRConfig,
  configure,
  es_default,
  merge_default,
  require_quarterOfYear,
  require_zh_cn,
  useSWR,
  useSWRConfig,
  zh_CN_default
} from "./chunk-7NZG2QRH.js";
import {
  Keyframes_default,
  _assertThisInitialized,
  _asyncToGenerator,
  _classCallCheck,
  _createClass,
  _createForOfIteratorHelper,
  _createSuper,
  _inherits,
  _regeneratorRuntime,
  _toArray,
  _toConsumableArray,
  avatar_default,
  badge_default,
  button_default,
  col_default,
  config_provider_default,
  createTheme,
  form_default,
  get,
  menu_default,
  message_default,
  popconfirm_default,
  popover_default,
  require_customParseFormat,
  require_dayjs_min,
  result_default,
  row_default,
  set,
  skeleton_default,
  space_default,
  statistic_default,
  tabs_default,
  theme_default,
  toArray,
  tooltip_default,
  typography_default,
  useBreakpoint_default,
  useCacheToken,
  useLazyKVMap_default,
  useMergedState,
  useStyleRegister,
  version_default
} from "./chunk-QCNBY2GL.js";
import {
  require_jsx_runtime
} from "./chunk-FVZZTKNL.js";
import {
  CloseCircleFilled_default,
  DownOutlined_default,
  InfoCircleOutlined_default,
  LoadingOutlined_default,
  QuestionCircleOutlined_default,
  RightOutlined_default,
  TinyColor,
  _defineProperty,
  _objectSpread2,
  _objectWithoutProperties,
  _slicedToArray,
  _typeof,
  init_public_api,
  noteOnce,
  require_classnames
} from "./chunk-3RCLIGJL.js";
import {
  __export,
  __toESM,
  require_react
} from "./chunk-N6MYFXC3.js";

// node_modules/@ant-design/pro-provider/es/index.js
var import_react2 = __toESM(require_react());

// node_modules/@ant-design/pro-provider/es/locale/ar_EG.js
var ar_EG_default = {
  moneySymbol: "$",
  form: {
    lightFilter: {
      more: "المزيد",
      clear: "نظف",
      confirm: "تأكيد",
      itemUnit: "عناصر"
    }
  },
  tableForm: {
    search: "ابحث",
    reset: "إعادة تعيين",
    submit: "ارسال",
    collapsed: "مُقلص",
    expand: "مُوسع",
    inputPlaceholder: "الرجاء الإدخال",
    selectPlaceholder: "الرجاء الإختيار"
  },
  alert: {
    clear: "نظف",
    selected: "محدد",
    item: "عنصر"
  },
  pagination: {
    total: {
      range: " ",
      total: "من",
      item: "عناصر"
    }
  },
  tableToolBar: {
    leftPin: "ثبت على اليسار",
    rightPin: "ثبت على اليمين",
    noPin: "الغاء التثبيت",
    leftFixedTitle: "لصق على اليسار",
    rightFixedTitle: "لصق على اليمين",
    noFixedTitle: "إلغاء الإلصاق",
    reset: "إعادة تعيين",
    columnDisplay: "الأعمدة المعروضة",
    columnSetting: "الإعدادات",
    fullScreen: "وضع كامل الشاشة",
    exitFullScreen: "الخروج من وضع كامل الشاشة",
    reload: "تحديث",
    density: "الكثافة",
    densityDefault: "افتراضي",
    densityLarger: "أكبر",
    densityMiddle: "وسط",
    densitySmall: "مدمج"
  },
  stepsForm: {
    next: "التالي",
    prev: "السابق",
    submit: "أنهى"
  },
  loginForm: {
    submitText: "تسجيل الدخول"
  },
  editableTable: {
    action: {
      save: "أنقذ",
      cancel: "إلغاء الأمر",
      delete: "حذف",
      add: "إضافة صف من البيانات"
    }
  },
  switch: {
    open: "مفتوح",
    close: "غلق"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/ca_ES.js
var ca_ES_default = {
  moneySymbol: "€",
  form: {
    lightFilter: {
      more: "Més",
      clear: "Netejar",
      confirm: "Confirmar",
      itemUnit: "Elements"
    }
  },
  tableForm: {
    search: "Cercar",
    reset: "Netejar",
    submit: "Enviar",
    collapsed: "Expandir",
    expand: "Col·lapsar",
    inputPlaceholder: "Introduïu valor",
    selectPlaceholder: "Seleccioneu valor"
  },
  alert: {
    clear: "Netejar",
    selected: "Seleccionat",
    item: "Article"
  },
  pagination: {
    total: {
      range: " ",
      total: "de",
      item: "articles"
    }
  },
  tableToolBar: {
    leftPin: "Pin a l'esquerra",
    rightPin: "Pin a la dreta",
    noPin: "Sense Pin",
    leftFixedTitle: "Fixat a l'esquerra",
    rightFixedTitle: "Fixat a la dreta",
    noFixedTitle: "Sense fixar",
    reset: "Reiniciar",
    columnDisplay: "Mostrar Columna",
    columnSetting: "Configuració",
    fullScreen: "Pantalla Completa",
    exitFullScreen: "Sortir Pantalla Completa",
    reload: "Refrescar",
    density: "Densitat",
    densityDefault: "Per Defecte",
    densityLarger: "Llarg",
    densityMiddle: "Mitjà",
    densitySmall: "Compacte"
  },
  stepsForm: {
    next: "Següent",
    prev: "Anterior",
    submit: "Finalizar"
  },
  loginForm: {
    submitText: "Entrar"
  },
  editableTable: {
    action: {
      save: "Guardar",
      cancel: "Cancel·lar",
      delete: "Eliminar",
      add: "afegir una fila de dades"
    }
  },
  switch: {
    open: "obert",
    close: "tancat"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/cs_CZ.js
var cs_CZ_default = {
  moneySymbol: "Kč",
  deleteThisLine: "Smazat tento řádek",
  copyThisLine: "Kopírovat tento řádek",
  form: {
    lightFilter: {
      more: "Víc",
      clear: "Vymazat",
      confirm: "Potvrdit",
      itemUnit: "Položky"
    }
  },
  tableForm: {
    search: "Dotaz",
    reset: "Resetovat",
    submit: "Odeslat",
    collapsed: "Zvětšit",
    expand: "Zmenšit",
    inputPlaceholder: "Zadejte prosím",
    selectPlaceholder: "Vyberte prosím"
  },
  alert: {
    clear: "Vymazat",
    selected: "Vybraný",
    item: "Položka"
  },
  pagination: {
    total: {
      range: " ",
      total: "z",
      item: "položek"
    }
  },
  tableToolBar: {
    leftPin: "Připnout doleva",
    rightPin: "Připnout doprava",
    noPin: "Odepnuto",
    leftFixedTitle: "Fixováno nalevo",
    rightFixedTitle: "Fixováno napravo",
    noFixedTitle: "Neopraveno",
    reset: "Resetovat",
    columnDisplay: "Zobrazení sloupců",
    columnSetting: "Nastavení",
    fullScreen: "Celá obrazovka",
    exitFullScreen: "Ukončete celou obrazovku",
    reload: "Obnovit",
    density: "Hustota",
    densityDefault: "Výchozí",
    densityLarger: "Větší",
    densityMiddle: "Střední",
    densitySmall: "Kompaktní"
  },
  stepsForm: {
    next: "Další",
    prev: "Předchozí",
    submit: "Dokončit"
  },
  loginForm: {
    submitText: "Přihlásit se"
  },
  editableTable: {
    onlyOneLineEditor: "Upravit lze pouze jeden řádek",
    action: {
      save: "Uložit",
      cancel: "Zrušit",
      delete: "Vymazat",
      add: "přidat řádek dat"
    }
  },
  switch: {
    open: "otevřít",
    close: "zavřít"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/de_DE.js
var de_DE_default = {
  moneySymbol: "€",
  form: {
    lightFilter: {
      more: "Mehr",
      clear: "Zurücksetzen",
      confirm: "Bestätigen",
      itemUnit: "Einträge"
    }
  },
  tableForm: {
    search: "Suchen",
    reset: "Zurücksetzen",
    submit: "Absenden",
    collapsed: "Zeige mehr",
    expand: "Zeige weniger",
    inputPlaceholder: "Bitte eingeben",
    selectPlaceholder: "Bitte auswählen"
  },
  alert: {
    clear: "Zurücksetzen",
    selected: "Ausgewählt",
    item: "Eintrag"
  },
  pagination: {
    total: {
      range: " ",
      total: "von",
      item: "Einträgen"
    }
  },
  tableToolBar: {
    leftPin: "Links anheften",
    rightPin: "Rechts anheften",
    noPin: "Nicht angeheftet",
    leftFixedTitle: "Links fixiert",
    rightFixedTitle: "Rechts fixiert",
    noFixedTitle: "Nicht fixiert",
    reset: "Zurücksetzen",
    columnDisplay: "Angezeigte Reihen",
    columnSetting: "Einstellungen",
    fullScreen: "Vollbild",
    exitFullScreen: "Vollbild verlassen",
    reload: "Aktualisieren",
    density: "Abstand",
    densityDefault: "Standard",
    densityLarger: "Größer",
    densityMiddle: "Mittel",
    densitySmall: "Kompakt"
  },
  stepsForm: {
    next: "Weiter",
    prev: "Zurück",
    submit: "Abschließen"
  },
  loginForm: {
    submitText: "Anmelden"
  },
  editableTable: {
    action: {
      save: "Retten",
      cancel: "Abbrechen",
      delete: "Löschen",
      add: "Hinzufügen einer Datenzeile"
    }
  },
  switch: {
    open: "offen",
    close: "schließen"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/en_GB.js
var en_GB_default = {
  moneySymbol: "£",
  form: {
    lightFilter: {
      more: "More",
      clear: "Clear",
      confirm: "Confirm",
      itemUnit: "Items"
    }
  },
  tableForm: {
    search: "Query",
    reset: "Reset",
    submit: "Submit",
    collapsed: "Expand",
    expand: "Collapse",
    inputPlaceholder: "Please enter",
    selectPlaceholder: "Please select"
  },
  alert: {
    clear: "Clear",
    selected: "Selected",
    item: "Item"
  },
  pagination: {
    total: {
      range: " ",
      total: "of",
      item: "items"
    }
  },
  tableToolBar: {
    leftPin: "Pin to left",
    rightPin: "Pin to right",
    noPin: "Unpinned",
    leftFixedTitle: "Fixed to the left",
    rightFixedTitle: "Fixed to the right",
    noFixedTitle: "Not Fixed",
    reset: "Reset",
    columnDisplay: "Column Display",
    columnSetting: "Table Settings",
    fullScreen: "Full Screen",
    exitFullScreen: "Exit Full Screen",
    reload: "Refresh",
    density: "Density",
    densityDefault: "Default",
    densityLarger: "Larger",
    densityMiddle: "Middle",
    densitySmall: "Compact"
  },
  stepsForm: {
    next: "Next",
    prev: "Previous",
    submit: "Finish"
  },
  loginForm: {
    submitText: "Login"
  },
  editableTable: {
    onlyOneLineEditor: "Only one line can be edited",
    onlyAddOneLine: "Only one line can be added",
    action: {
      save: "Save",
      cancel: "Cancel",
      delete: "Delete",
      add: "add a row of data"
    }
  },
  switch: {
    open: "open",
    close: "close"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/en_US.js
var en_US_default = {
  moneySymbol: "$",
  deleteThisLine: "Delete this line",
  copyThisLine: "Copy this line",
  form: {
    lightFilter: {
      more: "More",
      clear: "Clear",
      confirm: "Confirm",
      itemUnit: "Items"
    }
  },
  tableForm: {
    search: "Query",
    reset: "Reset",
    submit: "Submit",
    collapsed: "Expand",
    expand: "Collapse",
    inputPlaceholder: "Please enter",
    selectPlaceholder: "Please select"
  },
  alert: {
    clear: "Clear",
    selected: "Selected",
    item: "Item"
  },
  pagination: {
    total: {
      range: " ",
      total: "of",
      item: "items"
    }
  },
  tableToolBar: {
    leftPin: "Pin to left",
    rightPin: "Pin to right",
    noPin: "Unpinned",
    leftFixedTitle: "Fixed to the left",
    rightFixedTitle: "Fixed to the right",
    noFixedTitle: "Not Fixed",
    reset: "Reset",
    columnDisplay: "Column Display",
    columnSetting: "Table Settings",
    fullScreen: "Full Screen",
    exitFullScreen: "Exit Full Screen",
    reload: "Refresh",
    density: "Density",
    densityDefault: "Default",
    densityLarger: "Larger",
    densityMiddle: "Middle",
    densitySmall: "Compact"
  },
  stepsForm: {
    next: "Next",
    prev: "Previous",
    submit: "Finish"
  },
  loginForm: {
    submitText: "Login"
  },
  editableTable: {
    onlyOneLineEditor: "Only one line can be edited",
    onlyAddOneLine: "Only one line can be added",
    action: {
      save: "Save",
      cancel: "Cancel",
      delete: "Delete",
      add: "add a row of data"
    }
  },
  switch: {
    open: "open",
    close: "close"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/es_ES.js
var es_ES_default = {
  moneySymbol: "€",
  form: {
    lightFilter: {
      more: "Más",
      clear: "Limpiar",
      confirm: "Confirmar",
      itemUnit: "artículos"
    }
  },
  tableForm: {
    search: "Buscar",
    reset: "Limpiar",
    submit: "Submit",
    collapsed: "Expandir",
    expand: "Colapsar",
    inputPlaceholder: "Ingrese valor",
    selectPlaceholder: "Seleccione valor"
  },
  alert: {
    clear: "Limpiar",
    selected: "Seleccionado",
    item: "Articulo"
  },
  pagination: {
    total: {
      range: " ",
      total: "de",
      item: "artículos"
    }
  },
  tableToolBar: {
    leftPin: "Pin a la izquierda",
    rightPin: "Pin a la derecha",
    noPin: "Sin Pin",
    leftFixedTitle: "Fijado a la izquierda",
    rightFixedTitle: "Fijado a la derecha",
    noFixedTitle: "Sin Fijar",
    reset: "Reiniciar",
    columnDisplay: "Mostrar Columna",
    columnSetting: "Configuración",
    fullScreen: "Pantalla Completa",
    exitFullScreen: "Salir Pantalla Completa",
    reload: "Refrescar",
    density: "Densidad",
    densityDefault: "Por Defecto",
    densityLarger: "Largo",
    densityMiddle: "Medio",
    densitySmall: "Compacto"
  },
  stepsForm: {
    next: "Siguiente",
    prev: "Anterior",
    submit: "Finalizar"
  },
  loginForm: {
    submitText: "Entrar"
  },
  editableTable: {
    action: {
      save: "Guardar",
      cancel: "Descartar",
      delete: "Borrar",
      add: "añadir una fila de datos"
    }
  },
  switch: {
    open: "abrir",
    close: "cerrar"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/fa_IR.js
var fa_IR_default = {
  moneySymbol: "تومان",
  form: {
    lightFilter: {
      more: "بیشتر",
      clear: "پاک کردن",
      confirm: "تایید",
      itemUnit: "مورد"
    }
  },
  tableForm: {
    search: "جستجو",
    reset: "بازنشانی",
    submit: "تایید",
    collapsed: "نمایش بیشتر",
    expand: "نمایش کمتر",
    inputPlaceholder: "پیدا کنید",
    selectPlaceholder: "انتخاب کنید"
  },
  alert: {
    clear: "پاک سازی",
    selected: "انتخاب",
    item: "مورد"
  },
  pagination: {
    total: {
      range: " ",
      total: "از",
      item: "مورد"
    }
  },
  tableToolBar: {
    leftPin: "سنجاق به چپ",
    rightPin: "سنجاق به راست",
    noPin: "سنجاق نشده",
    leftFixedTitle: "ثابت شده در چپ",
    rightFixedTitle: "ثابت شده در راست",
    noFixedTitle: "شناور",
    reset: "بازنشانی",
    columnDisplay: "نمایش همه",
    columnSetting: "تنظیمات",
    fullScreen: "تمام صفحه",
    exitFullScreen: "خروج از حالت تمام صفحه",
    reload: "تازه سازی",
    density: "تراکم",
    densityDefault: "پیش فرض",
    densityLarger: "بزرگ",
    densityMiddle: "متوسط",
    densitySmall: "کوچک"
  },
  stepsForm: {
    next: "بعدی",
    prev: "قبلی",
    submit: "اتمام"
  },
  loginForm: {
    submitText: "ورود"
  },
  editableTable: {
    action: {
      save: "ذخیره",
      cancel: "لغو",
      delete: "حذف",
      add: "یک ردیف داده اضافه کنید"
    }
  },
  switch: {
    open: "باز",
    close: "نزدیک"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/fr_FR.js
var fr_FR_default = {
  moneySymbol: "€",
  form: {
    lightFilter: {
      more: "Plus",
      clear: "Effacer",
      confirm: "Confirmer",
      itemUnit: "Items"
    }
  },
  tableForm: {
    search: "Rechercher",
    reset: "Réinitialiser",
    submit: "Envoyer",
    collapsed: "Agrandir",
    expand: "Réduire",
    inputPlaceholder: "Entrer une valeur",
    selectPlaceholder: "Sélectionner une valeur"
  },
  alert: {
    clear: "Réinitialiser",
    selected: "Sélectionné",
    item: "Item"
  },
  pagination: {
    total: {
      range: " ",
      total: "sur",
      item: "éléments"
    }
  },
  tableToolBar: {
    leftPin: "Épingler à gauche",
    rightPin: "Épingler à gauche",
    noPin: "Sans épingle",
    leftFixedTitle: "Fixer à gauche",
    rightFixedTitle: "Fixer à droite",
    noFixedTitle: "Non fixé",
    reset: "Réinitialiser",
    columnDisplay: "Affichage colonne",
    columnSetting: "Réglages",
    fullScreen: "Plein écran",
    exitFullScreen: "Quitter Plein écran",
    reload: "Rafraichir",
    density: "Densité",
    densityDefault: "Par défaut",
    densityLarger: "Larger",
    densityMiddle: "Moyenne",
    densitySmall: "Compacte"
  },
  stepsForm: {
    next: "Suivante",
    prev: "Précédente",
    submit: "Finaliser"
  },
  loginForm: {
    submitText: "Se connecter"
  },
  editableTable: {
    action: {
      save: "Sauvegarder",
      cancel: "Annuler",
      delete: "Supprimer",
      add: "ajouter une ligne de données"
    }
  },
  switch: {
    open: "ouvert",
    close: "près"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/he_IL.js
var he_IL_default = {
  moneySymbol: "₪",
  deleteThisLine: "מחק שורה זו",
  copyThisLine: "העתק שורה זו",
  form: {
    lightFilter: {
      more: "יותר",
      clear: "נקה",
      confirm: "אישור",
      itemUnit: "פריטים"
    }
  },
  tableForm: {
    search: "חיפוש",
    reset: "איפוס",
    submit: "שלח",
    collapsed: "הרחב",
    expand: "כווץ",
    inputPlaceholder: "אנא הכנס",
    selectPlaceholder: "אנא בחר"
  },
  alert: {
    clear: "נקה",
    selected: "נבחר",
    item: "פריט"
  },
  pagination: {
    total: {
      range: " ",
      total: "מתוך",
      item: "פריטים"
    }
  },
  tableToolBar: {
    leftPin: "הצמד לשמאל",
    rightPin: "הצמד לימין",
    noPin: "לא מצורף",
    leftFixedTitle: "מוצמד לשמאל",
    rightFixedTitle: "מוצמד לימין",
    noFixedTitle: "לא מוצמד",
    reset: "איפוס",
    columnDisplay: "תצוגת עמודות",
    columnSetting: "הגדרות",
    fullScreen: "מסך מלא",
    exitFullScreen: "צא ממסך מלא",
    reload: "רענן",
    density: "רזולוציה",
    densityDefault: "ברירת מחדל",
    densityLarger: "גדול",
    densityMiddle: "בינוני",
    densitySmall: "קטן"
  },
  stepsForm: {
    next: "הבא",
    prev: "קודם",
    submit: "סיום"
  },
  loginForm: {
    submitText: "כניסה"
  },
  editableTable: {
    onlyOneLineEditor: "ניתן לערוך רק שורה אחת",
    action: {
      save: "שמור",
      cancel: "ביטול",
      delete: "מחיקה",
      add: "הוסף שורת נתונים"
    }
  },
  switch: {
    open: "פתח",
    close: "סגור"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/hr_HR.js
var hr_HR_default = {
  moneySymbol: "kn",
  form: {
    lightFilter: {
      more: "Više",
      clear: "Očisti",
      confirm: "Potvrdi",
      itemUnit: "Stavke"
    }
  },
  tableForm: {
    search: "Pretraži",
    reset: "Poništi",
    submit: "Potvrdi",
    collapsed: "Raširi",
    expand: "Skupi",
    inputPlaceholder: "Unesite",
    selectPlaceholder: "Odaberite"
  },
  alert: {
    clear: "Očisti",
    selected: "Odaberi",
    item: "stavke"
  },
  pagination: {
    total: {
      range: " ",
      total: "od",
      item: "stavke"
    }
  },
  tableToolBar: {
    leftPin: "Prikači lijevo",
    rightPin: "Prikači desno",
    noPin: "Bez prikačenja",
    leftFixedTitle: "Fiksiraj lijevo",
    rightFixedTitle: "Fiksiraj desno",
    noFixedTitle: "Bez fiksiranja",
    reset: "Resetiraj",
    columnDisplay: "Prikaz stupaca",
    columnSetting: "Postavke",
    fullScreen: "Puni zaslon",
    exitFullScreen: "Izađi iz punog zaslona",
    reload: "Ponovno učitaj",
    density: "Veličina",
    densityDefault: "Zadano",
    densityLarger: "Veliko",
    densityMiddle: "Srednje",
    densitySmall: "Malo"
  },
  stepsForm: {
    next: "Sljedeći",
    prev: "Prethodni",
    submit: "Kraj"
  },
  loginForm: {
    submitText: "Prijava"
  },
  editableTable: {
    action: {
      save: "Spremi",
      cancel: "Odustani",
      delete: "Obriši",
      add: "dodajte red podataka"
    }
  },
  switch: {
    open: "otvori",
    close: "zatvori"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/id_ID.js
var id_ID_default = {
  moneySymbol: "RP",
  form: {
    lightFilter: {
      more: "Lebih",
      clear: "Hapus",
      confirm: "Konfirmasi",
      itemUnit: "Unit"
    }
  },
  tableForm: {
    search: "Cari",
    reset: "Atur ulang",
    submit: "Kirim",
    collapsed: "Lebih sedikit",
    expand: "Lebih banyak",
    inputPlaceholder: "Masukkan pencarian",
    selectPlaceholder: "Pilih"
  },
  alert: {
    clear: "Hapus",
    selected: "Dipilih",
    item: "Butir"
  },
  pagination: {
    total: {
      range: " ",
      total: "Dari",
      item: "Butir"
    }
  },
  tableToolBar: {
    leftPin: "Pin kiri",
    rightPin: "Pin kanan",
    noPin: "Tidak ada pin",
    leftFixedTitle: "Rata kiri",
    rightFixedTitle: "Rata kanan",
    noFixedTitle: "Tidak tetap",
    reset: "Atur ulang",
    columnDisplay: "Tampilan kolom",
    columnSetting: "Pengaturan",
    fullScreen: "Layar penuh",
    exitFullScreen: "Keluar layar penuh",
    reload: "Atur ulang",
    density: "Kerapatan",
    densityDefault: "Standar",
    densityLarger: "Lebih besar",
    densityMiddle: "Sedang",
    densitySmall: "Rapat"
  },
  stepsForm: {
    next: "Selanjutnya",
    prev: "Sebelumnya",
    submit: "Selesai"
  },
  loginForm: {
    submitText: "Login"
  },
  editableTable: {
    action: {
      save: "simpan",
      cancel: "batal",
      delete: "hapus",
      add: "Tambahkan baris data"
    }
  },
  switch: {
    open: "buka",
    close: "tutup"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/it_IT.js
var it_IT_default = {
  moneySymbol: "€",
  form: {
    lightFilter: {
      more: "più",
      clear: "pulisci",
      confirm: "conferma",
      itemUnit: "elementi"
    }
  },
  tableForm: {
    search: "Filtra",
    reset: "Pulisci",
    submit: "Invia",
    collapsed: "Espandi",
    expand: "Contrai",
    inputPlaceholder: "Digita",
    selectPlaceholder: "Seleziona"
  },
  alert: {
    clear: "Rimuovi",
    selected: "Selezionati",
    item: "elementi"
  },
  pagination: {
    total: {
      range: " ",
      total: "di",
      item: "elementi"
    }
  },
  tableToolBar: {
    leftPin: "Fissa a sinistra",
    rightPin: "Fissa a destra",
    noPin: "Ripristina posizione",
    leftFixedTitle: "Fissato a sinistra",
    rightFixedTitle: "Fissato a destra",
    noFixedTitle: "Non fissato",
    reset: "Ripristina",
    columnDisplay: "Disposizione colonne",
    columnSetting: "Impostazioni",
    fullScreen: "Modalità schermo intero",
    exitFullScreen: "Esci da modalità schermo intero",
    reload: "Ricarica",
    density: "Grandezza tabella",
    densityDefault: "predefinito",
    densityLarger: "Grande",
    densityMiddle: "Media",
    densitySmall: "Compatta"
  },
  stepsForm: {
    next: "successivo",
    prev: "precedente",
    submit: "finisci"
  },
  loginForm: {
    submitText: "Accedi"
  },
  editableTable: {
    action: {
      save: "salva",
      cancel: "annulla",
      delete: "Delete",
      add: "add a row of data"
    }
  },
  switch: {
    open: "open",
    close: "chiudi"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/ja_JP.js
var ja_JP_default = {
  moneySymbol: "¥",
  form: {
    lightFilter: {
      more: "更に",
      clear: "クリア",
      confirm: "確認",
      itemUnit: "アイテム"
    }
  },
  tableForm: {
    search: "検索",
    reset: "リセット",
    submit: "送信",
    collapsed: "拡大",
    expand: "折畳",
    inputPlaceholder: "入力してください",
    selectPlaceholder: "選択してください"
  },
  alert: {
    clear: "クリア",
    selected: "選択した",
    item: "アイテム"
  },
  pagination: {
    total: {
      range: "レコード",
      total: "/合計",
      item: " "
    }
  },
  tableToolBar: {
    leftPin: "左に固定",
    rightPin: "右に固定",
    noPin: "キャンセル",
    leftFixedTitle: "左に固定された項目",
    rightFixedTitle: "右に固定された項目",
    noFixedTitle: "固定されてない項目",
    reset: "リセット",
    columnDisplay: "表示列",
    columnSetting: "列表示設定",
    fullScreen: "フルスクリーン",
    exitFullScreen: "終了",
    reload: "更新",
    density: "行高",
    densityDefault: "デフォルト",
    densityLarger: "大",
    densityMiddle: "中",
    densitySmall: "小"
  },
  stepsForm: {
    next: "次へ",
    prev: "前へ",
    submit: "送信"
  },
  loginForm: {
    submitText: "ログイン"
  },
  editableTable: {
    action: {
      save: "保存",
      cancel: "キャンセル",
      delete: "削除",
      add: "追加"
    }
  },
  switch: {
    open: "開く",
    close: "閉じる"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/ko_KR.js
var ko_KR_default = {
  moneySymbol: "₩",
  form: {
    lightFilter: {
      more: "더보기",
      clear: "초기화",
      confirm: "확인",
      itemUnit: "건수"
    }
  },
  tableForm: {
    search: "조회",
    reset: "초기화",
    submit: "제출",
    collapsed: "확장",
    expand: "닫기",
    inputPlaceholder: "입력해 주세요",
    selectPlaceholder: "선택해 주세요"
  },
  alert: {
    clear: "취소",
    selected: "선택",
    item: "건"
  },
  pagination: {
    total: {
      range: " ",
      total: "/ 총",
      item: "건"
    }
  },
  tableToolBar: {
    leftPin: "왼쪽으로 핀",
    rightPin: "오른쪽으로 핀",
    noPin: "핀 제거",
    leftFixedTitle: "왼쪽으로 고정",
    rightFixedTitle: "오른쪽으로 고정",
    noFixedTitle: "비고정",
    reset: "초기화",
    columnDisplay: "컬럼 표시",
    columnSetting: "설정",
    fullScreen: "전체 화면",
    exitFullScreen: "전체 화면 취소",
    reload: "새로 고침",
    density: "여백",
    densityDefault: "기본",
    densityLarger: "많은 여백",
    densityMiddle: "중간 여백",
    densitySmall: "좁은 여백"
  },
  stepsForm: {
    next: "다음",
    prev: "이전",
    submit: "종료"
  },
  loginForm: {
    submitText: "로그인"
  },
  editableTable: {
    action: {
      save: "저장",
      cancel: "취소",
      delete: "삭제",
      add: "데이터 행 추가"
    }
  },
  switch: {
    open: "열",
    close: "가까 운"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/mn_MN.js
var mn_MN_default = {
  moneySymbol: "₮",
  form: {
    lightFilter: {
      more: "Илүү",
      clear: "Цэвэрлэх",
      confirm: "Баталгаажуулах",
      itemUnit: "Нэгжүүд"
    }
  },
  tableForm: {
    search: "Хайх",
    reset: "Шинэчлэх",
    submit: "Илгээх",
    collapsed: "Өргөтгөх",
    expand: "Хураах",
    inputPlaceholder: "Утга оруулна уу",
    selectPlaceholder: "Утга сонгоно уу"
  },
  alert: {
    clear: "Цэвэрлэх",
    selected: "Сонгогдсон",
    item: "Нэгж"
  },
  pagination: {
    total: {
      range: " ",
      total: "Нийт",
      item: "мөр"
    }
  },
  tableToolBar: {
    leftPin: "Зүүн тийш бэхлэх",
    rightPin: "Баруун тийш бэхлэх",
    noPin: "Бэхлэхгүй",
    leftFixedTitle: "Зүүн зэрэгцүүлэх",
    rightFixedTitle: "Баруун зэрэгцүүлэх",
    noFixedTitle: "Зэрэгцүүлэхгүй",
    reset: "Шинэчлэх",
    columnDisplay: "Баганаар харуулах",
    columnSetting: "Тохиргоо",
    fullScreen: "Бүтэн дэлгэцээр",
    exitFullScreen: "Бүтэн дэлгэц цуцлах",
    reload: "Шинэчлэх",
    density: "Хэмжээ",
    densityDefault: "Хэвийн",
    densityLarger: "Том",
    densityMiddle: "Дунд",
    densitySmall: "Жижиг"
  },
  stepsForm: {
    next: "Дараах",
    prev: "Өмнөх",
    submit: "Дуусгах"
  },
  loginForm: {
    submitText: "Нэвтрэх"
  },
  editableTable: {
    action: {
      save: "Хадгалах",
      cancel: "Цуцлах",
      delete: "Устгах",
      add: "Мөр нэмэх"
    }
  },
  switch: {
    open: "Нээх",
    close: "Хаах"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/ms_MY.js
var ms_MY_default = {
  moneySymbol: "RM",
  form: {
    lightFilter: {
      more: "Lebih banyak",
      clear: "Jelas",
      confirm: "Mengesahkan",
      itemUnit: "Item"
    }
  },
  tableForm: {
    search: "Cari",
    reset: "Menetapkan semula",
    submit: "Hantar",
    collapsed: "Kembang",
    expand: "Kuncup",
    inputPlaceholder: "Sila masuk",
    selectPlaceholder: "Sila pilih"
  },
  alert: {
    clear: "Padam",
    selected: "Dipilih",
    item: "Item"
  },
  pagination: {
    total: {
      range: " ",
      total: "daripada",
      item: "item"
    }
  },
  tableToolBar: {
    leftPin: "Pin ke kiri",
    rightPin: "Pin ke kanan",
    noPin: "Tidak pin",
    leftFixedTitle: "Tetap ke kiri",
    rightFixedTitle: "Tetap ke kanan",
    noFixedTitle: "Tidak Tetap",
    reset: "Menetapkan semula",
    columnDisplay: "Lajur",
    columnSetting: "Settings",
    fullScreen: "Full Screen",
    exitFullScreen: "Keluar Full Screen",
    reload: "Muat Semula",
    density: "Densiti",
    densityDefault: "Biasa",
    densityLarger: "Besar",
    densityMiddle: "Tengah",
    densitySmall: "Kecil"
  },
  stepsForm: {
    next: "Seterusnya",
    prev: "Sebelumnya",
    submit: "Selesai"
  },
  loginForm: {
    submitText: "Log Masuk"
  },
  editableTable: {
    action: {
      save: "Simpan",
      cancel: "Membatalkan",
      delete: "Menghapuskan",
      add: "tambah baris data"
    }
  },
  switch: {
    open: "Terbuka",
    close: "Tutup"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/pl_PL.js
var pl_PL_default = {
  moneySymbol: "zł",
  form: {
    lightFilter: {
      more: "Więcej",
      clear: "Wyczyść",
      confirm: "Potwierdź",
      itemUnit: "Ilość"
    }
  },
  tableForm: {
    search: "Szukaj",
    reset: "Reset",
    submit: "Zatwierdź",
    collapsed: "Pokaż wiecej",
    expand: "Pokaż mniej",
    inputPlaceholder: "Proszę podać",
    selectPlaceholder: "Proszę wybrać"
  },
  alert: {
    clear: "Wyczyść",
    selected: "Wybrane",
    item: "Wpis"
  },
  pagination: {
    total: {
      range: " ",
      total: "z",
      item: "Wpisów"
    }
  },
  tableToolBar: {
    leftPin: "Przypnij do lewej",
    rightPin: "Przypnij do prawej",
    noPin: "Odepnij",
    leftFixedTitle: "Przypięte do lewej",
    rightFixedTitle: "Przypięte do prawej",
    noFixedTitle: "Nieprzypięte",
    reset: "Reset",
    columnDisplay: "Wyświetlane wiersze",
    columnSetting: "Ustawienia",
    fullScreen: "Pełen ekran",
    exitFullScreen: "Zamknij pełen ekran",
    reload: "Odśwież",
    density: "Odstęp",
    densityDefault: "Standard",
    densityLarger: "Wiekszy",
    densityMiddle: "Sredni",
    densitySmall: "Kompaktowy"
  },
  stepsForm: {
    next: "Weiter",
    prev: "Zurück",
    submit: "Abschließen"
  },
  loginForm: {
    submitText: "Zaloguj się"
  },
  editableTable: {
    action: {
      save: "Zapisać",
      cancel: "Anuluj",
      delete: "Usunąć",
      add: "dodawanie wiersza danych"
    }
  },
  switch: {
    open: "otwierać",
    close: "zamykać"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/pt_BR.js
var pt_BR_default = {
  moneySymbol: "R$",
  form: {
    lightFilter: {
      more: "Mais",
      clear: "Limpar",
      confirm: "Confirmar",
      itemUnit: "Itens"
    }
  },
  tableForm: {
    search: "Filtrar",
    reset: "Limpar",
    submit: "Confirmar",
    collapsed: "Expandir",
    expand: "Colapsar",
    inputPlaceholder: "Por favor insira",
    selectPlaceholder: "Por favor selecione"
  },
  alert: {
    clear: "Limpar",
    selected: "Selecionado(s)",
    item: "Item(s)"
  },
  pagination: {
    total: {
      range: " ",
      total: "de",
      item: "itens"
    }
  },
  tableToolBar: {
    leftPin: "Fixar à esquerda",
    rightPin: "Fixar à direita",
    noPin: "Desfixado",
    leftFixedTitle: "Fixado à esquerda",
    rightFixedTitle: "Fixado à direita",
    noFixedTitle: "Não fixado",
    reset: "Limpar",
    columnDisplay: "Mostrar Coluna",
    columnSetting: "Configurações",
    fullScreen: "Tela Cheia",
    exitFullScreen: "Sair da Tela Cheia",
    reload: "Atualizar",
    density: "Densidade",
    densityDefault: "Padrão",
    densityLarger: "Largo",
    densityMiddle: "Médio",
    densitySmall: "Compacto"
  },
  stepsForm: {
    next: "Próximo",
    prev: "Anterior",
    submit: "Enviar"
  },
  loginForm: {
    submitText: "Entrar"
  },
  editableTable: {
    action: {
      save: "Salvar",
      cancel: "Cancelar",
      delete: "Apagar",
      add: "adicionar uma linha de dados"
    }
  },
  switch: {
    open: "abrir",
    close: "fechar"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/ru_RU.js
var ru_RU_default = {
  moneySymbol: "₽",
  form: {
    lightFilter: {
      more: "Еще",
      clear: "Очистить",
      confirm: "ОК",
      itemUnit: "Позиции"
    }
  },
  tableForm: {
    search: "Найти",
    reset: "Сброс",
    submit: "Отправить",
    collapsed: "Развернуть",
    expand: "Свернуть",
    inputPlaceholder: "Введите значение",
    selectPlaceholder: "Выберите значение"
  },
  alert: {
    clear: "Очистить",
    selected: "Выбрано",
    item: "элементов"
  },
  pagination: {
    total: {
      range: " ",
      total: "из",
      item: "элементов"
    }
  },
  tableToolBar: {
    leftPin: "Закрепить слева",
    rightPin: "Закрепить справа",
    noPin: "Открепить",
    leftFixedTitle: "Закреплено слева",
    rightFixedTitle: "Закреплено справа",
    noFixedTitle: "Не закреплено",
    reset: "Сброс",
    columnDisplay: "Отображение столбца",
    columnSetting: "Настройки",
    fullScreen: "Полный экран",
    exitFullScreen: "Выйти из полноэкранного режима",
    reload: "Обновить",
    density: "Размер",
    densityDefault: "По умолчанию",
    densityLarger: "Большой",
    densityMiddle: "Средний",
    densitySmall: "Сжатый"
  },
  stepsForm: {
    next: "Следующий",
    prev: "Предыдущий",
    submit: "Завершить"
  },
  loginForm: {
    submitText: "Вход"
  },
  editableTable: {
    action: {
      save: "Сохранить",
      cancel: "Отменить",
      delete: "Удалить",
      add: "добавить ряд данных"
    }
  },
  switch: {
    open: "Открытый чемпионат мира по теннису",
    close: "По адресу:"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/sk_SK.js
var sk_SK_default = {
  moneySymbol: "€",
  deleteThisLine: "Odstrániť tento riadok",
  copyThisLine: "Skopírujte tento riadok",
  form: {
    lightFilter: {
      more: "Viac",
      clear: "Vyčistiť",
      confirm: "Potvrďte",
      itemUnit: "Položky"
    }
  },
  tableForm: {
    search: "Vyhladať",
    reset: "Resetovať",
    submit: "Odoslať",
    collapsed: "Rozbaliť",
    expand: "Zbaliť",
    inputPlaceholder: "Prosím, zadajte",
    selectPlaceholder: "Prosím, vyberte"
  },
  alert: {
    clear: "Vyčistiť",
    selected: "Vybraný",
    item: "Položka"
  },
  pagination: {
    total: {
      range: " ",
      total: "z",
      item: "položiek"
    }
  },
  tableToolBar: {
    leftPin: "Pripnúť vľavo",
    rightPin: "Pripnúť vpravo",
    noPin: "Odopnuté",
    leftFixedTitle: "Fixované na ľavo",
    rightFixedTitle: "Fixované na pravo",
    noFixedTitle: "Nefixované",
    reset: "Resetovať",
    columnDisplay: "Zobrazenie stĺpcov",
    columnSetting: "Nastavenia",
    fullScreen: "Celá obrazovka",
    exitFullScreen: "Ukončiť celú obrazovku",
    reload: "Obnoviť",
    density: "Hustota",
    densityDefault: "Predvolené",
    densityLarger: "Väčšie",
    densityMiddle: "Stredné",
    densitySmall: "Kompaktné"
  },
  stepsForm: {
    next: "Ďalšie",
    prev: "Predchádzajúce",
    submit: "Potvrdiť"
  },
  loginForm: {
    submitText: "Prihlásiť sa"
  },
  editableTable: {
    onlyOneLineEditor: "Upravovať možno iba jeden riadok",
    action: {
      save: "Uložiť",
      cancel: "Zrušiť",
      delete: "Odstrániť",
      add: "pridať riadok údajov"
    }
  },
  switch: {
    open: "otvoriť",
    close: "zavrieť"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/sr_RS.js
var sr_RS_default = {
  moneySymbol: "RSD",
  form: {
    lightFilter: {
      more: "Više",
      clear: "Očisti",
      confirm: "Potvrdi",
      itemUnit: "Stavke"
    }
  },
  tableForm: {
    search: "Pronađi",
    reset: "Resetuj",
    submit: "Pošalji",
    collapsed: "Proširi",
    expand: "Skupi",
    inputPlaceholder: "Molimo unesite",
    selectPlaceholder: "Molimo odaberite"
  },
  alert: {
    clear: "Očisti",
    selected: "Odabrano",
    item: "Stavka"
  },
  pagination: {
    total: {
      range: " ",
      total: "od",
      item: "stavki"
    }
  },
  tableToolBar: {
    leftPin: "Zakači levo",
    rightPin: "Zakači desno",
    noPin: "Nije zakačeno",
    leftFixedTitle: "Fiksirano levo",
    rightFixedTitle: "Fiksirano desno",
    noFixedTitle: "Nije fiksirano",
    reset: "Resetuj",
    columnDisplay: "Prikaz kolona",
    columnSetting: "Podešavanja",
    fullScreen: "Pun ekran",
    exitFullScreen: "Zatvori pun ekran",
    reload: "Osveži",
    density: "Veličina",
    densityDefault: "Podrazumevana",
    densityLarger: "Veća",
    densityMiddle: "Srednja",
    densitySmall: "Kompaktna"
  },
  stepsForm: {
    next: "Dalje",
    prev: "Nazad",
    submit: "Gotovo"
  },
  loginForm: {
    submitText: "Prijavi se"
  },
  editableTable: {
    action: {
      save: "Sačuvaj",
      cancel: "Poništi",
      delete: "Obriši",
      add: "dodajte red podataka"
    }
  },
  switch: {
    open: "Отворите",
    close: "Затворите"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/th_TH.js
var th_TH_default = {
  moneySymbol: "฿",
  deleteThisLine: "ลบบรรทัดนี้",
  copyThisLine: "คัดลอกบรรทัดนี้",
  form: {
    lightFilter: {
      more: "มากกว่า",
      clear: "ชัดเจน",
      confirm: "ยืนยัน",
      itemUnit: "รายการ"
    }
  },
  tableForm: {
    search: "สอบถาม",
    reset: "รีเซ็ต",
    submit: "ส่ง",
    collapsed: "ขยาย",
    expand: "ทรุด",
    inputPlaceholder: "กรุณาป้อน",
    selectPlaceholder: "โปรดเลือก"
  },
  alert: {
    clear: "ชัดเจน",
    selected: "เลือกแล้ว",
    item: "รายการ"
  },
  pagination: {
    total: {
      range: " ",
      total: "ของ",
      item: "รายการ"
    }
  },
  tableToolBar: {
    leftPin: "ปักหมุดไปทางซ้าย",
    rightPin: "ปักหมุดไปทางขวา",
    noPin: "เลิกตรึงแล้ว",
    leftFixedTitle: "แก้ไขด้านซ้าย",
    rightFixedTitle: "แก้ไขด้านขวา",
    noFixedTitle: "ไม่คงที่",
    reset: "รีเซ็ต",
    columnDisplay: "การแสดงคอลัมน์",
    columnSetting: "การตั้งค่า",
    fullScreen: "เต็มจอ",
    exitFullScreen: "ออกจากโหมดเต็มหน้าจอ",
    reload: "รีเฟรช",
    density: "ความหนาแน่น",
    densityDefault: "ค่าเริ่มต้น",
    densityLarger: "ขนาดใหญ่ขึ้น",
    densityMiddle: "กลาง",
    densitySmall: "กะทัดรัด"
  },
  stepsForm: {
    next: "ถัดไป",
    prev: "ก่อนหน้า",
    submit: "เสร็จ"
  },
  loginForm: {
    submitText: "เข้าสู่ระบบ"
  },
  editableTable: {
    onlyOneLineEditor: "แก้ไขได้เพียงบรรทัดเดียวเท่านั้น",
    action: {
      save: "บันทึก",
      cancel: "ยกเลิก",
      delete: "ลบ",
      add: "เพิ่มแถวของข้อมูล"
    }
  },
  switch: {
    open: "เปิด",
    close: "ปิด"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/tr_TR.js
var tr_TR_default = {
  moneySymbol: "₺",
  form: {
    lightFilter: {
      more: "Daha Fazla",
      clear: "Temizle",
      confirm: "Onayla",
      itemUnit: "Öğeler"
    }
  },
  tableForm: {
    search: "Filtrele",
    reset: "Sıfırla",
    submit: "Gönder",
    collapsed: "Daha fazla",
    expand: "Daha az",
    inputPlaceholder: "Filtrelemek için bir değer girin",
    selectPlaceholder: "Filtrelemek için bir değer seçin"
  },
  alert: {
    clear: "Temizle",
    selected: "Seçili",
    item: "Öğe"
  },
  pagination: {
    total: {
      range: " ",
      total: "Toplam",
      item: "Öğe"
    }
  },
  tableToolBar: {
    leftPin: "Sola sabitle",
    rightPin: "Sağa sabitle",
    noPin: "Sabitlemeyi kaldır",
    leftFixedTitle: "Sola sabitlendi",
    rightFixedTitle: "Sağa sabitlendi",
    noFixedTitle: "Sabitlenmedi",
    reset: "Sıfırla",
    columnDisplay: "Kolon Görünümü",
    columnSetting: "Ayarlar",
    fullScreen: "Tam Ekran",
    exitFullScreen: "Tam Ekrandan Çık",
    reload: "Yenile",
    density: "Kalınlık",
    densityDefault: "Varsayılan",
    densityLarger: "Büyük",
    densityMiddle: "Orta",
    densitySmall: "Küçük"
  },
  stepsForm: {
    next: "Sıradaki",
    prev: "Önceki",
    submit: "Gönder"
  },
  loginForm: {
    submitText: "Giriş Yap"
  },
  editableTable: {
    action: {
      save: "Kaydet",
      cancel: "Vazgeç",
      delete: "Sil",
      add: "foegje in rige gegevens ta"
    }
  },
  switch: {
    open: "açık",
    close: "kapatmak"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/uk_UA.js
var uk_UA_default = {
  moneySymbol: "₴",
  deleteThisLine: "Видатили рядок",
  copyThisLine: "Скопіювати рядок",
  form: {
    lightFilter: {
      more: "Ще",
      clear: "Очистити",
      confirm: "Ок",
      itemUnit: "Позиції"
    }
  },
  tableForm: {
    search: "Пошук",
    reset: "Очистити",
    submit: "Відправити",
    collapsed: "Розгорнути",
    expand: "Згорнути",
    inputPlaceholder: "Введіть значення",
    selectPlaceholder: "Оберіть значення"
  },
  alert: {
    clear: "Очистити",
    selected: "Обрано",
    item: "елементів"
  },
  pagination: {
    total: {
      range: " ",
      total: "з",
      item: "елементів"
    }
  },
  tableToolBar: {
    leftPin: "Закріпити зліва",
    rightPin: "Закріпити справа",
    noPin: "Відкріпити",
    leftFixedTitle: "Закріплено зліва",
    rightFixedTitle: "Закріплено справа",
    noFixedTitle: "Не закріплено",
    reset: "Скинути",
    columnDisplay: "Відображення стовпців",
    columnSetting: "Налаштування",
    fullScreen: "Повноекранний режим",
    exitFullScreen: "Вийти з повноекранного режиму",
    reload: "Оновити",
    density: "Розмір",
    densityDefault: "За замовчуванням",
    densityLarger: "Великий",
    densityMiddle: "Середній",
    densitySmall: "Стислий"
  },
  stepsForm: {
    next: "Наступний",
    prev: "Попередній",
    submit: "Завершити"
  },
  loginForm: {
    submitText: "Вхіх"
  },
  editableTable: {
    onlyOneLineEditor: "Тільки один рядок може бути редагований одночасно",
    action: {
      save: "Зберегти",
      cancel: "Відмінити",
      delete: "Видалити",
      add: "додати рядок"
    }
  },
  switch: {
    open: "Відкрито",
    close: "Закрито"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/uz_UZ.js
var uz_UZ_default = {
  moneySymbol: "UZS",
  form: {
    lightFilter: {
      more: "Yana",
      clear: "Tozalash",
      confirm: "OK",
      itemUnit: "Pozitsiyalar"
    }
  },
  tableForm: {
    search: "Qidirish",
    reset: "Qayta tiklash",
    submit: "Yuborish",
    collapsed: "Yig‘ish",
    expand: "Kengaytirish",
    inputPlaceholder: "Qiymatni kiriting",
    selectPlaceholder: "Qiymatni tanlang"
  },
  alert: {
    clear: "Tozalash",
    selected: "Tanlangan",
    item: "elementlar"
  },
  pagination: {
    total: {
      range: " ",
      total: "dan",
      item: "elementlar"
    }
  },
  tableToolBar: {
    leftPin: "Chapga mahkamlash",
    rightPin: "O‘ngga mahkamlash",
    noPin: "Mahkamlashni olib tashlash",
    leftFixedTitle: "Chapga mahkamlangan",
    rightFixedTitle: "O‘ngga mahkamlangan",
    noFixedTitle: "Mahkamlashsiz",
    reset: "Qayta tiklash",
    columnDisplay: "Ustunni ko‘rsatish",
    columnSetting: "Sozlamalar",
    fullScreen: "To‘liq ekran",
    exitFullScreen: "To‘liq ekrandan chiqish",
    reload: "Yangilash",
    density: "O‘lcham",
    densityDefault: "Standart",
    densityLarger: "Katta",
    densityMiddle: "O‘rtacha",
    densitySmall: "Kichik"
  },
  stepsForm: {
    next: "Keyingi",
    prev: "Oldingi",
    submit: "Tugatish"
  },
  loginForm: {
    submitText: "Kirish"
  },
  editableTable: {
    action: {
      save: "Saqlash",
      cancel: "Bekor qilish",
      delete: "O‘chirish",
      add: "maʼlumotlar qatorini qo‘shish"
    }
  },
  switch: {
    open: "Ochish",
    close: "Yopish"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/vi_VN.js
var vi_VN_default = {
  moneySymbol: "₫",
  form: {
    lightFilter: {
      more: "Nhiều hơn",
      clear: "Trong",
      confirm: "Xác nhận",
      itemUnit: "Mục"
    }
  },
  tableForm: {
    search: "Tìm kiếm",
    reset: "Làm lại",
    submit: "Gửi đi",
    collapsed: "Mở rộng",
    expand: "Thu gọn",
    inputPlaceholder: "nhập dữ liệu",
    selectPlaceholder: "Vui lòng chọn"
  },
  alert: {
    clear: "Xóa",
    selected: "đã chọn",
    item: "mục"
  },
  pagination: {
    total: {
      range: " ",
      total: "trên",
      item: "mặt hàng"
    }
  },
  tableToolBar: {
    leftPin: "Ghim trái",
    rightPin: "Ghim phải",
    noPin: "Bỏ ghim",
    leftFixedTitle: "Cố định trái",
    rightFixedTitle: "Cố định phải",
    noFixedTitle: "Chưa cố định",
    reset: "Làm lại",
    columnDisplay: "Cột hiển thị",
    columnSetting: "Cấu hình",
    fullScreen: "Chế độ toàn màn hình",
    exitFullScreen: "Thoát chế độ toàn màn hình",
    reload: "Làm mới",
    density: "Mật độ hiển thị",
    densityDefault: "Mặc định",
    densityLarger: "Mặc định",
    densityMiddle: "Trung bình",
    densitySmall: "Chật"
  },
  stepsForm: {
    next: "Sau",
    prev: "Trước",
    submit: "Kết thúc"
  },
  loginForm: {
    submitText: "Đăng nhập"
  },
  editableTable: {
    action: {
      save: "Cứu",
      cancel: "Hủy",
      delete: "Xóa",
      add: "thêm một hàng dữ liệu"
    }
  },
  switch: {
    open: "mở",
    close: "đóng"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/zh_CN.js
var zh_CN_default2 = {
  moneySymbol: "¥",
  deleteThisLine: "删除此项",
  copyThisLine: "复制此项",
  form: {
    lightFilter: {
      more: "更多筛选",
      clear: "清除",
      confirm: "确认",
      itemUnit: "项"
    }
  },
  tableForm: {
    search: "查询",
    reset: "重置",
    submit: "提交",
    collapsed: "展开",
    expand: "收起",
    inputPlaceholder: "请输入",
    selectPlaceholder: "请选择"
  },
  alert: {
    clear: "取消选择",
    selected: "已选择",
    item: "项"
  },
  pagination: {
    total: {
      range: "第",
      total: "条/总共",
      item: "条"
    }
  },
  tableToolBar: {
    leftPin: "固定在列首",
    rightPin: "固定在列尾",
    noPin: "不固定",
    leftFixedTitle: "固定在左侧",
    rightFixedTitle: "固定在右侧",
    noFixedTitle: "不固定",
    reset: "重置",
    columnDisplay: "列展示",
    columnSetting: "列设置",
    fullScreen: "全屏",
    exitFullScreen: "退出全屏",
    reload: "刷新",
    density: "密度",
    densityDefault: "正常",
    densityLarger: "宽松",
    densityMiddle: "中等",
    densitySmall: "紧凑"
  },
  stepsForm: {
    next: "下一步",
    prev: "上一步",
    submit: "提交"
  },
  loginForm: {
    submitText: "登录"
  },
  editableTable: {
    onlyOneLineEditor: "只能同时编辑一行",
    action: {
      save: "保存",
      cancel: "取消",
      delete: "删除",
      add: "添加一行数据"
    }
  },
  switch: {
    open: "打开",
    close: "关闭"
  }
};

// node_modules/@ant-design/pro-provider/es/locale/zh_TW.js
var zh_TW_default = {
  moneySymbol: "NT$",
  deleteThisLine: "刪除此项",
  copyThisLine: "複製此项",
  form: {
    lightFilter: {
      more: "更多篩選",
      clear: "清除",
      confirm: "確認",
      itemUnit: "項"
    }
  },
  tableForm: {
    search: "查詢",
    reset: "重置",
    submit: "提交",
    collapsed: "展開",
    expand: "收起",
    inputPlaceholder: "請輸入",
    selectPlaceholder: "請選擇"
  },
  alert: {
    clear: "取消選擇",
    selected: "已選擇",
    item: "項"
  },
  pagination: {
    total: {
      range: "第",
      total: "條/總共",
      item: "條"
    }
  },
  tableToolBar: {
    leftPin: "固定到左邊",
    rightPin: "固定到右邊",
    noPin: "不固定",
    leftFixedTitle: "固定在左側",
    rightFixedTitle: "固定在右側",
    noFixedTitle: "不固定",
    reset: "重置",
    columnDisplay: "列展示",
    columnSetting: "列設置",
    fullScreen: "全屏",
    exitFullScreen: "退出全屏",
    reload: "刷新",
    density: "密度",
    densityDefault: "正常",
    densityLarger: "寬鬆",
    densityMiddle: "中等",
    densitySmall: "緊湊"
  },
  stepsForm: {
    next: "下一步",
    prev: "上一步",
    submit: "完成"
  },
  loginForm: {
    submitText: "登入"
  },
  editableTable: {
    onlyOneLineEditor: "只能同時編輯一行",
    action: {
      save: "保存",
      cancel: "取消",
      delete: "刪除",
      add: "新增一行資料"
    }
  },
  switch: {
    open: "打開",
    close: "關閉"
  }
};

// node_modules/@ant-design/pro-provider/es/intl.js
var createIntl = function createIntl2(locale, localeMap) {
  return {
    getMessage: function getMessage(id, defaultMessage) {
      var msg = get(localeMap, id.replace(/\[(\d+)\]/g, ".$1").split(".")) || "";
      if (msg) return msg;
      var localKey = locale.replace("_", "-");
      if (localKey === "zh-CN") {
        return defaultMessage;
      }
      var intl = intlMap["zh-CN"];
      return intl ? intl.getMessage(id, defaultMessage) : defaultMessage;
    },
    locale
  };
};
var mnMNIntl = createIntl("mn_MN", mn_MN_default);
var arEGIntl = createIntl("ar_EG", ar_EG_default);
var zhCNIntl = createIntl("zh_CN", zh_CN_default2);
var enUSIntl = createIntl("en_US", en_US_default);
var enGBIntl = createIntl("en_GB", en_GB_default);
var viVNIntl = createIntl("vi_VN", vi_VN_default);
var itITIntl = createIntl("it_IT", it_IT_default);
var jaJPIntl = createIntl("ja_JP", ja_JP_default);
var esESIntl = createIntl("es_ES", es_ES_default);
var caESIntl = createIntl("ca_ES", ca_ES_default);
var ruRUIntl = createIntl("ru_RU", ru_RU_default);
var srRSIntl = createIntl("sr_RS", sr_RS_default);
var msMYIntl = createIntl("ms_MY", ms_MY_default);
var zhTWIntl = createIntl("zh_TW", zh_TW_default);
var frFRIntl = createIntl("fr_FR", fr_FR_default);
var ptBRIntl = createIntl("pt_BR", pt_BR_default);
var koKRIntl = createIntl("ko_KR", ko_KR_default);
var idIDIntl = createIntl("id_ID", id_ID_default);
var deDEIntl = createIntl("de_DE", de_DE_default);
var faIRIntl = createIntl("fa_IR", fa_IR_default);
var trTRIntl = createIntl("tr_TR", tr_TR_default);
var plPLIntl = createIntl("pl_PL", pl_PL_default);
var hrHRIntl = createIntl("hr_", hr_HR_default);
var thTHIntl = createIntl("th_TH", th_TH_default);
var csCZIntl = createIntl("cs_cz", cs_CZ_default);
var skSKIntl = createIntl("sk_SK", sk_SK_default);
var heILIntl = createIntl("he_IL", he_IL_default);
var ukUAIntl = createIntl("uk_UA", uk_UA_default);
var uzUZIntl = createIntl("uz_UZ", uz_UZ_default);
var intlMap = {
  "mn-MN": mnMNIntl,
  "ar-EG": arEGIntl,
  "zh-CN": zhCNIntl,
  "en-US": enUSIntl,
  "en-GB": enGBIntl,
  "vi-VN": viVNIntl,
  "it-IT": itITIntl,
  "ja-JP": jaJPIntl,
  "es-ES": esESIntl,
  "ca-ES": caESIntl,
  "ru-RU": ruRUIntl,
  "sr-RS": srRSIntl,
  "ms-MY": msMYIntl,
  "zh-TW": zhTWIntl,
  "fr-FR": frFRIntl,
  "pt-BR": ptBRIntl,
  "ko-KR": koKRIntl,
  "id-ID": idIDIntl,
  "de-DE": deDEIntl,
  "fa-IR": faIRIntl,
  "tr-TR": trTRIntl,
  "pl-PL": plPLIntl,
  "hr-HR": hrHRIntl,
  "th-TH": thTHIntl,
  "cs-CZ": csCZIntl,
  "sk-SK": skSKIntl,
  "he-IL": heILIntl,
  "uk-UA": ukUAIntl,
  "uz-UZ": uzUZIntl
};
var intlMapKeys = Object.keys(intlMap);
var findIntlKeyByAntdLocaleKey = function findIntlKeyByAntdLocaleKey2(localeKey) {
  var localeName = (localeKey || "zh-CN").toLocaleLowerCase();
  return intlMapKeys.find(function(intlKey) {
    var LowerCaseKey = intlKey.toLocaleLowerCase();
    return LowerCaseKey.includes(localeName);
  });
};

// node_modules/@ant-design/pro-provider/es/index.js
var import_dayjs = __toESM(require_dayjs_min());

// node_modules/@ant-design/pro-provider/es/useStyle/index.js
init_public_api();
var import_react = __toESM(require_react());

// node_modules/@ant-design/pro-provider/es/useStyle/token.js
var token_exports = {};
__export(token_exports, {
  defaultToken: () => defaultToken,
  emptyTheme: () => emptyTheme,
  hashCode: () => hashCode,
  token: () => token,
  useToken: () => useToken
});
var _theme$defaultAlgorit;
var defaultToken = {
  blue: "#1677ff",
  purple: "#722ED1",
  cyan: "#13C2C2",
  green: "#52C41A",
  magenta: "#EB2F96",
  pink: "#eb2f96",
  red: "#F5222D",
  orange: "#FA8C16",
  yellow: "#FADB14",
  volcano: "#FA541C",
  geekblue: "#2F54EB",
  gold: "#FAAD14",
  lime: "#A0D911",
  colorPrimary: "#1677ff",
  colorSuccess: "#52c41a",
  colorWarning: "#faad14",
  colorError: "#ff7875",
  colorInfo: "#1677ff",
  colorTextBase: "#000",
  colorBgBase: "#fff",
  fontFamily: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
  fontSize: 14,
  lineWidth: 1,
  lineType: "solid",
  motionUnit: 0.1,
  motionBase: 0,
  motionEaseOutCirc: "cubic-bezier(0.08, 0.82, 0.17, 1)",
  motionEaseInOutCirc: "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
  motionEaseOut: "cubic-bezier(0.215, 0.61, 0.355, 1)",
  motionEaseInOut: "cubic-bezier(0.645, 0.045, 0.355, 1)",
  motionEaseOutBack: "cubic-bezier(0.12, 0.4, 0.29, 1.46)",
  motionEaseInQuint: "cubic-bezier(0.645, 0.045, 0.355, 1)",
  motionEaseOutQuint: "cubic-bezier(0.23, 1, 0.32, 1)",
  borderRadius: 4,
  sizeUnit: 4,
  sizeStep: 4,
  sizePopupArrow: 16,
  controlHeight: 32,
  zIndexBase: 0,
  zIndexPopupBase: 1e3,
  opacityImage: 1,
  wireframe: false,
  "blue-1": "#e6f4ff",
  "blue-2": "#bae0ff",
  "blue-3": "#91caff",
  "blue-4": "#69b1ff",
  "blue-5": "#4096ff",
  "blue-6": "#1677ff",
  "blue-7": "#0958d9",
  "blue-8": "#003eb3",
  "blue-9": "#002c8c",
  "blue-10": "#001d66",
  "purple-1": "#f9f0ff",
  "purple-2": "#efdbff",
  "purple-3": "#d3adf7",
  "purple-4": "#b37feb",
  "purple-5": "#9254de",
  "purple-6": "#722ed1",
  "purple-7": "#531dab",
  "purple-8": "#391085",
  "purple-9": "#22075e",
  "purple-10": "#120338",
  "cyan-1": "#e6fffb",
  "cyan-2": "#b5f5ec",
  "cyan-3": "#87e8de",
  "cyan-4": "#5cdbd3",
  "cyan-5": "#36cfc9",
  "cyan-6": "#13c2c2",
  "cyan-7": "#08979c",
  "cyan-8": "#006d75",
  "cyan-9": "#00474f",
  "cyan-10": "#002329",
  "green-1": "#f6ffed",
  "green-2": "#d9f7be",
  "green-3": "#b7eb8f",
  "green-4": "#95de64",
  "green-5": "#73d13d",
  "green-6": "#52c41a",
  "green-7": "#389e0d",
  "green-8": "#237804",
  "green-9": "#135200",
  "green-10": "#092b00",
  "magenta-1": "#fff0f6",
  "magenta-2": "#ffd6e7",
  "magenta-3": "#ffadd2",
  "magenta-4": "#ff85c0",
  "magenta-5": "#f759ab",
  "magenta-6": "#eb2f96",
  "magenta-7": "#c41d7f",
  "magenta-8": "#9e1068",
  "magenta-9": "#780650",
  "magenta-10": "#520339",
  "pink-1": "#fff0f6",
  "pink-2": "#ffd6e7",
  "pink-3": "#ffadd2",
  "pink-4": "#ff85c0",
  "pink-5": "#f759ab",
  "pink-6": "#eb2f96",
  "pink-7": "#c41d7f",
  "pink-8": "#9e1068",
  "pink-9": "#780650",
  "pink-10": "#520339",
  "red-1": "#fff1f0",
  "red-2": "#ffccc7",
  "red-3": "#ffa39e",
  "red-4": "#ff7875",
  "red-5": "#ff4d4f",
  "red-6": "#f5222d",
  "red-7": "#cf1322",
  "red-8": "#a8071a",
  "red-9": "#820014",
  "red-10": "#5c0011",
  "orange-1": "#fff7e6",
  "orange-2": "#ffe7ba",
  "orange-3": "#ffd591",
  "orange-4": "#ffc069",
  "orange-5": "#ffa940",
  "orange-6": "#fa8c16",
  "orange-7": "#d46b08",
  "orange-8": "#ad4e00",
  "orange-9": "#873800",
  "orange-10": "#612500",
  "yellow-1": "#feffe6",
  "yellow-2": "#ffffb8",
  "yellow-3": "#fffb8f",
  "yellow-4": "#fff566",
  "yellow-5": "#ffec3d",
  "yellow-6": "#fadb14",
  "yellow-7": "#d4b106",
  "yellow-8": "#ad8b00",
  "yellow-9": "#876800",
  "yellow-10": "#614700",
  "volcano-1": "#fff2e8",
  "volcano-2": "#ffd8bf",
  "volcano-3": "#ffbb96",
  "volcano-4": "#ff9c6e",
  "volcano-5": "#ff7a45",
  "volcano-6": "#fa541c",
  "volcano-7": "#d4380d",
  "volcano-8": "#ad2102",
  "volcano-9": "#871400",
  "volcano-10": "#610b00",
  "geekblue-1": "#f0f5ff",
  "geekblue-2": "#d6e4ff",
  "geekblue-3": "#adc6ff",
  "geekblue-4": "#85a5ff",
  "geekblue-5": "#597ef7",
  "geekblue-6": "#2f54eb",
  "geekblue-7": "#1d39c4",
  "geekblue-8": "#10239e",
  "geekblue-9": "#061178",
  "geekblue-10": "#030852",
  "gold-1": "#fffbe6",
  "gold-2": "#fff1b8",
  "gold-3": "#ffe58f",
  "gold-4": "#ffd666",
  "gold-5": "#ffc53d",
  "gold-6": "#faad14",
  "gold-7": "#d48806",
  "gold-8": "#ad6800",
  "gold-9": "#874d00",
  "gold-10": "#613400",
  "lime-1": "#fcffe6",
  "lime-2": "#f4ffb8",
  "lime-3": "#eaff8f",
  "lime-4": "#d3f261",
  "lime-5": "#bae637",
  "lime-6": "#a0d911",
  "lime-7": "#7cb305",
  "lime-8": "#5b8c00",
  "lime-9": "#3f6600",
  "lime-10": "#254000",
  colorText: "rgba(0, 0, 0, 0.88)",
  colorTextSecondary: "rgba(0, 0, 0, 0.65)",
  colorTextTertiary: "rgba(0, 0, 0, 0.45)",
  colorTextQuaternary: "rgba(0, 0, 0, 0.25)",
  colorFill: "rgba(0, 0, 0, 0.15)",
  colorFillSecondary: "rgba(0, 0, 0, 0.06)",
  colorFillTertiary: "rgba(0, 0, 0, 0.04)",
  colorFillQuaternary: "rgba(0, 0, 0, 0.02)",
  colorBgLayout: "hsl(220,23%,97%)",
  colorBgContainer: "#ffffff",
  colorBgElevated: "#ffffff",
  colorBgSpotlight: "rgba(0, 0, 0, 0.85)",
  colorBorder: "#d9d9d9",
  colorBorderSecondary: "#f0f0f0",
  colorPrimaryBg: "#e6f4ff",
  colorPrimaryBgHover: "#bae0ff",
  colorPrimaryBorder: "#91caff",
  colorPrimaryBorderHover: "#69b1ff",
  colorPrimaryHover: "#4096ff",
  colorPrimaryActive: "#0958d9",
  colorPrimaryTextHover: "#4096ff",
  colorPrimaryText: "#1677ff",
  colorPrimaryTextActive: "#0958d9",
  colorSuccessBg: "#f6ffed",
  colorSuccessBgHover: "#d9f7be",
  colorSuccessBorder: "#b7eb8f",
  colorSuccessBorderHover: "#95de64",
  colorSuccessHover: "#95de64",
  colorSuccessActive: "#389e0d",
  colorSuccessTextHover: "#73d13d",
  colorSuccessText: "#52c41a",
  colorSuccessTextActive: "#389e0d",
  colorErrorBg: "#fff2f0",
  colorErrorBgHover: "#fff1f0",
  colorErrorBorder: "#ffccc7",
  colorErrorBorderHover: "#ffa39e",
  colorErrorHover: "#ffa39e",
  colorErrorActive: "#d9363e",
  colorErrorTextHover: "#ff7875",
  colorErrorText: "#ff4d4f",
  colorErrorTextActive: "#d9363e",
  colorWarningBg: "#fffbe6",
  colorWarningBgHover: "#fff1b8",
  colorWarningBorder: "#ffe58f",
  colorWarningBorderHover: "#ffd666",
  colorWarningHover: "#ffd666",
  colorWarningActive: "#d48806",
  colorWarningTextHover: "#ffc53d",
  colorWarningText: "#faad14",
  colorWarningTextActive: "#d48806",
  colorInfoBg: "#e6f4ff",
  colorInfoBgHover: "#bae0ff",
  colorInfoBorder: "#91caff",
  colorInfoBorderHover: "#69b1ff",
  colorInfoHover: "#69b1ff",
  colorInfoActive: "#0958d9",
  colorInfoTextHover: "#4096ff",
  colorInfoText: "#1677ff",
  colorInfoTextActive: "#0958d9",
  colorBgMask: "rgba(0, 0, 0, 0.45)",
  colorWhite: "#fff",
  sizeXXL: 48,
  sizeXL: 32,
  sizeLG: 24,
  sizeMD: 20,
  sizeMS: 16,
  size: 16,
  sizeSM: 12,
  sizeXS: 8,
  sizeXXS: 4,
  controlHeightSM: 24,
  controlHeightXS: 16,
  controlHeightLG: 40,
  motionDurationFast: "0.1s",
  motionDurationMid: "0.2s",
  motionDurationSlow: "0.3s",
  fontSizes: [12, 14, 16, 20, 24, 30, 38, 46, 56, 68],
  lineHeights: [1.6666666666666667, 1.5714285714285714, 1.5, 1.4, 1.3333333333333333, 1.2666666666666666, 1.2105263157894737, 1.173913043478261, 1.1428571428571428, 1.1176470588235294],
  lineWidthBold: 2,
  borderRadiusXS: 1,
  borderRadiusSM: 4,
  borderRadiusLG: 8,
  borderRadiusOuter: 4,
  colorLink: "#1677ff",
  colorLinkHover: "#69b1ff",
  colorLinkActive: "#0958d9",
  colorFillContent: "rgba(0, 0, 0, 0.06)",
  colorFillContentHover: "rgba(0, 0, 0, 0.15)",
  colorFillAlter: "rgba(0, 0, 0, 0.02)",
  colorBgContainerDisabled: "rgba(0, 0, 0, 0.04)",
  colorBorderBg: "#ffffff",
  colorSplit: "rgba(5, 5, 5, 0.06)",
  colorTextPlaceholder: "rgba(0, 0, 0, 0.25)",
  colorTextDisabled: "rgba(0, 0, 0, 0.25)",
  colorTextHeading: "rgba(0, 0, 0, 0.88)",
  colorTextLabel: "rgba(0, 0, 0, 0.65)",
  colorTextDescription: "rgba(0, 0, 0, 0.45)",
  colorTextLightSolid: "#fff",
  colorHighlight: "#ff7875",
  colorBgTextHover: "rgba(0, 0, 0, 0.06)",
  colorBgTextActive: "rgba(0, 0, 0, 0.15)",
  colorIcon: "rgba(0, 0, 0, 0.45)",
  colorIconHover: "rgba(0, 0, 0, 0.88)",
  colorErrorOutline: "rgba(255, 38, 5, 0.06)",
  colorWarningOutline: "rgba(255, 215, 5, 0.1)",
  fontSizeSM: 12,
  fontSizeLG: 16,
  fontSizeXL: 20,
  fontSizeHeading1: 38,
  fontSizeHeading2: 30,
  fontSizeHeading3: 24,
  fontSizeHeading4: 20,
  fontSizeHeading5: 16,
  fontSizeIcon: 12,
  lineHeight: 1.5714285714285714,
  lineHeightLG: 1.5,
  lineHeightSM: 1.6666666666666667,
  lineHeightHeading1: 1.2105263157894737,
  lineHeightHeading2: 1.2666666666666666,
  lineHeightHeading3: 1.3333333333333333,
  lineHeightHeading4: 1.4,
  lineHeightHeading5: 1.5,
  controlOutlineWidth: 2,
  controlInteractiveSize: 16,
  controlItemBgHover: "rgba(0, 0, 0, 0.04)",
  controlItemBgActive: "#e6f4ff",
  controlItemBgActiveHover: "#bae0ff",
  controlItemBgActiveDisabled: "rgba(0, 0, 0, 0.15)",
  controlTmpOutline: "rgba(0, 0, 0, 0.02)",
  controlOutline: "rgba(5, 145, 255, 0.1)",
  fontWeightStrong: 600,
  opacityLoading: 0.65,
  linkDecoration: "none",
  linkHoverDecoration: "none",
  linkFocusDecoration: "none",
  controlPaddingHorizontal: 12,
  controlPaddingHorizontalSM: 8,
  paddingXXS: 4,
  paddingXS: 8,
  paddingSM: 12,
  padding: 16,
  paddingMD: 20,
  paddingLG: 24,
  paddingXL: 32,
  paddingContentHorizontalLG: 24,
  paddingContentVerticalLG: 16,
  paddingContentHorizontal: 16,
  paddingContentVertical: 12,
  paddingContentHorizontalSM: 16,
  paddingContentVerticalSM: 8,
  marginXXS: 4,
  marginXS: 8,
  marginSM: 12,
  margin: 16,
  marginMD: 20,
  marginLG: 24,
  marginXL: 32,
  marginXXL: 48,
  boxShadow: "0 1px 2px 0 rgba(0, 0, 0, 0.03),0 1px 6px -1px rgba(0, 0, 0, 0.02),0 2px 4px 0 rgba(0, 0, 0, 0.02)",
  boxShadowSecondary: "0 6px 16px 0 rgba(0, 0, 0, 0.08),0 3px 6px -4px rgba(0, 0, 0, 0.12),0 9px 28px 8px rgba(0, 0, 0, 0.05)",
  screenXS: 480,
  screenXSMin: 480,
  screenXSMax: 479,
  screenSM: 576,
  screenSMMin: 576,
  screenSMMax: 575,
  screenMD: 768,
  screenMDMin: 768,
  screenMDMax: 767,
  screenLG: 992,
  screenLGMin: 992,
  screenLGMax: 991,
  screenXL: 1200,
  screenXLMin: 1200,
  screenXLMax: 1199,
  screenXXL: 1600,
  screenXXLMin: 1600,
  screenXXLMax: 1599,
  boxShadowPopoverArrow: "3px 3px 7px rgba(0, 0, 0, 0.1)",
  boxShadowCard: "0 1px 2px -2px rgba(0, 0, 0, 0.16),0 3px 6px 0 rgba(0, 0, 0, 0.12),0 5px 12px 4px rgba(0, 0, 0, 0.09)",
  boxShadowDrawerRight: "-6px 0 16px 0 rgba(0, 0, 0, 0.08),-3px 0 6px -4px rgba(0, 0, 0, 0.12),-9px 0 28px 8px rgba(0, 0, 0, 0.05)",
  boxShadowDrawerLeft: "6px 0 16px 0 rgba(0, 0, 0, 0.08),3px 0 6px -4px rgba(0, 0, 0, 0.12),9px 0 28px 8px rgba(0, 0, 0, 0.05)",
  boxShadowDrawerUp: "0 6px 16px 0 rgba(0, 0, 0, 0.08),0 3px 6px -4px rgba(0, 0, 0, 0.12),0 9px 28px 8px rgba(0, 0, 0, 0.05)",
  boxShadowDrawerDown: "0 -6px 16px 0 rgba(0, 0, 0, 0.08),0 -3px 6px -4px rgba(0, 0, 0, 0.12),0 -9px 28px 8px rgba(0, 0, 0, 0.05)",
  boxShadowTabsOverflowLeft: "inset 10px 0 8px -8px rgba(0, 0, 0, 0.08)",
  boxShadowTabsOverflowRight: "inset -10px 0 8px -8px rgba(0, 0, 0, 0.08)",
  boxShadowTabsOverflowTop: "inset 0 10px 8px -8px rgba(0, 0, 0, 0.08)",
  boxShadowTabsOverflowBottom: "inset 0 -10px 8px -8px rgba(0, 0, 0, 0.08)",
  _tokenKey: "19w80ff",
  _hashId: "css-dev-only-do-not-override-i2zu9q"
};
var hashCode = function hashCode2(str) {
  var seed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var h1 = 3735928559 ^ seed, h2 = 1103547991 ^ seed;
  for (var i = 0, ch; i < str.length; i++) {
    ch = str.charCodeAt(i);
    h1 = Math.imul(h1 ^ ch, 2654435761);
    h2 = Math.imul(h2 ^ ch, 1597334677);
  }
  h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);
  h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);
  return 4294967296 * (2097151 & h2) + (h1 >>> 0);
};
var emptyTheme = createTheme(function(token2) {
  return token2;
});
var token = {
  theme: emptyTheme,
  token: _objectSpread2(_objectSpread2({}, defaultToken), theme_default === null || theme_default === void 0 || (_theme$defaultAlgorit = theme_default.defaultAlgorithm) === null || _theme$defaultAlgorit === void 0 ? void 0 : _theme$defaultAlgorit.call(theme_default, theme_default === null || theme_default === void 0 ? void 0 : theme_default.defaultSeed)),
  hashId: "pro-".concat(hashCode(JSON.stringify(defaultToken)))
};
var useToken = function useToken2() {
  return token;
};

// node_modules/@ant-design/pro-provider/es/useStyle/index.js
var setAlpha = function setAlpha2(baseColor, alpha) {
  return new TinyColor(baseColor).setAlpha(alpha).toRgbString();
};
var genTheme = function genTheme2() {
  if (typeof theme_default === "undefined" || !theme_default) return token_exports;
  return theme_default;
};
var proTheme = genTheme();
var useToken3 = proTheme.useToken;
var resetComponent = function resetComponent2(token2) {
  return {
    boxSizing: "border-box",
    margin: 0,
    padding: 0,
    color: token2.colorText,
    fontSize: token2.fontSize,
    lineHeight: token2.lineHeight,
    listStyle: "none"
  };
};
function useStyle(componentName, styleFn) {
  var _token$proComponentsC;
  var _useContext = (0, import_react.useContext)(ProProvider), _useContext$token = _useContext.token, token2 = _useContext$token === void 0 ? {} : _useContext$token;
  var _useContext2 = (0, import_react.useContext)(ProProvider), hashed = _useContext2.hashed;
  var _useToken = useToken3(), antdToken = _useToken.token, hashId = _useToken.hashId;
  var _useContext3 = (0, import_react.useContext)(ProProvider), provideTheme = _useContext3.theme;
  var _useContext4 = (0, import_react.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext4.getPrefixCls;
  if (!token2.layout) {
    token2 = _objectSpread2({}, antdToken);
  }
  token2.proComponentsCls = (_token$proComponentsC = token2.proComponentsCls) !== null && _token$proComponentsC !== void 0 ? _token$proComponentsC : ".".concat(getPrefixCls("pro"));
  token2.antCls = ".".concat(getPrefixCls());
  return {
    wrapSSR: useStyleRegister({
      theme: provideTheme,
      token: token2,
      path: [componentName]
    }, function() {
      return styleFn(token2);
    }),
    hashId: hashed ? hashId : ""
  };
}

// node_modules/@ant-design/pro-provider/es/typing/layoutToken.js
var getLayoutDesignToken = function getLayoutDesignToken2(designTokens, antdToken) {
  var _finalDesignTokens$si, _finalDesignTokens$he, _finalDesignTokens$he2, _finalDesignTokens$pa, _finalDesignTokens$pa2;
  var finalDesignTokens = _objectSpread2({}, designTokens);
  return _objectSpread2(_objectSpread2({
    bgLayout: "linear-gradient(".concat(antdToken.colorBgContainer, ", ").concat(antdToken.colorBgLayout, " 28%)"),
    colorTextAppListIcon: antdToken.colorTextSecondary,
    appListIconHoverBgColor: finalDesignTokens === null || finalDesignTokens === void 0 || (_finalDesignTokens$si = finalDesignTokens.sider) === null || _finalDesignTokens$si === void 0 ? void 0 : _finalDesignTokens$si.colorBgMenuItemSelected,
    colorBgAppListIconHover: setAlpha(antdToken.colorTextBase, 0.04),
    colorTextAppListIconHover: antdToken.colorTextBase
  }, finalDesignTokens), {}, {
    header: _objectSpread2({
      colorBgHeader: setAlpha(antdToken.colorBgElevated, 0.6),
      colorBgScrollHeader: setAlpha(antdToken.colorBgElevated, 0.8),
      colorHeaderTitle: antdToken.colorText,
      colorBgMenuItemHover: setAlpha(antdToken.colorTextBase, 0.03),
      colorBgMenuItemSelected: "transparent",
      colorBgMenuElevated: (finalDesignTokens === null || finalDesignTokens === void 0 || (_finalDesignTokens$he = finalDesignTokens.header) === null || _finalDesignTokens$he === void 0 ? void 0 : _finalDesignTokens$he.colorBgHeader) !== "rgba(255, 255, 255, 0.6)" ? (_finalDesignTokens$he2 = finalDesignTokens.header) === null || _finalDesignTokens$he2 === void 0 ? void 0 : _finalDesignTokens$he2.colorBgHeader : antdToken.colorBgElevated,
      colorTextMenuSelected: setAlpha(antdToken.colorTextBase, 0.95),
      colorBgRightActionsItemHover: setAlpha(antdToken.colorTextBase, 0.03),
      colorTextRightActionsItem: antdToken.colorTextTertiary,
      heightLayoutHeader: 56,
      colorTextMenu: antdToken.colorTextSecondary,
      colorTextMenuSecondary: antdToken.colorTextTertiary,
      colorTextMenuTitle: antdToken.colorText,
      colorTextMenuActive: antdToken.colorText
    }, finalDesignTokens.header),
    sider: _objectSpread2({
      paddingInlineLayoutMenu: 8,
      paddingBlockLayoutMenu: 0,
      colorBgCollapsedButton: antdToken.colorBgElevated,
      colorTextCollapsedButtonHover: antdToken.colorTextSecondary,
      colorTextCollapsedButton: setAlpha(antdToken.colorTextBase, 0.25),
      colorMenuBackground: "transparent",
      colorMenuItemDivider: setAlpha(antdToken.colorTextBase, 0.06),
      colorBgMenuItemHover: setAlpha(antdToken.colorTextBase, 0.03),
      colorBgMenuItemSelected: setAlpha(antdToken.colorTextBase, 0.04),
      colorTextMenuItemHover: antdToken.colorText,
      colorTextMenuSelected: setAlpha(antdToken.colorTextBase, 0.95),
      colorTextMenuActive: antdToken.colorText,
      colorTextMenu: antdToken.colorTextSecondary,
      colorTextMenuSecondary: antdToken.colorTextTertiary,
      colorTextMenuTitle: antdToken.colorText,
      colorTextSubMenuSelected: setAlpha(antdToken.colorTextBase, 0.95)
    }, finalDesignTokens.sider),
    pageContainer: _objectSpread2({
      colorBgPageContainer: "transparent",
      paddingInlinePageContainerContent: ((_finalDesignTokens$pa = finalDesignTokens.pageContainer) === null || _finalDesignTokens$pa === void 0 ? void 0 : _finalDesignTokens$pa.marginInlinePageContainerContent) || 40,
      paddingBlockPageContainerContent: ((_finalDesignTokens$pa2 = finalDesignTokens.pageContainer) === null || _finalDesignTokens$pa2 === void 0 ? void 0 : _finalDesignTokens$pa2.marginBlockPageContainerContent) || 32,
      colorBgPageContainerFixed: antdToken.colorBgElevated
    }, finalDesignTokens.pageContainer)
  });
};

// node_modules/@ant-design/pro-provider/es/utils/merge.js
var merge = function merge2() {
  var obj = {};
  for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {
    rest[_key] = arguments[_key];
  }
  var il = rest.length;
  var key;
  var i = 0;
  for (; i < il; i += 1) {
    for (key in rest[i]) {
      if (rest[i].hasOwnProperty(key)) {
        if (_typeof(obj[key]) === "object" && _typeof(rest[i][key]) === "object" && obj[key] !== void 0 && obj[key] !== null && !Array.isArray(obj[key]) && !Array.isArray(rest[i][key])) {
          obj[key] = _objectSpread2(_objectSpread2({}, obj[key]), rest[i][key]);
        } else {
          obj[key] = rest[i][key];
        }
      }
    }
  }
  return obj;
};

// node_modules/@ant-design/pro-provider/es/index.js
var import_zh_cn = __toESM(require_zh_cn());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var _excluded = ["locale", "getPrefixCls"];
var _excluded2 = ["locale", "theme"];
var omitUndefined = function omitUndefined2(obj) {
  var newObj = {};
  Object.keys(obj || {}).forEach(function(key) {
    if (obj[key] !== void 0) {
      newObj[key] = obj[key];
    }
  });
  if (Object.keys(newObj).length < 1) {
    return void 0;
  }
  return newObj;
};
var isNeedOpenHash = function isNeedOpenHash2() {
  var _process$env$NODE_ENV, _process$env$NODE_ENV2;
  if (typeof process !== "undefined" && (((_process$env$NODE_ENV = "development") === null || _process$env$NODE_ENV === void 0 ? void 0 : _process$env$NODE_ENV.toUpperCase()) === "TEST" || ((_process$env$NODE_ENV2 = "development") === null || _process$env$NODE_ENV2 === void 0 ? void 0 : _process$env$NODE_ENV2.toUpperCase()) === "DEV")) {
    return false;
  }
  return true;
};
var ProConfigContext = import_react2.default.createContext({
  intl: _objectSpread2(_objectSpread2({}, zhCNIntl), {}, {
    locale: "default"
  }),
  valueTypeMap: {},
  theme: emptyTheme,
  hashed: true,
  dark: false,
  token: defaultToken
});
var ConfigConsumer = ProConfigContext.Consumer;
var CacheClean = function CacheClean2() {
  var _useSWRConfig = useSWRConfig(), cache = _useSWRConfig.cache;
  (0, import_react2.useEffect)(function() {
    return function() {
      cache.clear();
    };
  }, []);
  return null;
};
var ConfigProviderContainer = function ConfigProviderContainer2(props) {
  var _proTheme$useToken;
  var children = props.children, dark = props.dark, valueTypeMap = props.valueTypeMap, _props$autoClearCache = props.autoClearCache, autoClearCache = _props$autoClearCache === void 0 ? false : _props$autoClearCache, propsToken = props.token, prefixCls = props.prefixCls, intl = props.intl;
  var _useContext = (0, import_react2.useContext)(config_provider_default.ConfigContext), locale = _useContext.locale, getPrefixCls = _useContext.getPrefixCls, restConfig = _objectWithoutProperties(_useContext, _excluded);
  var tokenContext = (_proTheme$useToken = proTheme.useToken) === null || _proTheme$useToken === void 0 ? void 0 : _proTheme$useToken.call(proTheme);
  var proProvide = (0, import_react2.useContext)(ProConfigContext);
  var proComponentsCls = prefixCls ? ".".concat(prefixCls) : ".".concat(getPrefixCls(), "-pro");
  var antCls = "." + getPrefixCls();
  var salt = "".concat(proComponentsCls);
  var proLayoutTokenMerge = (0, import_react2.useMemo)(function() {
    return getLayoutDesignToken(propsToken || {}, tokenContext.token || defaultToken);
  }, [propsToken, tokenContext.token]);
  var proProvideValue = (0, import_react2.useMemo)(function() {
    var _proProvide$intl;
    var localeName = locale === null || locale === void 0 ? void 0 : locale.locale;
    var key = findIntlKeyByAntdLocaleKey(localeName);
    var resolvedIntl = intl !== null && intl !== void 0 ? intl : localeName && ((_proProvide$intl = proProvide.intl) === null || _proProvide$intl === void 0 ? void 0 : _proProvide$intl.locale) === "default" ? intlMap[key] : proProvide.intl || intlMap[key];
    return _objectSpread2(_objectSpread2({}, proProvide), {}, {
      dark: dark !== null && dark !== void 0 ? dark : proProvide.dark,
      token: merge(proProvide.token, tokenContext.token, {
        proComponentsCls,
        antCls,
        themeId: tokenContext.theme.id,
        layout: proLayoutTokenMerge
      }),
      intl: resolvedIntl || zhCNIntl
    });
  }, [locale === null || locale === void 0 ? void 0 : locale.locale, proProvide, dark, tokenContext.token, tokenContext.theme.id, proComponentsCls, antCls, proLayoutTokenMerge, intl]);
  var finalToken = _objectSpread2(_objectSpread2({}, proProvideValue.token || {}), {}, {
    proComponentsCls
  });
  var _useCacheToken = useCacheToken(tokenContext.theme, [tokenContext.token, finalToken !== null && finalToken !== void 0 ? finalToken : {}], {
    salt,
    override: finalToken
  }), _useCacheToken2 = _slicedToArray(_useCacheToken, 2), token2 = _useCacheToken2[0], nativeHashId = _useCacheToken2[1];
  var hashed = (0, import_react2.useMemo)(function() {
    if (props.hashed === false) {
      return false;
    }
    if (proProvide.hashed === false) return false;
    return true;
  }, [proProvide.hashed, props.hashed]);
  var hashId = (0, import_react2.useMemo)(function() {
    if (props.hashed === false) {
      return "";
    }
    if (proProvide.hashed === false) return "";
    if (isNeedOpenHash() === false) {
      return "";
    } else if (tokenContext.hashId) {
      return tokenContext.hashId;
    } else {
      return nativeHashId;
    }
  }, [nativeHashId, proProvide.hashed, props.hashed]);
  (0, import_react2.useEffect)(function() {
    import_dayjs.default.locale((locale === null || locale === void 0 ? void 0 : locale.locale) || "zh-cn");
  }, [locale === null || locale === void 0 ? void 0 : locale.locale]);
  var themeConfig = (0, import_react2.useMemo)(function() {
    return _objectSpread2(_objectSpread2({}, restConfig.theme), {}, {
      hashId,
      hashed: hashed && isNeedOpenHash()
    });
  }, [restConfig.theme, hashId, hashed, isNeedOpenHash()]);
  var proConfigContextValue = (0, import_react2.useMemo)(function() {
    return _objectSpread2(_objectSpread2({}, proProvideValue), {}, {
      valueTypeMap: valueTypeMap || (proProvideValue === null || proProvideValue === void 0 ? void 0 : proProvideValue.valueTypeMap),
      token: token2,
      theme: tokenContext.theme,
      hashed,
      hashId
    });
  }, [proProvideValue, valueTypeMap, token2, tokenContext.theme, hashed, hashId]);
  var configProviderDom = (0, import_react2.useMemo)(function() {
    return (0, import_jsx_runtime.jsx)(config_provider_default, _objectSpread2(_objectSpread2({}, restConfig), {}, {
      theme: themeConfig,
      children: (0, import_jsx_runtime.jsx)(ProConfigContext.Provider, {
        value: proConfigContextValue,
        children: (0, import_jsx_runtime3.jsxs)(import_jsx_runtime2.Fragment, {
          children: [autoClearCache && (0, import_jsx_runtime.jsx)(CacheClean, {}), children]
        })
      })
    }));
  }, [restConfig, themeConfig, proConfigContextValue, autoClearCache, children]);
  if (!autoClearCache) return configProviderDom;
  return (0, import_jsx_runtime.jsx)(SWRConfig, {
    value: {
      provider: function provider() {
        return /* @__PURE__ */ new Map();
      }
    },
    children: configProviderDom
  });
};
var ProConfigProvider = function ProConfigProvider2(props) {
  var needDeps = props.needDeps, dark = props.dark, token2 = props.token;
  var proProvide = (0, import_react2.useContext)(ProConfigContext);
  var _useContext2 = (0, import_react2.useContext)(config_provider_default.ConfigContext), locale = _useContext2.locale, theme = _useContext2.theme, rest = _objectWithoutProperties(_useContext2, _excluded2);
  var isNullProvide = needDeps && proProvide.hashId !== void 0 && Object.keys(props).sort().join("-") === "children-needDeps";
  if (isNullProvide) return (0, import_jsx_runtime.jsx)(import_jsx_runtime2.Fragment, {
    children: props.children
  });
  var mergeAlgorithm = function mergeAlgorithm2() {
    var isDark = dark !== null && dark !== void 0 ? dark : proProvide.dark;
    if (isDark && !Array.isArray(theme === null || theme === void 0 ? void 0 : theme.algorithm)) {
      return [proTheme.darkAlgorithm, theme === null || theme === void 0 ? void 0 : theme.algorithm].filter(Boolean);
    }
    if (isDark && Array.isArray(theme === null || theme === void 0 ? void 0 : theme.algorithm)) {
      return [proTheme.darkAlgorithm].concat(_toConsumableArray((theme === null || theme === void 0 ? void 0 : theme.algorithm) || [])).filter(Boolean);
    }
    return theme === null || theme === void 0 ? void 0 : theme.algorithm;
  };
  var configProvider = _objectSpread2(_objectSpread2({}, rest), {}, {
    locale: locale || zh_CN_default,
    theme: omitUndefined(_objectSpread2(_objectSpread2({}, theme), {}, {
      algorithm: mergeAlgorithm()
    }))
  });
  return (0, import_jsx_runtime.jsx)(config_provider_default, _objectSpread2(_objectSpread2({}, configProvider), {}, {
    children: (0, import_jsx_runtime.jsx)(ConfigProviderContainer, _objectSpread2(_objectSpread2({}, props), {}, {
      token: token2
    }))
  }));
};
function useIntl() {
  var _useContext3 = (0, import_react2.useContext)(config_provider_default.ConfigContext), locale = _useContext3.locale;
  var _useContext4 = (0, import_react2.useContext)(ProConfigContext), intl = _useContext4.intl;
  if (intl && intl.locale !== "default") {
    return intl || zhCNIntl;
  }
  if (locale !== null && locale !== void 0 && locale.locale) {
    return intlMap[findIntlKeyByAntdLocaleKey(locale.locale)] || zhCNIntl;
  }
  return zhCNIntl;
}
ProConfigContext.displayName = "ProProvider";
var ProProvider = ProConfigContext;
var es_default2 = ProConfigContext;

// node_modules/@ant-design/pro-utils/es/components/DropdownFooter/index.js
var import_classnames = __toESM(require_classnames());
var import_react3 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/components/DropdownFooter/style.js
var genProStyle = function genProStyle2(token2) {
  return _defineProperty({}, token2.componentCls, {
    display: "flex",
    justifyContent: "space-between",
    paddingBlock: 8,
    paddingInlineStart: 8,
    paddingInlineEnd: 8,
    borderBlockStart: "1px solid ".concat(token2.colorSplit)
  });
};
function useStyle2(prefixCls) {
  return useStyle("DropdownFooter", function(token2) {
    var proToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle(proToken)];
  });
}

// node_modules/@ant-design/pro-utils/es/components/DropdownFooter/index.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var DropdownFooter = function DropdownFooter2(props) {
  var intl = useIntl();
  var onClear = props.onClear, onConfirm = props.onConfirm, disabled = props.disabled, footerRender = props.footerRender;
  var _useContext = (0, import_react3.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-core-dropdown-footer");
  var _useStyle = useStyle2(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var defaultFooter = [(0, import_jsx_runtime4.jsx)(button_default, {
    style: {
      visibility: onClear ? "visible" : "hidden"
    },
    type: "link",
    size: "small",
    disabled,
    onClick: function onClick(e) {
      if (onClear) {
        onClear(e);
      }
      e.stopPropagation();
    },
    children: intl.getMessage("form.lightFilter.clear", "清除")
  }, "clear"), (0, import_jsx_runtime4.jsx)(button_default, {
    "data-type": "confirm",
    type: "primary",
    size: "small",
    onClick: onConfirm,
    disabled,
    children: intl.getMessage("form.lightFilter.confirm", "确认")
  }, "confirm")];
  if (footerRender === false || (footerRender === null || footerRender === void 0 ? void 0 : footerRender(onConfirm, onClear)) === false) {
    return null;
  }
  var renderDom = (footerRender === null || footerRender === void 0 ? void 0 : footerRender(onConfirm, onClear)) || defaultFooter;
  return wrapSSR((0, import_jsx_runtime4.jsx)("div", {
    className: (0, import_classnames.default)(prefixCls, hashId),
    onClick: function onClick(e) {
      return e.target.getAttribute("data-type") !== "confirm" && e.stopPropagation();
    },
    children: renderDom
  }));
};

// node_modules/@ant-design/pro-utils/es/components/ErrorBoundary/index.js
var import_react4 = __toESM(require_react());
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var ErrorBoundary = function(_React$Component) {
  _inherits(ErrorBoundary2, _React$Component);
  var _super = _createSuper(ErrorBoundary2);
  function ErrorBoundary2() {
    var _this;
    _classCallCheck(this, ErrorBoundary2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "state", {
      hasError: false,
      errorInfo: ""
    });
    return _this;
  }
  _createClass(ErrorBoundary2, [{
    key: "componentDidCatch",
    value: function componentDidCatch(error2, errorInfo) {
      console.log(error2, errorInfo);
    }
  }, {
    key: "render",
    value: function render() {
      if (this.state.hasError) {
        return (0, import_jsx_runtime5.jsx)(result_default, {
          status: "error",
          title: "Something went wrong.",
          extra: this.state.errorInfo
        });
      }
      return this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError(error2) {
      return {
        hasError: true,
        errorInfo: error2.message
      };
    }
  }]);
  return ErrorBoundary2;
}(import_react4.default.Component);

// node_modules/@ant-design/pro-utils/es/components/FieldLabel/index.js
var import_classnames2 = __toESM(require_classnames());
var import_react5 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/components/FieldLabel/style.js
var genProStyle3 = function genProStyle4(token2) {
  return _defineProperty({}, token2.componentCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({
    display: "inline-flex",
    gap: token2.marginXXS,
    alignItems: "center",
    height: "30px",
    paddingBlock: 0,
    paddingInline: 8,
    fontSize: token2.fontSize,
    lineHeight: "30px",
    borderRadius: "2px",
    cursor: "pointer",
    "&:hover": {
      backgroundColor: token2.colorBgTextHover
    },
    "&-active": _defineProperty({
      paddingBlock: 0,
      paddingInline: 8,
      backgroundColor: token2.colorBgTextHover
    }, "&".concat(token2.componentCls, "-allow-clear:hover:not(").concat(token2.componentCls, "-disabled)"), _defineProperty(_defineProperty({}, "".concat(token2.componentCls, "-arrow"), {
      display: "none"
    }), "".concat(token2.componentCls, "-close"), {
      display: "inline-flex"
    }))
  }, "".concat(token2.antCls, "-select"), _defineProperty({}, "".concat(token2.antCls, "-select-clear"), {
    borderRadius: "50%"
  })), "".concat(token2.antCls, "-picker"), _defineProperty({}, "".concat(token2.antCls, "-picker-clear"), {
    borderRadius: "50%"
  })), "&-icon", _defineProperty(_defineProperty({
    color: token2.colorIcon,
    transition: "color 0.3s",
    fontSize: 12,
    verticalAlign: "middle"
  }, "&".concat(token2.componentCls, "-close"), {
    display: "none",
    fontSize: 12,
    alignItems: "center",
    justifyContent: "center",
    color: token2.colorTextPlaceholder,
    borderRadius: "50%"
  }), "&:hover", {
    color: token2.colorIconHover
  })), "&-disabled", _defineProperty({
    color: token2.colorTextPlaceholder,
    cursor: "not-allowed"
  }, "".concat(token2.componentCls, "-icon"), {
    color: token2.colorTextPlaceholder
  })), "&-small", _defineProperty(_defineProperty(_defineProperty({
    height: "24px",
    paddingBlock: 0,
    paddingInline: 4,
    fontSize: token2.fontSizeSM,
    lineHeight: "24px"
  }, "&".concat(token2.componentCls, "-active"), {
    paddingBlock: 0,
    paddingInline: 8
  }), "".concat(token2.componentCls, "-icon"), {
    paddingBlock: 0,
    paddingInline: 0
  }), "".concat(token2.componentCls, "-close"), {
    marginBlockStart: "-2px",
    paddingBlock: 4,
    paddingInline: 4,
    fontSize: "6px"
  })), "&-bordered", {
    height: "32px",
    paddingBlock: 0,
    paddingInline: 8,
    border: "".concat(token2.lineWidth, "px solid ").concat(token2.colorBorder),
    borderRadius: "@border-radius-base"
  }), "&-bordered&-small", {
    height: "24px",
    paddingBlock: 0,
    paddingInline: 8
  }), "&-bordered&-active", {
    backgroundColor: token2.colorBgContainer
  }));
};
function useStyle3(prefixCls) {
  return useStyle("FieldLabel", function(token2) {
    var proToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle3(proToken)];
  });
}

// node_modules/@ant-design/pro-utils/es/components/FieldLabel/index.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var FieldLabelFunction = function FieldLabelFunction2(props, ref) {
  var _ConfigProvider$useCo, _ref2, _props$size;
  var label = props.label, onClear = props.onClear, value = props.value, disabled = props.disabled, onLabelClick = props.onLabelClick, ellipsis = props.ellipsis, placeholder = props.placeholder, className = props.className, formatter = props.formatter, bordered = props.bordered, style = props.style, downIcon = props.downIcon, _props$allowClear = props.allowClear, allowClear = _props$allowClear === void 0 ? true : _props$allowClear, _props$valueMaxLength = props.valueMaxLength, valueMaxLength = _props$valueMaxLength === void 0 ? 41 : _props$valueMaxLength;
  var _ref = (config_provider_default === null || config_provider_default === void 0 || (_ConfigProvider$useCo = config_provider_default.useConfig) === null || _ConfigProvider$useCo === void 0 ? void 0 : _ConfigProvider$useCo.call(config_provider_default)) || {
    componentSize: "middle"
  }, componentSize = _ref.componentSize;
  var size = componentSize;
  var _useContext = (0, import_react5.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-core-field-label");
  var _useStyle = useStyle3(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var intl = useIntl();
  var clearRef = (0, import_react5.useRef)(null);
  var labelRef = (0, import_react5.useRef)(null);
  (0, import_react5.useImperativeHandle)(ref, function() {
    return {
      labelRef,
      clearRef
    };
  });
  var wrapElements = function wrapElements2(array) {
    if (array.every(function(item) {
      return typeof item === "string";
    })) return array.join(",");
    return array.map(function(item, index2) {
      var comma = index2 === array.length - 1 ? "" : ",";
      if (typeof item === "string") {
        return (0, import_jsx_runtime6.jsxs)("span", {
          children: [item, comma]
        }, index2);
      }
      return (0, import_jsx_runtime6.jsxs)("span", {
        style: {
          display: "flex"
        },
        children: [item, comma]
      }, index2);
    });
  };
  var formatterText = function formatterText2(aValue) {
    if (formatter) {
      return formatter(aValue);
    }
    return Array.isArray(aValue) ? wrapElements(aValue) : aValue;
  };
  var getTextByValue = function getTextByValue2(aLabel, aValue) {
    if (aValue !== void 0 && aValue !== null && aValue !== "" && (!Array.isArray(aValue) || aValue.length)) {
      var _str$toString, _str$toString$substr;
      var prefix = aLabel ? (0, import_jsx_runtime6.jsxs)("span", {
        onClick: function onClick() {
          onLabelClick === null || onLabelClick === void 0 || onLabelClick();
        },
        className: "".concat(prefixCls, "-text"),
        children: [aLabel, ": "]
      }) : "";
      var str = formatterText(aValue);
      if (!ellipsis) {
        return (0, import_jsx_runtime6.jsxs)("span", {
          style: {
            display: "inline-flex",
            alignItems: "center"
          },
          children: [prefix, formatterText(aValue)]
        });
      }
      var getText = function getText2() {
        var isArrayValue = Array.isArray(aValue) && aValue.length > 1;
        var unitText = intl.getMessage("form.lightFilter.itemUnit", "项");
        if (typeof str === "string" && str.length > valueMaxLength && isArrayValue) {
          return "...".concat(aValue.length).concat(unitText);
        }
        return "";
      };
      var tail = getText();
      return (0, import_jsx_runtime6.jsxs)("span", {
        title: typeof str === "string" ? str : void 0,
        style: {
          display: "inline-flex",
          alignItems: "center"
        },
        children: [prefix, (0, import_jsx_runtime7.jsx)("span", {
          style: {
            paddingInlineStart: 4,
            display: "flex"
          },
          children: typeof str === "string" ? str === null || str === void 0 || (_str$toString = str.toString()) === null || _str$toString === void 0 || (_str$toString$substr = _str$toString.substr) === null || _str$toString$substr === void 0 ? void 0 : _str$toString$substr.call(_str$toString, 0, valueMaxLength) : str
        }), tail]
      });
    }
    return aLabel || placeholder;
  };
  return wrapSSR((0, import_jsx_runtime6.jsxs)("span", {
    className: (0, import_classnames2.default)(prefixCls, hashId, "".concat(prefixCls, "-").concat((_ref2 = (_props$size = props.size) !== null && _props$size !== void 0 ? _props$size : size) !== null && _ref2 !== void 0 ? _ref2 : "middle"), _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(prefixCls, "-active"), (Array.isArray(value) ? value.length > 0 : !!value) || value === 0), "".concat(prefixCls, "-disabled"), disabled), "".concat(prefixCls, "-bordered"), bordered), "".concat(prefixCls, "-allow-clear"), allowClear), className),
    style,
    ref: labelRef,
    onClick: function onClick() {
      var _props$onClick;
      props === null || props === void 0 || (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props);
    },
    children: [getTextByValue(label, value), (value || value === 0) && allowClear && (0, import_jsx_runtime7.jsx)(CloseCircleFilled_default, {
      role: "button",
      title: intl.getMessage("form.lightFilter.clear", "清除"),
      className: (0, import_classnames2.default)("".concat(prefixCls, "-icon"), hashId, "".concat(prefixCls, "-close")),
      onClick: function onClick(e) {
        if (!disabled) onClear === null || onClear === void 0 || onClear();
        e.stopPropagation();
      },
      ref: clearRef
    }), downIcon !== false ? downIcon !== null && downIcon !== void 0 ? downIcon : (0, import_jsx_runtime7.jsx)(DownOutlined_default, {
      className: (0, import_classnames2.default)("".concat(prefixCls, "-icon"), hashId, "".concat(prefixCls, "-arrow"))
    }) : null]
  }));
};
var FieldLabel = import_react5.default.forwardRef(FieldLabelFunction);

// node_modules/@ant-design/pro-utils/es/components/FilterDropdown/index.js
var import_react6 = __toESM(require_react());
var import_classnames3 = __toESM(require_classnames());

// node_modules/@ant-design/pro-utils/es/omitUndefined/index.js
var omitUndefined3 = function omitUndefined4(obj) {
  var newObj = {};
  Object.keys(obj || {}).forEach(function(key) {
    if (obj[key] !== void 0) {
      newObj[key] = obj[key];
    }
  });
  if (Object.keys(newObj).length < 1) {
    return void 0;
  }
  return newObj;
};

// node_modules/@ant-design/pro-utils/es/compareVersions/index.js
var semver = /^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;
var isWildcard = function isWildcard2(s) {
  return s === "*" || s === "x" || s === "X";
};
var tryParse = function tryParse2(v) {
  var n = parseInt(v, 10);
  return isNaN(n) ? v : n;
};
var forceType = function forceType2(a, b) {
  return _typeof(a) !== _typeof(b) ? [String(a), String(b)] : [a, b];
};
var compareStrings = function compareStrings2(a, b) {
  if (isWildcard(a) || isWildcard(b)) return 0;
  var _forceType = forceType(tryParse(a), tryParse(b)), _forceType2 = _slicedToArray(_forceType, 2), ap = _forceType2[0], bp = _forceType2[1];
  if (ap > bp) return 1;
  if (ap < bp) return -1;
  return 0;
};
var compareSegments = function compareSegments2(a, b) {
  for (var i = 0; i < Math.max(a.length, b.length); i++) {
    var r = compareStrings(a[i] || "0", b[i] || "0");
    if (r !== 0) return r;
  }
  return 0;
};
var validateAndParse = function validateAndParse2(version) {
  var _match$shift;
  var match = version.match(semver);
  match === null || match === void 0 || (_match$shift = match.shift) === null || _match$shift === void 0 || _match$shift.call(match);
  return match;
};
var compareVersions = function compareVersions2(v1, v2) {
  var n1 = validateAndParse(v1);
  var n2 = validateAndParse(v2);
  var p1 = n1.pop();
  var p2 = n2.pop();
  var r = compareSegments(n1, n2);
  if (r !== 0) return r;
  if (p1 || p2) {
    return p1 ? -1 : 1;
  }
  return 0;
};

// node_modules/@ant-design/pro-utils/es/compareVersions/openVisibleCompatible.js
var getVersion = function getVersion2() {
  var _process;
  if (typeof process === "undefined") return version_default;
  return ((_process = process) === null || _process === void 0 || (_process = _process.env) === null || _process === void 0 ? void 0 : _process.ANTD_VERSION) || version_default;
};
var openVisibleCompatible = function openVisibleCompatible2(open, onOpenChange) {
  var props = compareVersions(getVersion(), "4.23.0") > -1 ? {
    open,
    onOpenChange
  } : {
    visible: open,
    onVisibleChange: onOpenChange
  };
  return omitUndefined3(props);
};

// node_modules/@ant-design/pro-utils/es/components/FilterDropdown/style.js
var genProStyle5 = function genProStyle6(token2) {
  return _defineProperty(_defineProperty(_defineProperty({}, "".concat(token2.componentCls, "-label"), {
    cursor: "pointer"
  }), "".concat(token2.componentCls, "-overlay"), {
    minWidth: "200px",
    marginBlockStart: "4px"
  }), "".concat(token2.componentCls, "-content"), {
    paddingBlock: 16,
    paddingInline: 16
  });
};
function useStyle4(prefixCls) {
  return useStyle("FilterDropdown", function(token2) {
    var proToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle5(proToken)];
  });
}

// node_modules/@ant-design/pro-utils/es/components/FilterDropdown/index.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var FilterDropdown = function FilterDropdown2(props) {
  var children = props.children, label = props.label, footer = props.footer, open = props.open, onOpenChange = props.onOpenChange, disabled = props.disabled, onVisibleChange = props.onVisibleChange, visible = props.visible, footerRender = props.footerRender, placement = props.placement;
  var _useContext = (0, import_react6.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-core-field-dropdown");
  var _useStyle = useStyle4(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var dropdownOpenProps = openVisibleCompatible(open || visible || false, onOpenChange || onVisibleChange);
  var htmlRef = (0, import_react6.useRef)(null);
  return wrapSSR((0, import_jsx_runtime8.jsx)(popover_default, _objectSpread2(_objectSpread2({
    placement,
    trigger: ["click"]
  }, dropdownOpenProps), {}, {
    overlayInnerStyle: {
      padding: 0
    },
    content: (0, import_jsx_runtime9.jsxs)("div", {
      ref: htmlRef,
      className: (0, import_classnames3.default)("".concat(prefixCls, "-overlay"), _defineProperty(_defineProperty({}, "".concat(prefixCls, "-overlay-").concat(placement), placement), "hashId", hashId)),
      children: [(0, import_jsx_runtime8.jsx)(config_provider_default, {
        getPopupContainer: function getPopupContainer() {
          return htmlRef.current || document.body;
        },
        children: (0, import_jsx_runtime8.jsx)("div", {
          className: "".concat(prefixCls, "-content ").concat(hashId).trim(),
          children
        })
      }), footer && (0, import_jsx_runtime8.jsx)(DropdownFooter, _objectSpread2({
        disabled,
        footerRender
      }, footer))]
    }),
    children: (0, import_jsx_runtime8.jsx)("span", {
      className: "".concat(prefixCls, "-label ").concat(hashId).trim(),
      children: label
    })
  })));
};

// node_modules/@ant-design/pro-utils/es/components/InlineErrorFormItem/index.js
var import_react7 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/components/InlineErrorFormItem/style.js
var genProStyle7 = function genProStyle8(token2) {
  var progressBgCls = "".concat(token2.antCls, "-progress-bg");
  return _defineProperty({}, token2.componentCls, {
    "&-multiple": {
      paddingBlockStart: 6,
      paddingBlockEnd: 12,
      paddingInline: 8
    },
    "&-progress": {
      "&-success": _defineProperty({}, progressBgCls, {
        backgroundColor: token2.colorSuccess
      }),
      "&-error": _defineProperty({}, progressBgCls, {
        backgroundColor: token2.colorError
      }),
      "&-warning": _defineProperty({}, progressBgCls, {
        backgroundColor: token2.colorWarning
      })
    },
    "&-rule": {
      display: "flex",
      alignItems: "center",
      "&-icon": {
        "&-default": {
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          width: "14px",
          height: "22px",
          "&-circle": {
            width: "6px",
            height: "6px",
            backgroundColor: token2.colorTextSecondary,
            borderRadius: "4px"
          }
        },
        "&-loading": {
          color: token2.colorPrimary
        },
        "&-error": {
          color: token2.colorError
        },
        "&-success": {
          color: token2.colorSuccess
        }
      },
      "&-text": {
        color: token2.colorText
      }
    }
  });
};
function useStyle5(prefixCls) {
  return useStyle("InlineErrorFormItem", function(token2) {
    var proToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle7(proToken)];
  });
}

// node_modules/@ant-design/pro-utils/es/components/InlineErrorFormItem/index.js
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var _excluded3 = ["rules", "name", "children", "popoverProps"];
var _excluded22 = ["errorType", "rules", "name", "popoverProps", "children"];
var FIX_INLINE_STYLE = {
  marginBlockStart: -5,
  marginBlockEnd: -5,
  marginInlineStart: 0,
  marginInlineEnd: 0
};
var InlineErrorFormItemPopover = function InlineErrorFormItemPopover2(_ref) {
  var inputProps = _ref.inputProps, input = _ref.input, extra = _ref.extra, errorList = _ref.errorList, popoverProps = _ref.popoverProps;
  var _useState = (0, import_react7.useState)(false), _useState2 = _slicedToArray(_useState, 2), open = _useState2[0], setOpen = _useState2[1];
  var _useState3 = (0, import_react7.useState)([]), _useState4 = _slicedToArray(_useState3, 2), errorStringList = _useState4[0], setErrorList = _useState4[1];
  var _useContext = (0, import_react7.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls();
  var token2 = useToken3();
  var _useStyle = useStyle5("".concat(prefixCls, "-form-item-with-help")), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  (0, import_react7.useEffect)(function() {
    if (inputProps.validateStatus !== "validating") {
      setErrorList(inputProps.errors);
    }
  }, [inputProps.errors, inputProps.validateStatus]);
  var popoverOpenProps = openVisibleCompatible(errorStringList.length < 1 ? false : open, function(changeOpen) {
    if (changeOpen === open) return;
    setOpen(changeOpen);
  });
  var loading = inputProps.validateStatus === "validating";
  return (0, import_jsx_runtime10.jsx)(popover_default, _objectSpread2(_objectSpread2(_objectSpread2({
    trigger: (popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.trigger) || ["click"],
    placement: (popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.placement) || "topLeft"
  }, popoverOpenProps), {}, {
    getPopupContainer: popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.getPopupContainer,
    getTooltipContainer: popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.getTooltipContainer,
    content: wrapSSR((0, import_jsx_runtime10.jsx)("div", {
      className: "".concat(prefixCls, "-form-item ").concat(hashId, " ").concat(token2.hashId).trim(),
      style: {
        margin: 0,
        padding: 0
      },
      children: (0, import_jsx_runtime11.jsxs)("div", {
        className: "".concat(prefixCls, "-form-item-with-help ").concat(hashId, " ").concat(token2.hashId).trim(),
        children: [loading ? (0, import_jsx_runtime10.jsx)(LoadingOutlined_default, {}) : null, errorList]
      })
    }))
  }, popoverProps), {}, {
    children: (0, import_jsx_runtime11.jsxs)(import_jsx_runtime12.Fragment, {
      children: [input, extra]
    })
  }), "popover");
};
var InternalFormItemFunction = function InternalFormItemFunction2(_ref2) {
  var rules = _ref2.rules, name = _ref2.name, children = _ref2.children, popoverProps = _ref2.popoverProps, rest = _objectWithoutProperties(_ref2, _excluded3);
  return (0, import_jsx_runtime10.jsx)(form_default.Item, _objectSpread2(_objectSpread2({
    name,
    rules,
    hasFeedback: false,
    shouldUpdate: function shouldUpdate(prev, next) {
      if (prev === next) return false;
      var shouldName = [name].flat(1);
      if (shouldName.length > 1) {
        shouldName.pop();
      }
      try {
        return JSON.stringify(get(prev, shouldName)) !== JSON.stringify(get(next, shouldName));
      } catch (error2) {
        return true;
      }
    },
    _internalItemRender: {
      mark: "pro_table_render",
      render: function render(inputProps, doms) {
        return (0, import_jsx_runtime10.jsx)(InlineErrorFormItemPopover, _objectSpread2({
          inputProps,
          popoverProps
        }, doms));
      }
    }
  }, rest), {}, {
    style: _objectSpread2(_objectSpread2({}, FIX_INLINE_STYLE), rest === null || rest === void 0 ? void 0 : rest.style),
    children
  }));
};
var InlineErrorFormItem = function InlineErrorFormItem2(props) {
  var errorType = props.errorType, rules = props.rules, name = props.name, popoverProps = props.popoverProps, children = props.children, rest = _objectWithoutProperties(props, _excluded22);
  if (name && rules !== null && rules !== void 0 && rules.length && errorType === "popover") {
    return (0, import_jsx_runtime10.jsx)(InternalFormItemFunction, _objectSpread2(_objectSpread2({
      name,
      rules,
      popoverProps
    }, rest), {}, {
      children
    }));
  }
  return (0, import_jsx_runtime10.jsx)(form_default.Item, _objectSpread2(_objectSpread2({
    rules,
    shouldUpdate: name ? function(prev, next) {
      if (prev === next) return false;
      var shouldName = [name].flat(1);
      if (shouldName.length > 1) {
        shouldName.pop();
      }
      try {
        return JSON.stringify(get(prev, shouldName)) !== JSON.stringify(get(next, shouldName));
      } catch (error2) {
        return true;
      }
    } : void 0
  }, rest), {}, {
    style: _objectSpread2(_objectSpread2({}, FIX_INLINE_STYLE), rest.style),
    name,
    children
  }));
};

// node_modules/@ant-design/pro-utils/es/components/LabelIconTip/index.js
var import_classnames4 = __toESM(require_classnames());
var import_react8 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/components/LabelIconTip/style.js
var genProStyle9 = function genProStyle10(token2) {
  return _defineProperty({}, token2.componentCls, {
    display: "inline-flex",
    alignItems: "center",
    maxWidth: "100%",
    "&-icon": {
      display: "block",
      marginInlineStart: "4px",
      cursor: "pointer",
      "&:hover": {
        color: token2.colorPrimary
      }
    },
    "&-title": {
      display: "inline-flex",
      flex: "1"
    },
    "&-subtitle ": {
      marginInlineStart: 8,
      color: token2.colorTextSecondary,
      fontWeight: "normal",
      fontSize: token2.fontSize,
      whiteSpace: "nowrap"
    },
    "&-title-ellipsis": {
      overflow: "hidden",
      whiteSpace: "nowrap",
      textOverflow: "ellipsis",
      wordBreak: "keep-all"
    }
  });
};
function useStyle6(prefixCls) {
  return useStyle("LabelIconTip", function(token2) {
    var proToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle9(proToken)];
  });
}

// node_modules/@ant-design/pro-utils/es/components/LabelIconTip/index.js
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var LabelIconTip = import_react8.default.memo(function(props) {
  var label = props.label, tooltip = props.tooltip, ellipsis = props.ellipsis, subTitle = props.subTitle;
  var _useContext = (0, import_react8.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var className = getPrefixCls("pro-core-label-tip");
  var _useStyle = useStyle6(className), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  if (!tooltip && !subTitle) {
    return (0, import_jsx_runtime14.jsx)(import_jsx_runtime13.Fragment, {
      children: label
    });
  }
  var tooltipProps = typeof tooltip === "string" || import_react8.default.isValidElement(tooltip) ? {
    title: tooltip
  } : tooltip;
  var icon = (tooltipProps === null || tooltipProps === void 0 ? void 0 : tooltipProps.icon) || (0, import_jsx_runtime14.jsx)(InfoCircleOutlined_default, {});
  return wrapSSR((0, import_jsx_runtime15.jsxs)("div", {
    className: (0, import_classnames4.default)(className, hashId),
    onMouseDown: function onMouseDown(e) {
      return e.stopPropagation();
    },
    onMouseLeave: function onMouseLeave(e) {
      return e.stopPropagation();
    },
    onMouseMove: function onMouseMove(e) {
      return e.stopPropagation();
    },
    children: [(0, import_jsx_runtime14.jsx)("div", {
      className: (0, import_classnames4.default)("".concat(className, "-title"), hashId, _defineProperty({}, "".concat(className, "-title-ellipsis"), ellipsis)),
      children: label
    }), subTitle && (0, import_jsx_runtime14.jsx)("div", {
      className: "".concat(className, "-subtitle ").concat(hashId).trim(),
      children: subTitle
    }), tooltip && (0, import_jsx_runtime14.jsx)(tooltip_default, _objectSpread2(_objectSpread2({}, tooltipProps), {}, {
      children: (0, import_jsx_runtime14.jsx)("span", {
        className: "".concat(className, "-icon ").concat(hashId).trim(),
        children: icon
      })
    }))]
  }));
});

// node_modules/@ant-design/pro-utils/es/components/ProFormContext/index.js
var import_react9 = __toESM(require_react());
var ProFormContext = import_react9.default.createContext({});

// node_modules/@ant-design/pro-utils/es/conversionMomentValue/index.js
var import_dayjs2 = __toESM(require_dayjs_min());
var import_quarterOfYear = __toESM(require_quarterOfYear());

// node_modules/@ant-design/pro-utils/es/isNil/index.js
var isNil = function isNil2(value) {
  return value === null || value === void 0;
};

// node_modules/@ant-design/pro-utils/es/conversionMomentValue/index.js
import_dayjs2.default.extend(import_quarterOfYear.default);
var dateFormatterMap = {
  time: "HH:mm:ss",
  timeRange: "HH:mm:ss",
  date: "YYYY-MM-DD",
  dateWeek: "YYYY-wo",
  dateMonth: "YYYY-MM",
  dateQuarter: "YYYY-[Q]Q",
  dateYear: "YYYY",
  dateRange: "YYYY-MM-DD",
  dateTime: "YYYY-MM-DD HH:mm:ss",
  dateTimeRange: "YYYY-MM-DD HH:mm:ss"
};
function isObject(o) {
  return Object.prototype.toString.call(o) === "[object Object]";
}
function isPlainObject(o) {
  if (isObject(o) === false) return false;
  var ctor = o.constructor;
  if (ctor === void 0) return true;
  var prot = ctor.prototype;
  if (isObject(prot) === false) return false;
  if (prot.hasOwnProperty("isPrototypeOf") === false) {
    return false;
  }
  return true;
}
var isMoment = function isMoment2(value) {
  return !!(value !== null && value !== void 0 && value._isAMomentObject);
};
var convertMoment = function convertMoment2(value, dateFormatter, valueType) {
  if (!dateFormatter) {
    return value;
  }
  if (import_dayjs2.default.isDayjs(value) || isMoment(value)) {
    if (dateFormatter === "number") {
      return value.valueOf();
    }
    if (dateFormatter === "string") {
      return value.format(dateFormatterMap[valueType] || "YYYY-MM-DD HH:mm:ss");
    }
    if (typeof dateFormatter === "string" && dateFormatter !== "string") {
      return value.format(dateFormatter);
    }
    if (typeof dateFormatter === "function") {
      return dateFormatter(value, valueType);
    }
  }
  return value;
};
var conversionMomentValue = function conversionMomentValue2(value, dateFormatter, valueTypeMap, omitNil, parentKey) {
  var tmpValue = {};
  if (typeof window === "undefined") return value;
  if (_typeof(value) !== "object" || isNil(value) || value instanceof Blob || Array.isArray(value)) {
    return value;
  }
  Object.keys(value).forEach(function(valueKey) {
    var namePath = parentKey ? [parentKey, valueKey].flat(1) : [valueKey];
    var valueFormatMap = get(valueTypeMap, namePath) || "text";
    var valueType = "text";
    var dateFormat;
    if (typeof valueFormatMap === "string") {
      valueType = valueFormatMap;
    } else if (valueFormatMap) {
      valueType = valueFormatMap.valueType;
      dateFormat = valueFormatMap.dateFormat;
    }
    var itemValue = value[valueKey];
    if (isNil(itemValue) && omitNil) {
      return;
    }
    if (isPlainObject(itemValue) && // 不是数组
    !Array.isArray(itemValue) && // 不是 dayjs
    !import_dayjs2.default.isDayjs(itemValue) && // 不是 moment
    !isMoment(itemValue)) {
      tmpValue[valueKey] = conversionMomentValue2(itemValue, dateFormatter, valueTypeMap, omitNil, namePath);
      return;
    }
    if (Array.isArray(itemValue)) {
      tmpValue[valueKey] = itemValue.map(function(arrayValue, index2) {
        if (import_dayjs2.default.isDayjs(arrayValue) || isMoment(arrayValue)) {
          return convertMoment(arrayValue, dateFormat || dateFormatter, valueType);
        }
        return conversionMomentValue2(arrayValue, dateFormatter, valueTypeMap, omitNil, [valueKey, "".concat(index2)].flat(1));
      });
      return;
    }
    tmpValue[valueKey] = convertMoment(itemValue, dateFormat || dateFormatter, valueType);
  });
  return tmpValue;
};

// node_modules/@ant-design/pro-utils/es/dateArrayFormatter/index.js
var import_dayjs3 = __toESM(require_dayjs_min());
var formatString = function formatString2(endText, format) {
  if (typeof format === "function") {
    return format((0, import_dayjs3.default)(endText));
  }
  return (0, import_dayjs3.default)(endText).format(format);
};
var dateArrayFormatter = function dateArrayFormatter2(value, format) {
  var _ref = Array.isArray(value) ? value : [], _ref2 = _slicedToArray(_ref, 2), startText = _ref2[0], endText = _ref2[1];
  var formatFirst;
  var formatEnd;
  if (Array.isArray(format)) {
    formatFirst = format[0];
    formatEnd = format[1];
  } else if (_typeof(format) === "object" && format.type === "mask") {
    formatFirst = format.format;
    formatEnd = format.format;
  } else {
    formatFirst = format;
    formatEnd = format;
  }
  var parsedStartText = startText ? formatString(startText, formatFirst) : "";
  var parsedEndText = endText ? formatString(endText, formatEnd) : "";
  var valueStr = parsedStartText && parsedEndText ? "".concat(parsedStartText, " ~ ").concat(parsedEndText) : "";
  return valueStr;
};

// node_modules/@ant-design/pro-utils/es/genCopyable/index.js
var import_react10 = __toESM(require_react());
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var isNeedTranText = function isNeedTranText2(item) {
  var _item$valueType;
  if (item !== null && item !== void 0 && (_item$valueType = item.valueType) !== null && _item$valueType !== void 0 && _item$valueType.toString().startsWith("date")) {
    return true;
  }
  if ((item === null || item === void 0 ? void 0 : item.valueType) === "select" || item !== null && item !== void 0 && item.valueEnum) {
    return true;
  }
  return false;
};
var getEllipsis = function getEllipsis2(item) {
  var _item$ellipsis;
  if (((_item$ellipsis = item.ellipsis) === null || _item$ellipsis === void 0 ? void 0 : _item$ellipsis.showTitle) === false) {
    return false;
  }
  return item.ellipsis;
};
var genCopyable = function genCopyable2(dom, item, text) {
  if (item.copyable || item.ellipsis) {
    var copyable = item.copyable && text ? {
      text,
      tooltips: ["", ""]
    } : void 0;
    var needTranText = isNeedTranText(item);
    var ellipsis = getEllipsis(item) && text ? {
      tooltip: (
        // 支持一下 tooltip 的关闭
        (item === null || item === void 0 ? void 0 : item.tooltip) !== false && needTranText ? (0, import_jsx_runtime16.jsx)("div", {
          className: "pro-table-tooltip-text",
          children: dom
        }) : text
      )
    } : false;
    return (0, import_jsx_runtime16.jsx)(typography_default.Text, {
      style: {
        width: "100%",
        margin: 0,
        padding: 0
      },
      title: "",
      copyable,
      ellipsis,
      children: dom
    });
  }
  return dom;
};

// node_modules/@ant-design/pro-utils/es/runFunction/index.js
function runFunction(valueEnum) {
  if (typeof valueEnum === "function") {
    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      rest[_key - 1] = arguments[_key];
    }
    return valueEnum.apply(void 0, rest);
  }
  return valueEnum;
}

// node_modules/@ant-design/pro-utils/es/getFieldPropsOrFormItemProps/index.js
var getFieldPropsOrFormItemProps = function getFieldPropsOrFormItemProps2(fieldProps, form, extraProps) {
  if (form === void 0) {
    return fieldProps;
  }
  return runFunction(fieldProps, form, extraProps);
};

// node_modules/@ant-design/pro-utils/es/compareVersions/menuOverlayCompatible.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var menuOverlayCompatible = function menuOverlayCompatible2(menu) {
  var props = compareVersions(getVersion(), "4.24.0") > -1 ? {
    menu
  } : {
    overlay: (0, import_jsx_runtime17.jsx)(menu_default, _objectSpread2({}, menu))
  };
  return omitUndefined3(props);
};

// node_modules/@ant-design/pro-utils/es/hooks/useDebounceFn/index.js
var import_react12 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/hooks/useRefFunction/index.js
var import_react11 = __toESM(require_react());
var useRefFunction = function useRefFunction2(reFunction) {
  var ref = (0, import_react11.useRef)(null);
  ref.current = reFunction;
  return (0, import_react11.useCallback)(function() {
    var _ref$current;
    for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {
      rest[_key] = arguments[_key];
    }
    return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.call.apply(_ref$current, [ref].concat(_toConsumableArray(rest)));
  }, []);
};

// node_modules/@ant-design/pro-utils/es/hooks/useDebounceFn/index.js
function useDebounceFn(fn, wait) {
  var callback = useRefFunction(fn);
  var timer = (0, import_react12.useRef)();
  var cancel = (0, import_react12.useCallback)(function() {
    if (timer.current) {
      clearTimeout(timer.current);
      timer.current = null;
    }
  }, []);
  var run = (0, import_react12.useCallback)(_asyncToGenerator(_regeneratorRuntime().mark(function _callee2() {
    var _len, args, _key, _args2 = arguments;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          for (_len = _args2.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = _args2[_key];
          }
          if (!(wait === 0 || wait === void 0)) {
            _context2.next = 3;
            break;
          }
          return _context2.abrupt("return", callback.apply(void 0, args));
        case 3:
          cancel();
          return _context2.abrupt("return", new Promise(function(resolve) {
            timer.current = setTimeout(_asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
              return _regeneratorRuntime().wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    _context.t0 = resolve;
                    _context.next = 3;
                    return callback.apply(void 0, args);
                  case 3:
                    _context.t1 = _context.sent;
                    (0, _context.t0)(_context.t1);
                    return _context.abrupt("return");
                  case 6:
                  case "end":
                    return _context.stop();
                }
              }, _callee);
            })), wait);
          }));
        case 5:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  })), [callback, cancel, wait]);
  (0, import_react12.useEffect)(function() {
    return cancel;
  }, [cancel]);
  return {
    run,
    cancel
  };
}

// node_modules/@ant-design/pro-utils/es/hooks/useDebounceValue/index.js
var import_react14 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/hooks/useLatest/index.js
var import_react13 = __toESM(require_react());
var useLatest = function useLatest2(value) {
  var ref = (0, import_react13.useRef)(value);
  ref.current = value;
  return ref;
};

// node_modules/@ant-design/pro-utils/es/hooks/useDebounceValue/index.js
function useDebounceValue(value) {
  var delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;
  var deps = arguments.length > 2 ? arguments[2] : void 0;
  var _useState = (0, import_react14.useState)(value), _useState2 = _slicedToArray(_useState, 2), debouncedValue = _useState2[0], setDebouncedValue = _useState2[1];
  var valueRef = useLatest(value);
  (0, import_react14.useEffect)(
    function() {
      var handler = setTimeout(function() {
        setDebouncedValue(valueRef.current);
      }, delay);
      return function() {
        return clearTimeout(handler);
      };
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    deps ? [delay].concat(_toConsumableArray(deps)) : void 0
  );
  return debouncedValue;
}

// node_modules/@ant-design/pro-utils/es/hooks/useDeepCompareEffect/index.js
var import_react15 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/isDeepEqualReact/index.js
function isDeepEqualReact(a, b, ignoreKeys, debug) {
  if (a === b) return true;
  if (a && b && _typeof(a) === "object" && _typeof(b) === "object") {
    if (a.constructor !== b.constructor) return false;
    var length;
    var i;
    var keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0; ) if (!isDeepEqualReact(a[i], b[i], ignoreKeys, debug)) return false;
      return true;
    }
    if (a instanceof Map && b instanceof Map) {
      if (a.size !== b.size) return false;
      var _iterator = _createForOfIteratorHelper(a.entries()), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          i = _step.value;
          if (!b.has(i[0])) return false;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      var _iterator2 = _createForOfIteratorHelper(a.entries()), _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          i = _step2.value;
          if (!isDeepEqualReact(i[1], b.get(i[0]), ignoreKeys, debug)) return false;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      return true;
    }
    if (a instanceof Set && b instanceof Set) {
      if (a.size !== b.size) return false;
      var _iterator3 = _createForOfIteratorHelper(a.entries()), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          i = _step3.value;
          if (!b.has(i[0])) return false;
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return true;
    }
    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0; ) if (a[i] !== b[i]) return false;
      return true;
    }
    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf && a.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString && a.toString) return a.toString() === b.toString();
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;
    for (i = length; i-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    for (i = length; i-- !== 0; ) {
      var key = keys[i];
      if (ignoreKeys !== null && ignoreKeys !== void 0 && ignoreKeys.includes(key)) continue;
      if (key === "_owner" && a.$$typeof) {
        continue;
      }
      if (!isDeepEqualReact(a[key], b[key], ignoreKeys, debug)) {
        if (debug) {
          console.log(key);
        }
        return false;
      }
    }
    return true;
  }
  return a !== a && b !== b;
}

// node_modules/@ant-design/pro-utils/es/hooks/useDeepCompareEffect/index.js
var isDeepEqual = function isDeepEqual2(a, b, ignoreKeys) {
  return isDeepEqualReact(a, b, ignoreKeys);
};
function useDeepCompareMemoize(value, ignoreKeys) {
  var ref = (0, import_react15.useRef)();
  if (!isDeepEqual(value, ref.current, ignoreKeys)) {
    ref.current = value;
  }
  return ref.current;
}
function useDeepCompareEffect(effect, dependencies, ignoreKeys) {
  (0, import_react15.useEffect)(effect, useDeepCompareMemoize(dependencies || [], ignoreKeys));
}
function useDeepCompareEffectDebounce(effect, dependencies, ignoreKeys, waitTime) {
  var effectDn = useDebounceFn(_asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          effect();
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })), waitTime || 16);
  (0, import_react15.useEffect)(function() {
    effectDn.run();
  }, useDeepCompareMemoize(dependencies || [], ignoreKeys));
}

// node_modules/@ant-design/pro-utils/es/hooks/useDeepCompareMemo/index.js
var import_react16 = __toESM(require_react());
function useDeepCompareMemo(factory, dependencies) {
  return import_react16.default.useMemo(factory, useDeepCompareMemoize(dependencies));
}
var useDeepCompareMemo_default = useDeepCompareMemo;

// node_modules/@ant-design/pro-utils/es/hooks/useDocumentTitle/index.js
var import_react17 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/isBrowser/index.js
var isNode = typeof process !== "undefined" && process.versions != null && process.versions.node != null;
var isBrowser = function isBrowser2() {
  if (typeof process !== "undefined" && false) {
    return true;
  }
  return typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.matchMedia !== "undefined" && !isNode;
};

// node_modules/@ant-design/pro-utils/es/hooks/useFetchData/index.js
var import_react18 = __toESM(require_react());
var testId = 0;
function useFetchData(props) {
  var abortRef = (0, import_react18.useRef)(null);
  var _useState = (0, import_react18.useState)(function() {
    if (props.proFieldKey) {
      return props.proFieldKey.toString();
    }
    testId += 1;
    return testId.toString();
  }), _useState2 = _slicedToArray(_useState, 1), cacheKey = _useState2[0];
  var proFieldKeyRef = (0, import_react18.useRef)(cacheKey);
  var fetchData = function() {
    var _ref = _asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
      var _abortRef$current, _props$request;
      var abort, loadData;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            (_abortRef$current = abortRef.current) === null || _abortRef$current === void 0 || _abortRef$current.abort();
            abort = new AbortController();
            abortRef.current = abort;
            _context.next = 5;
            return Promise.race([(_props$request = props.request) === null || _props$request === void 0 ? void 0 : _props$request.call(props, props.params, props), new Promise(function(_, reject) {
              var _abortRef$current2;
              (_abortRef$current2 = abortRef.current) === null || _abortRef$current2 === void 0 || (_abortRef$current2 = _abortRef$current2.signal) === null || _abortRef$current2 === void 0 || _abortRef$current2.addEventListener("abort", function() {
                reject(new Error("aborted"));
              });
            })]);
          case 5:
            loadData = _context.sent;
            return _context.abrupt("return", loadData);
          case 7:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function fetchData2() {
      return _ref.apply(this, arguments);
    };
  }();
  (0, import_react18.useEffect)(function() {
    return function() {
      testId += 1;
    };
  }, []);
  var _useSWR = useSWR([proFieldKeyRef.current, props.params], fetchData, {
    revalidateOnFocus: false,
    shouldRetryOnError: false,
    revalidateOnReconnect: false
  }), data = _useSWR.data, error2 = _useSWR.error;
  return [data || error2];
}

// node_modules/@ant-design/pro-utils/es/hooks/usePrevious/index.js
var import_react19 = __toESM(require_react());
var usePrevious = function usePrevious2(state) {
  var ref = (0, import_react19.useRef)();
  (0, import_react19.useEffect)(function() {
    ref.current = state;
  });
  return ref.current;
};

// node_modules/@ant-design/pro-utils/es/hooks/useForceRender/index.js
var import_react20 = __toESM(require_react());
function useForceRender() {
  var _useState = (0, import_react20.useState)(true), _useState2 = _slicedToArray(_useState, 2), setValue = _useState2[1];
  var updateValue = (0, import_react20.useCallback)(function() {
    return setValue(function(oldValue) {
      return !oldValue;
    });
  }, []);
  return updateValue;
}

// node_modules/@ant-design/pro-utils/es/hooks/useRefCallback/index.js
var import_react21 = __toESM(require_react());
function useRefCallback(callback, initialValue) {
  var ref = (0, import_react21.useMemo)(function() {
    var defaultValue = {
      current: initialValue
    };
    return new Proxy(defaultValue, {
      set: function set2(target, prop, newValue) {
        if (!Object.is(target[prop], newValue)) {
          target[prop] = newValue;
          callback(ref);
        }
        return true;
      }
    });
  }, []);
  return ref;
}

// node_modules/@ant-design/pro-utils/es/hooks/useReactiveRef/index.js
function useReactiveRef(initialValue) {
  var forceRender = useForceRender();
  var ref = useRefCallback(forceRender, initialValue);
  return ref;
}

// node_modules/@ant-design/pro-utils/es/isDropdownValueType/index.js
var isDropdownValueType = function isDropdownValueType2(valueType) {
  var isDropdown = false;
  if (typeof valueType === "string" && valueType.startsWith("date") && !valueType.endsWith("Range") || valueType === "select" || valueType === "time") {
    isDropdown = true;
  }
  return isDropdown;
};

// node_modules/@ant-design/pro-utils/es/merge/index.js
var merge3 = function merge4() {
  var obj = {};
  for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {
    rest[_key] = arguments[_key];
  }
  var il = rest.length;
  var key;
  var i = 0;
  for (; i < il; i += 1) {
    for (key in rest[i]) {
      if (rest[i].hasOwnProperty(key)) {
        if (_typeof(obj[key]) === "object" && _typeof(rest[i][key]) === "object" && obj[key] !== void 0 && obj[key] !== null && !Array.isArray(obj[key]) && !Array.isArray(rest[i][key])) {
          obj[key] = _objectSpread2(_objectSpread2({}, obj[key]), rest[i][key]);
        } else {
          obj[key] = rest[i][key];
        }
      }
    }
  }
  return obj;
};

// node_modules/@ant-design/pro-utils/es/nanoid/index.js
var index = 0;
var genNanoid = function genNanoid2() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 21;
  if (typeof window === "undefined") return (index += 1).toFixed(0);
  if (!window.crypto) return (index += 1).toFixed(0);
  var e = "", r = crypto.getRandomValues(new Uint8Array(t));
  for (; t--; ) {
    var n = 63 & r[t];
    e += n < 36 ? n.toString(36) : n < 62 ? (n - 26).toString(36).toUpperCase() : n < 63 ? "_" : "-";
  }
  return e;
};
var nanoid = function nanoid2() {
  if (typeof window === "undefined") return genNanoid();
  if (window.crypto && window.crypto.randomUUID && typeof crypto.randomUUID == "function") {
    return crypto.randomUUID();
  }
  return genNanoid();
};

// node_modules/@ant-design/pro-utils/es/omitBoolean/index.js
var omitBoolean = function omitBoolean2(obj) {
  if (obj && obj !== true) {
    return obj;
  }
  return void 0;
};

// node_modules/@ant-design/pro-utils/es/omitUndefinedAndEmptyArr/index.js
var omitUndefinedAndEmptyArr = function omitUndefinedAndEmptyArr2(obj) {
  var newObj = {};
  Object.keys(obj || {}).forEach(function(key) {
    var _obj$key;
    if (Array.isArray(obj[key]) && ((_obj$key = obj[key]) === null || _obj$key === void 0 ? void 0 : _obj$key.length) === 0) {
      return;
    }
    if (obj[key] === void 0) {
      return;
    }
    newObj[key] = obj[key];
  });
  return newObj;
};

// node_modules/@ant-design/pro-utils/es/parseValueToMoment/index.js
var import_dayjs4 = __toESM(require_dayjs_min());
var import_customParseFormat = __toESM(require_customParseFormat());
import_dayjs4.default.extend(import_customParseFormat.default);
var isMoment3 = function isMoment4(value) {
  return !!(value !== null && value !== void 0 && value._isAMomentObject);
};
var parseValueToDay = function parseValueToDay2(value, formatter) {
  if (isNil(value) || import_dayjs4.default.isDayjs(value) || isMoment3(value)) {
    if (isMoment3(value)) {
      return (0, import_dayjs4.default)(value);
    }
    return value;
  }
  if (Array.isArray(value)) {
    return value.map(function(v) {
      return parseValueToDay2(v, formatter);
    });
  }
  if (typeof value === "number") return (0, import_dayjs4.default)(value);
  return (0, import_dayjs4.default)(value, formatter);
};

// node_modules/@ant-design/pro-utils/es/pickProFormItemProps/index.js
var antdFormItemPropsList = [
  // https://ant.design/components/form-cn/#Form.Item
  "colon",
  "dependencies",
  "extra",
  "getValueFromEvent",
  "getValueProps",
  "hasFeedback",
  "help",
  "htmlFor",
  "initialValue",
  "noStyle",
  "label",
  "labelAlign",
  "labelCol",
  "name",
  "preserve",
  "normalize",
  "required",
  "rules",
  "shouldUpdate",
  "trigger",
  "validateFirst",
  "validateStatus",
  "validateTrigger",
  "valuePropName",
  "wrapperCol",
  "hidden",
  // 我自定义的
  "addonBefore",
  "addonAfter",
  "addonWarpStyle"
];
function pickProFormItemProps(props) {
  var attrs = {};
  antdFormItemPropsList.forEach(function(key) {
    if (props[key] !== void 0) {
      attrs[key] = props[key];
    }
  });
  return attrs;
}

// node_modules/@ant-design/pro-utils/es/pickProProps/index.js
var proFieldProps = "valueType request plain renderFormItem render text formItemProps valueEnum";
var proFormProps = "fieldProps isDefaultDom groupProps contentRender submitterProps submitter";
function pickProProps(props) {
  var propList = "".concat(proFieldProps, " ").concat(proFormProps).split(/[\s\n]+/);
  var attrs = {};
  Object.keys(props || {}).forEach(function(key) {
    if (propList.includes(key)) {
      return;
    }
    attrs[key] = props[key];
  });
  return attrs;
}

// node_modules/@ant-design/pro-utils/es/proFieldParsingText/index.js
var import_react22 = __toESM(require_react());
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
function getType(obj) {
  var type = Object.prototype.toString.call(obj).match(/^\[object (.*)\]$/)[1].toLowerCase();
  if (type === "string" && _typeof(obj) === "object") return "object";
  if (obj === null) return "null";
  if (obj === void 0) return "undefined";
  return type;
}
var ProFieldBadgeColor = function ProFieldBadgeColor2(_ref) {
  var color = _ref.color, children = _ref.children;
  return (0, import_jsx_runtime18.jsx)(badge_default, {
    color,
    text: children
  });
};
var objectToMap = function objectToMap2(value) {
  if (getType(value) === "map") {
    return value;
  }
  return new Map(Object.entries(value || {}));
};
var TableStatus = {
  Success: function Success(_ref2) {
    var children = _ref2.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "success",
      text: children
    });
  },
  Error: function Error2(_ref3) {
    var children = _ref3.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "error",
      text: children
    });
  },
  Default: function Default(_ref4) {
    var children = _ref4.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "default",
      text: children
    });
  },
  Processing: function Processing(_ref5) {
    var children = _ref5.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "processing",
      text: children
    });
  },
  Warning: function Warning(_ref6) {
    var children = _ref6.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "warning",
      text: children
    });
  },
  success: function success(_ref7) {
    var children = _ref7.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "success",
      text: children
    });
  },
  error: function error(_ref8) {
    var children = _ref8.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "error",
      text: children
    });
  },
  default: function _default(_ref9) {
    var children = _ref9.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "default",
      text: children
    });
  },
  processing: function processing(_ref10) {
    var children = _ref10.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "processing",
      text: children
    });
  },
  warning: function warning(_ref11) {
    var children = _ref11.children;
    return (0, import_jsx_runtime18.jsx)(badge_default, {
      status: "warning",
      text: children
    });
  }
};
var proFieldParsingText = function proFieldParsingText2(text, valueEnumParams, key) {
  if (Array.isArray(text)) {
    return (0, import_jsx_runtime18.jsx)(space_default, {
      split: ",",
      size: 2,
      wrap: true,
      children: text.map(function(value, index2) {
        return (
          // @ts-ignore
          proFieldParsingText2(value, valueEnumParams, index2)
        );
      })
    }, key);
  }
  var valueEnum = objectToMap(valueEnumParams);
  if (!valueEnum.has(text) && !valueEnum.has("".concat(text))) {
    return (text === null || text === void 0 ? void 0 : text.label) || text;
  }
  var domText = valueEnum.get(text) || valueEnum.get("".concat(text));
  if (!domText) {
    return (0, import_jsx_runtime18.jsx)(import_react22.default.Fragment, {
      children: (text === null || text === void 0 ? void 0 : text.label) || text
    }, key);
  }
  var status = domText.status, color = domText.color;
  var Status = TableStatus[status || "Init"];
  if (Status) {
    return (0, import_jsx_runtime18.jsx)(Status, {
      children: domText.text
    }, key);
  }
  if (color) {
    return (0, import_jsx_runtime18.jsx)(ProFieldBadgeColor, {
      color,
      children: domText.text
    }, key);
  }
  return (0, import_jsx_runtime18.jsx)(import_react22.default.Fragment, {
    children: domText.text || domText
  }, key);
};

// node_modules/@ant-design/pro-utils/es/stringify/index.js
var stringify = configure({
  bigint: true,
  circularValue: "Magic circle!",
  deterministic: false,
  maximumDepth: 4
  //   maximumBreadth: 4,
});
var stringify_default = stringify;

// node_modules/@ant-design/pro-utils/es/transformKeySubmitValue/index.js
var import_react23 = __toESM(require_react());
function isPlainObj(itemValue) {
  if (_typeof(itemValue) !== "object") return false;
  if (itemValue === null) return true;
  if (import_react23.default.isValidElement(itemValue)) return false;
  if (itemValue.constructor === RegExp) return false;
  if (itemValue instanceof Map) return false;
  if (itemValue instanceof Set) return false;
  if (itemValue instanceof HTMLElement) return false;
  if (itemValue instanceof Blob) return false;
  if (itemValue instanceof File) return false;
  if (Array.isArray(itemValue)) return false;
  return true;
}
var transformKeySubmitValue = function transformKeySubmitValue2(values, dataFormatMapRaw) {
  var omit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var dataFormatMap = Object.keys(dataFormatMapRaw).reduce(function(ret, key) {
    var value = dataFormatMapRaw[key];
    if (!isNil(value)) {
      ret[key] = value;
    }
    return ret;
  }, {});
  if (Object.keys(dataFormatMap).length < 1) {
    return values;
  }
  if (typeof window === "undefined") return values;
  if (_typeof(values) !== "object" || isNil(values) || values instanceof Blob) {
    return values;
  }
  var finalValues = Array.isArray(values) ? [] : {};
  var gen = function gen2(tempValues, parentsKey) {
    var isArrayValues = Array.isArray(tempValues);
    var result = isArrayValues ? [] : {};
    if (tempValues == null || tempValues === void 0) {
      return result;
    }
    Object.keys(tempValues).forEach(function(entityKey) {
      var transformForArray = function transformForArray2(transformList, subItemValue) {
        if (!Array.isArray(transformList)) return entityKey;
        transformList.forEach(function(transform2, idx) {
          if (!transform2) return;
          var subTransformItem = subItemValue === null || subItemValue === void 0 ? void 0 : subItemValue[idx];
          if (typeof transform2 === "function") {
            subItemValue[idx] = transform2(subItemValue, entityKey, tempValues);
          }
          if (_typeof(transform2) === "object" && !Array.isArray(transform2)) {
            Object.keys(transform2).forEach(function(transformArrayItem) {
              var subTransformItemValue = subTransformItem === null || subTransformItem === void 0 ? void 0 : subTransformItem[transformArrayItem];
              if (typeof transform2[transformArrayItem] === "function" && subTransformItemValue) {
                var res = transform2[transformArrayItem](subTransformItem[transformArrayItem], entityKey, tempValues);
                subTransformItem[transformArrayItem] = _typeof(res) === "object" ? res[transformArrayItem] : res;
              } else if (_typeof(transform2[transformArrayItem]) === "object" && Array.isArray(transform2[transformArrayItem]) && subTransformItemValue) {
                transformForArray2(transform2[transformArrayItem], subTransformItemValue);
              }
            });
          }
          if (_typeof(transform2) === "object" && Array.isArray(transform2) && subTransformItem) {
            transformForArray2(transform2, subTransformItem);
          }
        });
        return entityKey;
      };
      var key = parentsKey ? [parentsKey, entityKey].flat(1) : [entityKey].flat(1);
      var itemValue = tempValues[entityKey];
      var transformFunction = get(dataFormatMap, key);
      var transform = function transform2() {
        var tempKey, transformedResult, isTransformedResultPrimitive = false;
        if (typeof transformFunction === "function") {
          transformedResult = transformFunction === null || transformFunction === void 0 ? void 0 : transformFunction(itemValue, entityKey, tempValues);
          var typeOfResult = _typeof(transformedResult);
          if (typeOfResult !== "object" && typeOfResult !== "undefined") {
            tempKey = entityKey;
            isTransformedResultPrimitive = true;
          } else {
            tempKey = transformedResult;
          }
        } else {
          tempKey = transformForArray(transformFunction, itemValue);
        }
        if (Array.isArray(tempKey)) {
          result = set(result, tempKey, itemValue);
          return;
        }
        if (_typeof(tempKey) === "object" && !Array.isArray(finalValues)) {
          finalValues = merge_default(finalValues, tempKey);
        } else if (_typeof(tempKey) === "object" && Array.isArray(finalValues)) {
          result = _objectSpread2(_objectSpread2({}, result), tempKey);
        } else if (tempKey !== null || tempKey !== void 0) {
          result = set(result, [tempKey], isTransformedResultPrimitive ? transformedResult : itemValue);
        }
      };
      if (transformFunction && typeof transformFunction === "function") {
        transform();
      }
      if (typeof window === "undefined") return;
      if (isPlainObj(itemValue)) {
        var genValues = gen2(itemValue, key);
        if (Object.keys(genValues).length < 1) {
          return;
        }
        result = set(result, [entityKey], genValues);
        return;
      }
      transform();
    });
    return omit ? result : tempValues;
  };
  finalValues = Array.isArray(values) && Array.isArray(finalValues) ? _toConsumableArray(gen(values)) : merge3({}, gen(values), finalValues);
  return finalValues;
};

// node_modules/@ant-design/pro-utils/es/compatible/compatibleBorder.js
var compatibleBorder = function compatibleBorder2(bordered) {
  if (bordered === void 0) {
    return {};
  }
  return compareVersions(version_default, "5.13.0") <= 0 ? {
    bordered
  } : {
    variant: bordered ? void 0 : "borderless"
  };
};

// node_modules/@ant-design/pro-utils/es/useEditableArray/index.js
var import_react24 = __toESM(require_react());
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var _excluded4 = ["map_row_parentKey"];
var _excluded23 = ["map_row_parentKey", "map_row_key"];
var _excluded32 = ["map_row_key"];
var warning2 = function warning3(messageStr) {
  return (message_default.warn || message_default.warning)(messageStr);
};
var recordKeyToString = function recordKeyToString2(rowKey) {
  if (Array.isArray(rowKey)) return rowKey.join(",");
  return rowKey;
};
function editableRowByKey(keyProps, action) {
  var _recordKeyToString;
  var getRowKey = keyProps.getRowKey, row = keyProps.row, data = keyProps.data, _keyProps$childrenCol = keyProps.childrenColumnName, childrenColumnName = _keyProps$childrenCol === void 0 ? "children" : _keyProps$childrenCol;
  var key = (_recordKeyToString = recordKeyToString(keyProps.key)) === null || _recordKeyToString === void 0 ? void 0 : _recordKeyToString.toString();
  var kvMap = /* @__PURE__ */ new Map();
  function dig(records, map_row_parentKey, map_row_index) {
    records.forEach(function(record, index2) {
      var eachIndex = (map_row_index || 0) * 10 + index2;
      var recordKey = getRowKey(record, eachIndex).toString();
      if (record && _typeof(record) === "object" && childrenColumnName in record) {
        dig(record[childrenColumnName] || [], recordKey, eachIndex);
      }
      var newRecord = _objectSpread2(_objectSpread2({}, record), {}, {
        map_row_key: recordKey,
        children: void 0,
        map_row_parentKey
      });
      delete newRecord.children;
      if (!map_row_parentKey) {
        delete newRecord.map_row_parentKey;
      }
      kvMap.set(recordKey, newRecord);
    });
  }
  if (action === "top") {
    kvMap.set(key, _objectSpread2(_objectSpread2({}, kvMap.get(key)), row));
  }
  dig(data);
  if (action === "update") {
    kvMap.set(key, _objectSpread2(_objectSpread2({}, kvMap.get(key)), row));
  }
  if (action === "delete") {
    kvMap.delete(key);
  }
  var fill = function fill2(map) {
    var kvArrayMap = /* @__PURE__ */ new Map();
    var kvSource = [];
    var fillNewRecord = function fillNewRecord2() {
      var fillChildren = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
      map.forEach(function(value) {
        if (value.map_row_parentKey && !value.map_row_key) {
          var map_row_parentKey = value.map_row_parentKey, rest = _objectWithoutProperties(value, _excluded4);
          if (!kvArrayMap.has(map_row_parentKey)) {
            kvArrayMap.set(map_row_parentKey, []);
          }
          if (fillChildren) {
            var _kvArrayMap$get;
            (_kvArrayMap$get = kvArrayMap.get(map_row_parentKey)) === null || _kvArrayMap$get === void 0 || _kvArrayMap$get.push(rest);
          }
        }
      });
    };
    fillNewRecord(action === "top");
    map.forEach(function(value) {
      if (value.map_row_parentKey && value.map_row_key) {
        var _kvArrayMap$get2;
        var map_row_parentKey = value.map_row_parentKey, map_row_key = value.map_row_key, rest = _objectWithoutProperties(value, _excluded23);
        if (kvArrayMap.has(map_row_key)) {
          rest[childrenColumnName] = kvArrayMap.get(map_row_key);
        }
        if (!kvArrayMap.has(map_row_parentKey)) {
          kvArrayMap.set(map_row_parentKey, []);
        }
        (_kvArrayMap$get2 = kvArrayMap.get(map_row_parentKey)) === null || _kvArrayMap$get2 === void 0 || _kvArrayMap$get2.push(rest);
      }
    });
    fillNewRecord(action === "update");
    map.forEach(function(value) {
      if (!value.map_row_parentKey) {
        var map_row_key = value.map_row_key, rest = _objectWithoutProperties(value, _excluded32);
        if (map_row_key && kvArrayMap.has(map_row_key)) {
          var item = _objectSpread2(_objectSpread2({}, rest), {}, _defineProperty({}, childrenColumnName, kvArrayMap.get(map_row_key)));
          kvSource.push(item);
          return;
        }
        kvSource.push(rest);
      }
    });
    return kvSource;
  };
  return fill(kvMap);
}
function SaveEditableAction(_ref, ref) {
  var recordKey = _ref.recordKey, onSave = _ref.onSave, row = _ref.row, children = _ref.children, newLineConfig = _ref.newLineConfig, editorType = _ref.editorType, tableName = _ref.tableName;
  var context = (0, import_react24.useContext)(ProFormContext);
  var form = form_default.useFormInstance();
  var _useMountMergeState = useMergedState(false), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), loading = _useMountMergeState2[0], setLoading = _useMountMergeState2[1];
  var save = useRefFunction(_asyncToGenerator(_regeneratorRuntime().mark(function _callee() {
    var _context$getFieldForm, isMapEditor, namePath, fields, _recordKey, recordKeyPath, curValue, data, res;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          isMapEditor = editorType === "Map";
          namePath = [tableName, Array.isArray(recordKey) ? recordKey[0] : recordKey].map(function(key) {
            return key === null || key === void 0 ? void 0 : key.toString();
          }).flat(1).filter(Boolean);
          setLoading(true);
          _context.next = 6;
          return form.validateFields(namePath, {
            recursive: true
          });
        case 6:
          fields = (context === null || context === void 0 || (_context$getFieldForm = context.getFieldFormatValue) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, namePath)) || form.getFieldValue(namePath);
          if (Array.isArray(recordKey) && recordKey.length > 1) {
            _recordKey = _toArray(recordKey), recordKeyPath = _recordKey.slice(1);
            curValue = get(fields, recordKeyPath);
            set(fields, recordKeyPath, curValue);
          }
          data = isMapEditor ? set({}, namePath, fields) : fields;
          _context.next = 11;
          return onSave === null || onSave === void 0 ? void 0 : onSave(
            recordKey,
            // 如果是 map 模式，fields 就是一个值，所以需要set 到对象中
            // 数据模式 fields 是一个对象，所以不需要
            merge3({}, row, data),
            row,
            newLineConfig
          );
        case 11:
          res = _context.sent;
          setLoading(false);
          return _context.abrupt("return", res);
        case 16:
          _context.prev = 16;
          _context.t0 = _context["catch"](0);
          console.log(_context.t0);
          setLoading(false);
          throw _context.t0;
        case 21:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[0, 16]]);
  })));
  (0, import_react24.useImperativeHandle)(ref, function() {
    return {
      save
    };
  }, [save]);
  return (0, import_jsx_runtime20.jsxs)("a", {
    onClick: function() {
      var _ref3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(e) {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              e.stopPropagation();
              e.preventDefault();
              _context2.prev = 2;
              _context2.next = 5;
              return save();
            case 5:
              _context2.next = 9;
              break;
            case 7:
              _context2.prev = 7;
              _context2.t0 = _context2["catch"](2);
            case 9:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[2, 7]]);
      }));
      return function(_x) {
        return _ref3.apply(this, arguments);
      };
    }(),
    children: [loading ? (0, import_jsx_runtime19.jsx)(LoadingOutlined_default, {
      style: {
        marginInlineEnd: 8
      }
    }) : null, children || "保存"]
  }, "save");
}
var DeleteEditableAction = function DeleteEditableAction2(_ref4) {
  var recordKey = _ref4.recordKey, onDelete = _ref4.onDelete, preEditRowRef = _ref4.preEditRowRef, row = _ref4.row, children = _ref4.children, deletePopconfirmMessage = _ref4.deletePopconfirmMessage;
  var _useMountMergeState3 = useMergedState(function() {
    return false;
  }), _useMountMergeState4 = _slicedToArray(_useMountMergeState3, 2), loading = _useMountMergeState4[0], setLoading = _useMountMergeState4[1];
  var _onConfirm = useRefFunction(_asyncToGenerator(_regeneratorRuntime().mark(function _callee3() {
    var res;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.prev = 0;
          setLoading(true);
          _context3.next = 4;
          return onDelete === null || onDelete === void 0 ? void 0 : onDelete(recordKey, row);
        case 4:
          res = _context3.sent;
          setLoading(false);
          return _context3.abrupt("return", res);
        case 9:
          _context3.prev = 9;
          _context3.t0 = _context3["catch"](0);
          console.log(_context3.t0);
          setLoading(false);
          return _context3.abrupt("return", null);
        case 14:
          _context3.prev = 14;
          if (preEditRowRef) preEditRowRef.current = null;
          return _context3.finish(14);
        case 17:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[0, 9, 14, 17]]);
  })));
  return children !== false ? (0, import_jsx_runtime19.jsx)(popconfirm_default, {
    title: deletePopconfirmMessage,
    onConfirm: function onConfirm() {
      return _onConfirm();
    },
    children: (0, import_jsx_runtime20.jsxs)("a", {
      children: [loading ? (0, import_jsx_runtime19.jsx)(LoadingOutlined_default, {
        style: {
          marginInlineEnd: 8
        }
      }) : null, children || "删除"]
    })
  }, "delete") : null;
};
var CancelEditableAction = function CancelEditableAction2(props) {
  var recordKey = props.recordKey, tableName = props.tableName, newLineConfig = props.newLineConfig, editorType = props.editorType, onCancel = props.onCancel, cancelEditable = props.cancelEditable, row = props.row, cancelText = props.cancelText, preEditRowRef = props.preEditRowRef;
  var context = (0, import_react24.useContext)(ProFormContext);
  var form = form_default.useFormInstance();
  return (0, import_jsx_runtime19.jsx)("a", {
    onClick: function() {
      var _ref6 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(e) {
        var _context$getFieldForm2;
        var isMapEditor, namePath, fields, record, res, _props$onDelete;
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              e.stopPropagation();
              e.preventDefault();
              isMapEditor = editorType === "Map";
              namePath = [tableName, recordKey].flat(1).filter(Boolean);
              fields = (context === null || context === void 0 || (_context$getFieldForm2 = context.getFieldFormatValue) === null || _context$getFieldForm2 === void 0 ? void 0 : _context$getFieldForm2.call(context, namePath)) || (form === null || form === void 0 ? void 0 : form.getFieldValue(namePath));
              record = isMapEditor ? set({}, namePath, fields) : fields;
              _context4.next = 8;
              return onCancel === null || onCancel === void 0 ? void 0 : onCancel(recordKey, record, row, newLineConfig);
            case 8:
              res = _context4.sent;
              _context4.next = 11;
              return cancelEditable(recordKey);
            case 11:
              if (!((preEditRowRef === null || preEditRowRef === void 0 ? void 0 : preEditRowRef.current) !== null)) {
                _context4.next = 15;
                break;
              }
              form.setFieldsValue(set({}, namePath, preEditRowRef === null || preEditRowRef === void 0 ? void 0 : preEditRowRef.current));
              _context4.next = 17;
              break;
            case 15:
              _context4.next = 17;
              return (_props$onDelete = props.onDelete) === null || _props$onDelete === void 0 ? void 0 : _props$onDelete.call(props, recordKey, row);
            case 17:
              if (preEditRowRef) preEditRowRef.current = null;
              return _context4.abrupt("return", res);
            case 19:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      }));
      return function(_x2) {
        return _ref6.apply(this, arguments);
      };
    }(),
    children: cancelText || "取消"
  }, "cancel");
};
function defaultActionRender(row, config) {
  var recordKey = config.recordKey, newLineConfig = config.newLineConfig, saveText = config.saveText, deleteText = config.deleteText;
  var SaveEditableActionRef = (0, import_react24.forwardRef)(SaveEditableAction);
  var saveRef = (0, import_react24.createRef)();
  return {
    save: (0, import_jsx_runtime19.jsx)(SaveEditableActionRef, _objectSpread2(_objectSpread2({}, config), {}, {
      row,
      ref: saveRef,
      children: saveText
    }), "save" + recordKey),
    saveRef,
    delete: (newLineConfig === null || newLineConfig === void 0 ? void 0 : newLineConfig.options.recordKey) !== recordKey ? (0, import_jsx_runtime19.jsx)(DeleteEditableAction, _objectSpread2(_objectSpread2({}, config), {}, {
      row,
      children: deleteText
    }), "delete" + recordKey) : void 0,
    cancel: (0, import_jsx_runtime19.jsx)(CancelEditableAction, _objectSpread2(_objectSpread2({}, config), {}, {
      row
    }), "cancel" + recordKey)
  };
}
function useEditableArray(props) {
  var intl = useIntl();
  var preEditRowRef = (0, import_react24.useRef)(null);
  var _useState = (0, import_react24.useState)(void 0), _useState2 = _slicedToArray(_useState, 2), newLineRecordCache = _useState2[0], setNewLineRecordCache = _useState2[1];
  var resetMapRef = function resetMapRef2() {
    var map = /* @__PURE__ */ new Map();
    var loopGetKey = function loopGetKey2(dataSource, parentKey) {
      dataSource === null || dataSource === void 0 || dataSource.forEach(function(record, index2) {
        var _recordKeyToString2;
        var key = parentKey === void 0 || parentKey === null ? index2.toString() : parentKey + "_" + index2.toString();
        map.set(key, recordKeyToString(props.getRowKey(record, -1)));
        map.set((_recordKeyToString2 = recordKeyToString(props.getRowKey(record, -1))) === null || _recordKeyToString2 === void 0 ? void 0 : _recordKeyToString2.toString(), key);
        if (props.childrenColumnName && record !== null && record !== void 0 && record[props.childrenColumnName]) {
          loopGetKey2(record[props.childrenColumnName], key);
        }
      });
    };
    loopGetKey(props.dataSource);
    return map;
  };
  var initDataSourceKeyIndexMap = (0, import_react24.useMemo)(function() {
    return resetMapRef();
  }, []);
  var dataSourceKeyIndexMapRef = (0, import_react24.useRef)(initDataSourceKeyIndexMap);
  var newLineRecordRef = (0, import_react24.useRef)(void 0);
  useDeepCompareEffectDebounce(function() {
    dataSourceKeyIndexMapRef.current = resetMapRef();
  }, [props.dataSource]);
  newLineRecordRef.current = newLineRecordCache;
  var editableType = props.type || "single";
  var _useLazyKVMap = useLazyKVMap_default(props.dataSource, "children", props.getRowKey), _useLazyKVMap2 = _slicedToArray(_useLazyKVMap, 1), getRecordByKey = _useLazyKVMap2[0];
  var _useMergedState = useMergedState([], {
    value: props.editableKeys,
    onChange: props.onChange ? function(keys) {
      var _props$onChange, _keys$filter, _keys$map$filter;
      props === null || props === void 0 || (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call(
        props,
        // 计算编辑的key
        (_keys$filter = keys === null || keys === void 0 ? void 0 : keys.filter(function(key) {
          return key !== void 0;
        })) !== null && _keys$filter !== void 0 ? _keys$filter : [],
        // 计算编辑的行
        (_keys$map$filter = keys === null || keys === void 0 ? void 0 : keys.map(function(key) {
          return getRecordByKey(key);
        }).filter(function(key) {
          return key !== void 0;
        })) !== null && _keys$map$filter !== void 0 ? _keys$map$filter : []
      );
    } : void 0
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), editableKeys = _useMergedState2[0], setEditableRowKeys = _useMergedState2[1];
  var editableKeysSet = (0, import_react24.useMemo)(function() {
    var keys = editableType === "single" ? editableKeys === null || editableKeys === void 0 ? void 0 : editableKeys.slice(0, 1) : editableKeys;
    return new Set(keys);
  }, [(editableKeys || []).join(","), editableType]);
  var editableKeysRef = usePrevious(editableKeys);
  var isEditable = useRefFunction(function(row) {
    var _props$getRowKey, _props$getRowKey$toSt, _props$getRowKey2, _props$getRowKey2$toS;
    var recordKeyOrIndex = (_props$getRowKey = props.getRowKey(row, row.index)) === null || _props$getRowKey === void 0 || (_props$getRowKey$toSt = _props$getRowKey.toString) === null || _props$getRowKey$toSt === void 0 ? void 0 : _props$getRowKey$toSt.call(_props$getRowKey);
    var recordKey = (_props$getRowKey2 = props.getRowKey(row, -1)) === null || _props$getRowKey2 === void 0 || (_props$getRowKey2$toS = _props$getRowKey2.toString) === null || _props$getRowKey2$toS === void 0 ? void 0 : _props$getRowKey2$toS.call(_props$getRowKey2);
    var stringEditableKeys = editableKeys === null || editableKeys === void 0 ? void 0 : editableKeys.map(function(key) {
      return key === null || key === void 0 ? void 0 : key.toString();
    });
    var stringEditableKeysRef = (editableKeysRef === null || editableKeysRef === void 0 ? void 0 : editableKeysRef.map(function(key) {
      return key === null || key === void 0 ? void 0 : key.toString();
    })) || [];
    var preIsEditable = props.tableName && !!(stringEditableKeysRef !== null && stringEditableKeysRef !== void 0 && stringEditableKeysRef.includes(recordKey)) || !!(stringEditableKeysRef !== null && stringEditableKeysRef !== void 0 && stringEditableKeysRef.includes(recordKeyOrIndex));
    return {
      recordKey,
      isEditable: props.tableName && (stringEditableKeys === null || stringEditableKeys === void 0 ? void 0 : stringEditableKeys.includes(recordKey)) || (stringEditableKeys === null || stringEditableKeys === void 0 ? void 0 : stringEditableKeys.includes(recordKeyOrIndex)),
      preIsEditable
    };
  });
  var startEditable = useRefFunction(function(recordKey, record) {
    var _ref7, _props$dataSource;
    if (editableKeysSet.size > 0 && editableType === "single" && props.onlyOneLineEditorAlertMessage !== false) {
      warning2(props.onlyOneLineEditorAlertMessage || intl.getMessage("editableTable.onlyOneLineEditor", "只能同时编辑一行"));
      return false;
    }
    editableKeysSet.add(recordKey);
    setEditableRowKeys(Array.from(editableKeysSet));
    preEditRowRef.current = (_ref7 = record !== null && record !== void 0 ? record : (_props$dataSource = props.dataSource) === null || _props$dataSource === void 0 ? void 0 : _props$dataSource.find(function(recordData, index2) {
      return props.getRowKey(recordData, index2) === recordKey;
    })) !== null && _ref7 !== void 0 ? _ref7 : null;
    return true;
  });
  var cancelEditable = useRefFunction(function() {
    var _ref8 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee5(recordKey, needReTry) {
      var relayKey, key;
      return _regeneratorRuntime().wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            relayKey = recordKeyToString(recordKey).toString();
            key = dataSourceKeyIndexMapRef.current.get(relayKey);
            if (!(!editableKeysSet.has(relayKey) && key && (needReTry !== null && needReTry !== void 0 ? needReTry : true) && props.tableName)) {
              _context5.next = 5;
              break;
            }
            cancelEditable(key, false);
            return _context5.abrupt("return");
          case 5:
            if (newLineRecordCache && newLineRecordCache.options.recordKey === recordKey) {
              setNewLineRecordCache(void 0);
            }
            editableKeysSet.delete(relayKey);
            editableKeysSet.delete(recordKeyToString(recordKey));
            setEditableRowKeys(Array.from(editableKeysSet));
            return _context5.abrupt("return", true);
          case 10:
          case "end":
            return _context5.stop();
        }
      }, _callee5);
    }));
    return function(_x3, _x4) {
      return _ref8.apply(this, arguments);
    };
  }());
  var propsOnValuesChange = useDebounceFn(_asyncToGenerator(_regeneratorRuntime().mark(function _callee6() {
    var _props$onValuesChange;
    var _len, rest, _key, _args6 = arguments;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          for (_len = _args6.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {
            rest[_key] = _args6[_key];
          }
          (_props$onValuesChange = props.onValuesChange) === null || _props$onValuesChange === void 0 || _props$onValuesChange.call.apply(_props$onValuesChange, [props].concat(rest));
        case 2:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  })), 64);
  var onValuesChange = useRefFunction(function(value, values) {
    var _Object$keys$pop;
    if (!props.onValuesChange) {
      return;
    }
    var dataSource = props.dataSource;
    editableKeys === null || editableKeys === void 0 || editableKeys.forEach(function(eachRecordKey) {
      if ((newLineRecordCache === null || newLineRecordCache === void 0 ? void 0 : newLineRecordCache.options.recordKey) === eachRecordKey) return;
      var recordKey2 = eachRecordKey.toString();
      var editRow2 = get(values, [props.tableName || "", recordKey2].flat(1).filter(function(key) {
        return key || key === 0;
      }));
      if (!editRow2) return;
      dataSource = editableRowByKey({
        data: dataSource,
        getRowKey: props.getRowKey,
        row: editRow2,
        key: recordKey2,
        childrenColumnName: props.childrenColumnName || "children"
      }, "update");
    });
    var relayValue = value;
    var recordKey = (_Object$keys$pop = Object.keys(relayValue || {}).pop()) === null || _Object$keys$pop === void 0 ? void 0 : _Object$keys$pop.toString();
    var newLineRecordData = _objectSpread2(_objectSpread2({}, newLineRecordCache === null || newLineRecordCache === void 0 ? void 0 : newLineRecordCache.defaultValue), get(values, [props.tableName || "", recordKey.toString()].flat(1).filter(function(key) {
      return key || key === 0;
    })));
    var editRow = dataSourceKeyIndexMapRef.current.has(recordKeyToString(recordKey)) ? dataSource.find(function(item, index2) {
      var _props$getRowKey3;
      var key = (_props$getRowKey3 = props.getRowKey(item, index2)) === null || _props$getRowKey3 === void 0 ? void 0 : _props$getRowKey3.toString();
      return key === recordKey;
    }) : newLineRecordData;
    propsOnValuesChange.run(editRow || newLineRecordData, dataSource);
  });
  var saveRefsMap = (0, import_react24.useRef)(/* @__PURE__ */ new Map());
  (0, import_react24.useEffect)(function() {
    saveRefsMap.current.forEach(function(ref, key) {
      if (!editableKeysSet.has(key)) {
        saveRefsMap.current.delete(key);
      }
    });
  }, [saveRefsMap, editableKeysSet]);
  var saveEditable = useRefFunction(function() {
    var _ref10 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee7(recordKey, needReTry) {
      var relayKey, key, saveRef, _saveRef$current;
      return _regeneratorRuntime().wrap(function _callee7$(_context7) {
        while (1) switch (_context7.prev = _context7.next) {
          case 0:
            relayKey = recordKeyToString(recordKey);
            key = dataSourceKeyIndexMapRef.current.get(recordKey.toString());
            if (!(!editableKeysSet.has(relayKey) && key && (needReTry !== null && needReTry !== void 0 ? needReTry : true) && props.tableName)) {
              _context7.next = 6;
              break;
            }
            _context7.next = 5;
            return saveEditable(key, false);
          case 5:
            return _context7.abrupt("return", _context7.sent);
          case 6:
            saveRef = saveRefsMap.current.get(relayKey) || saveRefsMap.current.get(relayKey.toString());
            _context7.prev = 7;
            _context7.next = 10;
            return saveRef === null || saveRef === void 0 || (_saveRef$current = saveRef.current) === null || _saveRef$current === void 0 ? void 0 : _saveRef$current.save();
          case 10:
            _context7.next = 15;
            break;
          case 12:
            _context7.prev = 12;
            _context7.t0 = _context7["catch"](7);
            return _context7.abrupt("return", false);
          case 15:
            editableKeysSet.delete(relayKey);
            editableKeysSet.delete(relayKey.toString());
            setEditableRowKeys(Array.from(editableKeysSet));
            return _context7.abrupt("return", true);
          case 19:
          case "end":
            return _context7.stop();
        }
      }, _callee7, null, [[7, 12]]);
    }));
    return function(_x5, _x6) {
      return _ref10.apply(this, arguments);
    };
  }());
  var addEditRecord = useRefFunction(function(row, options) {
    if (options !== null && options !== void 0 && options.parentKey && !dataSourceKeyIndexMapRef.current.has(recordKeyToString(options === null || options === void 0 ? void 0 : options.parentKey).toString())) {
      console.warn("can't find record by key", options === null || options === void 0 ? void 0 : options.parentKey);
      return false;
    }
    if (newLineRecordRef.current && props.onlyAddOneLineAlertMessage !== false) {
      warning2(props.onlyAddOneLineAlertMessage || intl.getMessage("editableTable.onlyAddOneLine", "只能新增一行"));
      return false;
    }
    if (editableKeysSet.size > 0 && editableType === "single" && props.onlyOneLineEditorAlertMessage !== false) {
      warning2(props.onlyOneLineEditorAlertMessage || intl.getMessage("editableTable.onlyOneLineEditor", "只能同时编辑一行"));
      return false;
    }
    var recordKey = props.getRowKey(row, -1);
    if (!recordKey && recordKey !== 0) {
      noteOnce(!!recordKey, "请设置 recordCreatorProps.record 并返回一个唯一的key  \n  https://procomponents.ant.design/components/editable-table#editable-%E6%96%B0%E5%BB%BA%E8%A1%8C");
      throw new Error("请设置 recordCreatorProps.record 并返回一个唯一的key");
    }
    editableKeysSet.add(recordKey);
    setEditableRowKeys(Array.from(editableKeysSet));
    if ((options === null || options === void 0 ? void 0 : options.newRecordType) === "dataSource" || props.tableName) {
      var _recordKeyToString3;
      var actionProps = {
        data: props.dataSource,
        getRowKey: props.getRowKey,
        row: _objectSpread2(_objectSpread2({}, row), {}, {
          map_row_parentKey: options !== null && options !== void 0 && options.parentKey ? (_recordKeyToString3 = recordKeyToString(options === null || options === void 0 ? void 0 : options.parentKey)) === null || _recordKeyToString3 === void 0 ? void 0 : _recordKeyToString3.toString() : void 0
        }),
        key: recordKey,
        childrenColumnName: props.childrenColumnName || "children"
      };
      props.setDataSource(editableRowByKey(actionProps, (options === null || options === void 0 ? void 0 : options.position) === "top" ? "top" : "update"));
    } else {
      setNewLineRecordCache({
        defaultValue: row,
        options: _objectSpread2(_objectSpread2({}, options), {}, {
          recordKey
        })
      });
    }
    return true;
  });
  var saveText = (props === null || props === void 0 ? void 0 : props.saveText) || intl.getMessage("editableTable.action.save", "保存");
  var deleteText = (props === null || props === void 0 ? void 0 : props.deleteText) || intl.getMessage("editableTable.action.delete", "删除");
  var cancelText = (props === null || props === void 0 ? void 0 : props.cancelText) || intl.getMessage("editableTable.action.cancel", "取消");
  var actionSaveRef = useRefFunction(function() {
    var _ref11 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee8(recordKey, editRow, originRow, newLine) {
      var _props$onSave, _recordKeyToString4, _options$parentKey;
      var res, _ref12, options, actionProps;
      return _regeneratorRuntime().wrap(function _callee8$(_context8) {
        while (1) switch (_context8.prev = _context8.next) {
          case 0:
            _context8.next = 2;
            return props === null || props === void 0 || (_props$onSave = props.onSave) === null || _props$onSave === void 0 ? void 0 : _props$onSave.call(props, recordKey, editRow, originRow, newLine);
          case 2:
            res = _context8.sent;
            _context8.next = 5;
            return cancelEditable(recordKey);
          case 5:
            _ref12 = newLine || newLineRecordRef.current || {}, options = _ref12.options;
            if (!(!(options !== null && options !== void 0 && options.parentKey) && (options === null || options === void 0 ? void 0 : options.recordKey) === recordKey)) {
              _context8.next = 9;
              break;
            }
            if ((options === null || options === void 0 ? void 0 : options.position) === "top") {
              props.setDataSource([editRow].concat(_toConsumableArray(props.dataSource)));
            } else {
              props.setDataSource([].concat(_toConsumableArray(props.dataSource), [editRow]));
            }
            return _context8.abrupt("return", res);
          case 9:
            actionProps = {
              data: props.dataSource,
              getRowKey: props.getRowKey,
              row: options ? _objectSpread2(_objectSpread2({}, editRow), {}, {
                map_row_parentKey: (_recordKeyToString4 = recordKeyToString((_options$parentKey = options === null || options === void 0 ? void 0 : options.parentKey) !== null && _options$parentKey !== void 0 ? _options$parentKey : "")) === null || _recordKeyToString4 === void 0 ? void 0 : _recordKeyToString4.toString()
              }) : editRow,
              key: recordKey,
              childrenColumnName: props.childrenColumnName || "children"
            };
            props.setDataSource(editableRowByKey(actionProps, (options === null || options === void 0 ? void 0 : options.position) === "top" ? "top" : "update"));
            _context8.next = 13;
            return cancelEditable(recordKey);
          case 13:
            return _context8.abrupt("return", res);
          case 14:
          case "end":
            return _context8.stop();
        }
      }, _callee8);
    }));
    return function(_x7, _x8, _x9, _x10) {
      return _ref11.apply(this, arguments);
    };
  }());
  var actionDeleteRef = useRefFunction(function() {
    var _ref13 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee9(recordKey, editRow) {
      var _props$onDelete2;
      var actionProps, res;
      return _regeneratorRuntime().wrap(function _callee9$(_context9) {
        while (1) switch (_context9.prev = _context9.next) {
          case 0:
            actionProps = {
              data: props.dataSource,
              getRowKey: props.getRowKey,
              row: editRow,
              key: recordKey,
              childrenColumnName: props.childrenColumnName || "children"
            };
            _context9.next = 3;
            return props === null || props === void 0 || (_props$onDelete2 = props.onDelete) === null || _props$onDelete2 === void 0 ? void 0 : _props$onDelete2.call(props, recordKey, editRow);
          case 3:
            res = _context9.sent;
            _context9.next = 6;
            return cancelEditable(recordKey, false);
          case 6:
            props.setDataSource(editableRowByKey(actionProps, "delete"));
            return _context9.abrupt("return", res);
          case 8:
          case "end":
            return _context9.stop();
        }
      }, _callee9);
    }));
    return function(_x11, _x12) {
      return _ref13.apply(this, arguments);
    };
  }());
  var actionCancelRef = useRefFunction(function() {
    var _ref14 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee10(recordKey, editRow, originRow, newLine) {
      var _props$onCancel;
      var res;
      return _regeneratorRuntime().wrap(function _callee10$(_context10) {
        while (1) switch (_context10.prev = _context10.next) {
          case 0:
            _context10.next = 2;
            return props === null || props === void 0 || (_props$onCancel = props.onCancel) === null || _props$onCancel === void 0 ? void 0 : _props$onCancel.call(props, recordKey, editRow, originRow, newLine);
          case 2:
            res = _context10.sent;
            return _context10.abrupt("return", res);
          case 4:
          case "end":
            return _context10.stop();
        }
      }, _callee10);
    }));
    return function(_x13, _x14, _x15, _x16) {
      return _ref14.apply(this, arguments);
    };
  }());
  var existCustomActionRender = props.actionRender && typeof props.actionRender === "function";
  var customActionRender = existCustomActionRender ? props.actionRender : function() {
  };
  var customActionRenderRef = useRefFunction(customActionRender);
  var actionRender = function actionRender2(row) {
    var key = props.getRowKey(row, row.index);
    var config = {
      saveText,
      cancelText,
      deleteText,
      addEditRecord,
      recordKey: key,
      cancelEditable,
      index: row.index,
      tableName: props.tableName,
      newLineConfig: newLineRecordCache,
      onCancel: actionCancelRef,
      onDelete: actionDeleteRef,
      onSave: actionSaveRef,
      editableKeys,
      setEditableRowKeys,
      preEditRowRef,
      deletePopconfirmMessage: props.deletePopconfirmMessage || "".concat(intl.getMessage("deleteThisLine", "删除此项"), "?")
    };
    var renderResult = defaultActionRender(row, config);
    if (props.tableName) {
      saveRefsMap.current.set(dataSourceKeyIndexMapRef.current.get(recordKeyToString(key)) || recordKeyToString(key), renderResult.saveRef);
    } else {
      saveRefsMap.current.set(recordKeyToString(key), renderResult.saveRef);
    }
    if (existCustomActionRender) return customActionRenderRef(row, config, {
      save: renderResult.save,
      delete: renderResult.delete,
      cancel: renderResult.cancel
    });
    return [renderResult.save, renderResult.delete, renderResult.cancel];
  };
  return {
    editableKeys,
    setEditableRowKeys,
    isEditable,
    actionRender,
    startEditable,
    cancelEditable,
    addEditRecord,
    saveEditable,
    newLineRecord: newLineRecordCache,
    preEditableKeys: editableKeysRef,
    onValuesChange,
    getRealIndex: props.getRealIndex
  };
}

// node_modules/@ant-design/pro-utils/es/useEditableMap/index.js
var import_react25 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/useMediaQuery/index.js
var import_react27 = __toESM(require_react());

// node_modules/@ant-design/pro-utils/es/useMediaQuery/query.js
var import_react26 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/CheckCard/index.js
var import_classnames7 = __toESM(require_classnames());
var import_react30 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Actions/index.js
var import_classnames5 = __toESM(require_classnames());
var import_react28 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Actions/style.js
var genActionsStyle = function genActionsStyle2(token2) {
  var componentCls = token2.componentCls, antCls = token2.antCls;
  return _defineProperty({}, "".concat(componentCls, "-actions"), _defineProperty(_defineProperty({
    marginBlock: 0,
    marginInline: 0,
    paddingBlock: 0,
    paddingInline: 0,
    listStyle: "none",
    display: "flex",
    gap: token2.marginXS,
    background: token2.colorBgContainer,
    borderBlockStart: "".concat(token2.lineWidth, "px ").concat(token2.lineType, " ").concat(token2.colorSplit),
    minHeight: 42
  }, "& > *", {
    alignItems: "center",
    justifyContent: "center",
    flex: 1,
    display: "flex",
    cursor: "pointer",
    color: token2.colorTextSecondary,
    transition: "color 0.3s",
    "&:hover": {
      color: token2.colorPrimaryHover
    }
  }), "& > li > div", {
    flex: 1,
    width: "100%",
    marginBlock: token2.marginSM,
    marginInline: 0,
    color: token2.colorTextSecondary,
    textAlign: "center",
    a: {
      color: token2.colorTextSecondary,
      transition: "color 0.3s",
      "&:hover": {
        color: token2.colorPrimaryHover
      }
    },
    div: _defineProperty(_defineProperty({
      position: "relative",
      display: "block",
      minWidth: 32,
      fontSize: token2.fontSize,
      lineHeight: token2.lineHeight,
      cursor: "pointer",
      "&:hover": {
        color: token2.colorPrimaryHover,
        transition: "color 0.3s"
      }
    }, "a:not(".concat(antCls, "-btn),\n            > .anticon"), {
      display: "inline-block",
      width: "100%",
      color: token2.colorTextSecondary,
      lineHeight: "22px",
      transition: "color 0.3s",
      "&:hover": {
        color: token2.colorPrimaryHover
      }
    }), ".anticon", {
      fontSize: token2.cardActionIconSize,
      lineHeight: "22px"
    }),
    "&:not(:last-child)": {
      borderInlineEnd: "".concat(token2.lineWidth, "px ").concat(token2.lineType, " ").concat(token2.colorSplit)
    }
  }));
};
function useStyle7(prefixCls) {
  return useStyle("ProCardActions", function(token2) {
    var proCardActionsToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls),
      cardActionIconSize: 16
    });
    return [genActionsStyle(proCardActionsToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/Actions/index.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var ProCardActions = function ProCardActions2(props) {
  var actions = props.actions, prefixCls = props.prefixCls;
  var _useStyle = useStyle7(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  if (Array.isArray(actions) && actions !== null && actions !== void 0 && actions.length) {
    return wrapSSR((0, import_jsx_runtime21.jsx)("ul", {
      className: (0, import_classnames5.default)("".concat(prefixCls, "-actions"), hashId),
      children: actions.map(function(action, index2) {
        return (
          // eslint-disable-next-line react/no-array-index-key
          (0, import_jsx_runtime21.jsx)("li", {
            style: {
              width: "".concat(100 / actions.length, "%"),
              padding: 0,
              margin: 0
            },
            className: (0, import_classnames5.default)("".concat(prefixCls, "-actions-item"), hashId),
            children: action
          }, "action-".concat(index2))
        );
      })
    }));
  }
  return wrapSSR((0, import_jsx_runtime21.jsx)("ul", {
    className: (0, import_classnames5.default)("".concat(prefixCls, "-actions"), hashId),
    children: actions
  }));
};
var Actions_default = ProCardActions;

// node_modules/@ant-design/pro-card/es/components/CheckCard/Group.js
var import_classnames6 = __toESM(require_classnames());
var import_react29 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/CheckCard/style.js
var proCheckCardActive = function proCheckCardActive2(token2) {
  return {
    backgroundColor: token2.colorPrimaryBg,
    borderColor: token2.colorPrimary
  };
};
var proCheckCardDisabled = function proCheckCardDisabled2(token2) {
  return _defineProperty({
    backgroundColor: token2.colorBgContainerDisabled,
    borderColor: token2.colorBorder,
    cursor: "not-allowed"
  }, token2.componentCls, {
    "&-description": {
      color: token2.colorTextDisabled
    },
    "&-title": {
      color: token2.colorTextDisabled
    },
    "&-avatar": {
      opacity: "0.25"
    }
  });
};
var cardLoading = new Keyframes_default("card-loading", {
  "0%": {
    backgroundPosition: "0 50%"
  },
  "50%": {
    backgroundPosition: "100% 50%"
  },
  "100%": {
    backgroundPosition: "0 50%"
  }
});
var genProStyle11 = function genProStyle12(token2) {
  var _token$componentCls;
  return _defineProperty({}, token2.componentCls, (_token$componentCls = {
    position: "relative",
    display: "inline-block",
    width: "320px",
    marginInlineEnd: "16px",
    marginBlockEnd: "16px",
    color: token2.colorText,
    fontSize: token2.fontSize,
    lineHeight: token2.lineHeight,
    verticalAlign: "top",
    backgroundColor: token2.colorBgContainer,
    borderRadius: token2.borderRadius,
    overflow: "auto",
    cursor: "pointer",
    transition: "all 0.3s",
    "&:after": {
      position: "absolute",
      insetBlockStart: 2,
      insetInlineEnd: 2,
      width: 0,
      height: 0,
      opacity: 0,
      transition: "all 0.3s " + token2.motionEaseInOut,
      borderBlockEnd: "".concat(token2.borderRadius + 4, "px  solid transparent"),
      borderInlineStart: "".concat(token2.borderRadius + 4, "px  solid transparent"),
      borderStartEndRadius: "".concat(token2.borderRadius, "px"),
      content: "''"
    },
    "&:last-child": {
      marginInlineEnd: 0
    },
    "& + &": {
      marginInlineStart: "0 !important"
    },
    "&-bordered": {
      border: "".concat(token2.lineWidth, "px solid ").concat(token2.colorBorder)
    },
    "&-group": {
      display: "inline-block",
      "&-sub-check-card": {
        display: "flex",
        flexDirection: "column",
        gap: "8px",
        "&-title": {
          cursor: "pointer",
          paddingBlock: token2.paddingXS,
          display: "flex",
          gap: 4,
          alignItems: "center"
        },
        "&-panel": {
          visibility: "initial",
          transition: "all 0.3s",
          opacity: 1,
          "&-collapse": {
            display: "none",
            visibility: "hidden",
            opacity: 0
          }
        }
      }
    }
  }, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_token$componentCls, "".concat(token2.componentCls, "-loading"), {
    overflow: "hidden",
    userSelect: "none",
    "&-content": {
      padding: token2.paddingMD
    }
  }), "&:focus", proCheckCardActive(token2)), "&-checked", _objectSpread2(_objectSpread2({}, proCheckCardActive(token2)), {}, {
    "&:after": {
      opacity: 1,
      border: "".concat(token2.borderRadius + 4, "px solid ").concat(token2.colorPrimary),
      borderBlockEnd: "".concat(token2.borderRadius + 4, "px  solid transparent"),
      borderInlineStart: "".concat(token2.borderRadius + 4, "px  solid transparent"),
      borderStartEndRadius: "".concat(token2.borderRadius, "px")
    }
  })), "&-disabled", proCheckCardDisabled(token2)), "&[disabled]", proCheckCardDisabled(token2)), "&-checked&-disabled", {
    "&:after": {
      position: "absolute",
      insetBlockStart: 2,
      insetInlineEnd: 2,
      width: 0,
      height: 0,
      border: "".concat(token2.borderRadius + 4, "px solid ").concat(token2.colorTextDisabled),
      borderBlockEnd: "".concat(token2.borderRadius + 4, "px  solid transparent"),
      borderInlineStart: "".concat(token2.borderRadius + 4, "px  solid transparent"),
      borderStartEndRadius: "".concat(token2.borderRadius, "px"),
      content: "''"
    }
  }), "&-lg", {
    width: 440
  }), "&-sm", {
    width: 212
  }), "&-cover", {
    paddingInline: token2.paddingXXS,
    paddingBlock: token2.paddingXXS,
    img: {
      width: "100%",
      height: "100%",
      overflow: "hidden",
      borderRadius: token2.borderRadius
    }
  }), "&-content", {
    display: "flex",
    paddingInline: token2.paddingSM,
    paddingBlock: token2.padding
  }), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_token$componentCls, "&-body", {
    paddingInline: token2.paddingSM,
    paddingBlock: token2.padding
  }), "&-avatar-header", {
    display: "flex",
    alignItems: "center"
  }), "&-avatar", {
    paddingInlineEnd: 8
  }), "&-detail", {
    overflow: "hidden",
    width: "100%",
    "> div:not(:last-child)": {
      marginBlockEnd: 4
    }
  }), "&-header", {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    lineHeight: token2.lineHeight,
    "&-left": {
      display: "flex",
      alignItems: "center",
      gap: token2.sizeSM,
      minWidth: 0
    }
  }), "&-title", {
    overflow: "hidden",
    color: token2.colorTextHeading,
    fontWeight: "500",
    fontSize: token2.fontSize,
    whiteSpace: "nowrap",
    textOverflow: "ellipsis",
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    "&-with-ellipsis": {
      display: "inline-block"
    }
  }), "&-description", {
    color: token2.colorTextSecondary
  }), "&:not(".concat(token2.componentCls, "-disabled)"), {
    "&:hover": {
      borderColor: token2.colorPrimary
    }
  })));
};
function useStyle8(prefixCls) {
  return useStyle("CheckCard", function(token2) {
    var proListToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle11(proListToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/CheckCard/Group.js
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
var _excluded5 = ["prefixCls", "className", "style", "options", "loading", "multiple", "bordered", "onChange"];
var CardLoading = function CardLoading2(_ref) {
  var prefixCls = _ref.prefixCls, hashId = _ref.hashId;
  return (0, import_jsx_runtime22.jsx)("div", {
    className: (0, import_classnames6.default)("".concat(prefixCls, "-loading-content"), hashId),
    children: (0, import_jsx_runtime22.jsx)(skeleton_default, {
      loading: true,
      active: true,
      paragraph: {
        rows: 4
      },
      title: false
    })
  });
};
var CheckCardGroupConnext = (0, import_react29.createContext)(null);
var SubCheckCardGroup = function SubCheckCardGroup2(props) {
  var _useState = (0, import_react29.useState)(false), _useState2 = _slicedToArray(_useState, 2), collapse = _useState2[0], setCollapse = _useState2[1];
  var _proTheme$useToken = proTheme.useToken(), hashId = _proTheme$useToken.hashId;
  var baseCls = "".concat(props.prefix, "-sub-check-card");
  return (0, import_jsx_runtime23.jsxs)("div", {
    className: (0, import_classnames6.default)(baseCls, hashId),
    children: [(0, import_jsx_runtime23.jsxs)("div", {
      className: (0, import_classnames6.default)("".concat(baseCls, "-title"), hashId),
      onClick: function onClick() {
        setCollapse(!collapse);
      },
      children: [(0, import_jsx_runtime22.jsx)(RightOutlined_default, {
        style: {
          transform: "rotate(".concat(collapse ? 90 : 0, "deg)"),
          transition: "transform 0.3s"
        }
      }), props.title]
    }), (0, import_jsx_runtime22.jsx)("div", {
      className: (0, import_classnames6.default)("".concat(baseCls, "-panel"), hashId, _defineProperty({}, "".concat(baseCls, "-panel-collapse"), collapse)),
      children: props.children
    })]
  });
};
var CheckCardGroup = function CheckCardGroup2(props) {
  var customizePrefixCls = props.prefixCls, className = props.className, style = props.style, _props$options = props.options, options = _props$options === void 0 ? [] : _props$options, _props$loading = props.loading, loading = _props$loading === void 0 ? false : _props$loading, _props$multiple = props.multiple, multiple = _props$multiple === void 0 ? false : _props$multiple, _props$bordered = props.bordered, bordered = _props$bordered === void 0 ? true : _props$bordered, onChange = props.onChange, restProps = _objectWithoutProperties(props, _excluded5);
  var antdContext = (0, import_react29.useContext)(config_provider_default.ConfigContext);
  var getOptions = (0, import_react29.useCallback)(function() {
    return options === null || options === void 0 ? void 0 : options.map(function(option) {
      if (typeof option === "string") {
        return {
          title: option,
          value: option
        };
      }
      return option;
    });
  }, [options]);
  var prefixCls = antdContext.getPrefixCls("pro-checkcard", customizePrefixCls);
  var _useStyle = useStyle8(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var groupPrefixCls = "".concat(prefixCls, "-group");
  var domProps = es_default(restProps, ["children", "defaultValue", "value", "disabled", "size"]);
  var _useMountMergeState = useMergedState(props.defaultValue, {
    value: props.value,
    onChange: props.onChange
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), stateValue = _useMountMergeState2[0], setStateValue = _useMountMergeState2[1];
  var registerValueMap = (0, import_react29.useRef)(/* @__PURE__ */ new Map());
  var registerValue = function registerValue2(value) {
    var _registerValueMap$cur;
    (_registerValueMap$cur = registerValueMap.current) === null || _registerValueMap$cur === void 0 || _registerValueMap$cur.set(value, true);
  };
  var cancelValue = function cancelValue2(value) {
    var _registerValueMap$cur2;
    (_registerValueMap$cur2 = registerValueMap.current) === null || _registerValueMap$cur2 === void 0 || _registerValueMap$cur2.delete(value);
  };
  var toggleOption = function toggleOption2(option) {
    if (!multiple) {
      var changeValue;
      changeValue = stateValue;
      if (changeValue === option.value) {
        changeValue = void 0;
      } else {
        changeValue = option.value;
      }
      setStateValue === null || setStateValue === void 0 || setStateValue(changeValue);
    }
    if (multiple) {
      var _changeValue2;
      var _changeValue = [];
      var stateValues = stateValue;
      var hasOption = stateValues === null || stateValues === void 0 ? void 0 : stateValues.includes(option.value);
      _changeValue = _toConsumableArray(stateValues || []);
      if (!hasOption) {
        _changeValue.push(option.value);
      }
      if (hasOption) {
        _changeValue = _changeValue.filter(function(itemValue) {
          return itemValue !== option.value;
        });
      }
      var newOptions = getOptions();
      var newValue = (_changeValue2 = _changeValue) === null || _changeValue2 === void 0 || (_changeValue2 = _changeValue2.filter(function(val) {
        return registerValueMap.current.has(val);
      })) === null || _changeValue2 === void 0 ? void 0 : _changeValue2.sort(function(a, b) {
        var indexA = newOptions.findIndex(function(opt) {
          return opt.value === a;
        });
        var indexB = newOptions.findIndex(function(opt) {
          return opt.value === b;
        });
        return indexA - indexB;
      });
      setStateValue(newValue);
    }
  };
  var children = (0, import_react29.useMemo)(function() {
    if (loading) {
      return new Array(options.length || import_react29.default.Children.toArray(props.children).length || 1).fill(0).map(function(_, index2) {
        return (0, import_jsx_runtime22.jsx)(CheckCard_default, {
          loading: true
        }, index2);
      });
    }
    if (options && options.length > 0) {
      var optionValue = stateValue;
      var renderOptions = function renderOptions2(list) {
        return list.map(function(option) {
          var _option$size;
          if (option.children && option.children.length > 0) {
            var _option$value, _option$title;
            return (0, import_jsx_runtime22.jsx)(SubCheckCardGroup, {
              title: option.title,
              prefix: groupPrefixCls,
              children: renderOptions2(option.children)
            }, ((_option$value = option.value) === null || _option$value === void 0 ? void 0 : _option$value.toString()) || ((_option$title = option.title) === null || _option$title === void 0 ? void 0 : _option$title.toString()));
          }
          return (0, import_jsx_runtime22.jsx)(CheckCard_default, {
            disabled: option.disabled,
            size: (_option$size = option.size) !== null && _option$size !== void 0 ? _option$size : props.size,
            value: option.value,
            checked: multiple ? optionValue === null || optionValue === void 0 ? void 0 : optionValue.includes(option.value) : optionValue === option.value,
            onChange: option.onChange,
            title: option.title,
            avatar: option.avatar,
            description: option.description,
            cover: option.cover
          }, option.value.toString());
        });
      };
      return renderOptions(getOptions());
    }
    return props.children;
  }, [getOptions, loading, multiple, options, props.children, props.size, stateValue]);
  var classString = (0, import_classnames6.default)(groupPrefixCls, className, hashId);
  return wrapSSR((0, import_jsx_runtime22.jsx)(CheckCardGroupConnext.Provider, {
    value: {
      toggleOption,
      bordered,
      value: stateValue,
      disabled: props.disabled,
      size: props.size,
      loading: props.loading,
      multiple: props.multiple,
      // https://github.com/ant-design/ant-design/issues/16376
      registerValue,
      cancelValue
    },
    children: (0, import_jsx_runtime22.jsx)("div", _objectSpread2(_objectSpread2({
      className: classString,
      style
    }, domProps), {}, {
      children
    }))
  }));
};
var Group_default = function(props) {
  return (0, import_jsx_runtime22.jsx)(ProConfigProvider, {
    needDeps: true,
    children: (0, import_jsx_runtime22.jsx)(CheckCardGroup, _objectSpread2({}, props))
  });
};

// node_modules/@ant-design/pro-card/es/components/CheckCard/index.js
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var _excluded6 = ["prefixCls", "className", "avatar", "title", "description", "cover", "extra", "style"];
var CheckCard = function CheckCard2(props) {
  var _useMountMergeState = useMergedState(props.defaultChecked || false, {
    value: props.checked,
    onChange: props.onChange
  }), _useMountMergeState2 = _slicedToArray(_useMountMergeState, 2), stateChecked = _useMountMergeState2[0], setStateChecked = _useMountMergeState2[1];
  var checkCardGroup = (0, import_react30.useContext)(CheckCardGroupConnext);
  var _useContext = (0, import_react30.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var handleClick = function handleClick2(e) {
    var _props$onClick, _checkCardGroup$toggl;
    props === null || props === void 0 || (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, e);
    var newChecked = !stateChecked;
    checkCardGroup === null || checkCardGroup === void 0 || (_checkCardGroup$toggl = checkCardGroup.toggleOption) === null || _checkCardGroup$toggl === void 0 || _checkCardGroup$toggl.call(checkCardGroup, {
      value: props.value
    });
    setStateChecked === null || setStateChecked === void 0 || setStateChecked(newChecked);
  };
  var getSizeCls = function getSizeCls2(size2) {
    if (size2 === "large") return "lg";
    if (size2 === "small") return "sm";
    return "";
  };
  (0, import_react30.useEffect)(function() {
    var _checkCardGroup$regis;
    checkCardGroup === null || checkCardGroup === void 0 || (_checkCardGroup$regis = checkCardGroup.registerValue) === null || _checkCardGroup$regis === void 0 || _checkCardGroup$regis.call(checkCardGroup, props.value);
    return function() {
      var _checkCardGroup$cance;
      return checkCardGroup === null || checkCardGroup === void 0 || (_checkCardGroup$cance = checkCardGroup.cancelValue) === null || _checkCardGroup$cance === void 0 ? void 0 : _checkCardGroup$cance.call(checkCardGroup, props.value);
    };
  }, [props.value]);
  var customizePrefixCls = props.prefixCls, className = props.className, avatar = props.avatar, title = props.title, description = props.description, cover = props.cover, extra = props.extra, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style, others = _objectWithoutProperties(props, _excluded6);
  var checkCardProps = _objectSpread2({}, others);
  var prefixCls = getPrefixCls("pro-checkcard", customizePrefixCls);
  var _useStyle = useStyle8(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var renderCover = function renderCover2(cls, coverDom) {
    return (0, import_jsx_runtime24.jsx)("div", {
      className: (0, import_classnames7.default)("".concat(cls, "-cover"), hashId),
      children: typeof coverDom === "string" ? (0, import_jsx_runtime24.jsx)("img", {
        src: coverDom,
        alt: "checkcard"
      }) : coverDom
    });
  };
  checkCardProps.checked = stateChecked;
  var multiple = false;
  if (checkCardGroup) {
    var _checkCardGroup$value;
    checkCardProps.disabled = props.disabled || checkCardGroup.disabled;
    checkCardProps.loading = props.loading || checkCardGroup.loading;
    checkCardProps.bordered = props.bordered || checkCardGroup.bordered;
    multiple = checkCardGroup.multiple;
    var isChecked = checkCardGroup.multiple ? (_checkCardGroup$value = checkCardGroup.value) === null || _checkCardGroup$value === void 0 ? void 0 : _checkCardGroup$value.includes(props.value) : checkCardGroup.value === props.value;
    checkCardProps.checked = checkCardProps.loading ? false : isChecked;
    checkCardProps.size = props.size || checkCardGroup.size;
  }
  var _checkCardProps$disab = checkCardProps.disabled, disabled = _checkCardProps$disab === void 0 ? false : _checkCardProps$disab, size = checkCardProps.size, cardLoading3 = checkCardProps.loading, _checkCardProps$borde = checkCardProps.bordered, bordered = _checkCardProps$borde === void 0 ? true : _checkCardProps$borde, checked = checkCardProps.checked;
  var sizeCls = getSizeCls(size);
  var classString = (0, import_classnames7.default)(prefixCls, className, hashId, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(prefixCls, "-loading"), cardLoading3), "".concat(prefixCls, "-").concat(sizeCls), sizeCls), "".concat(prefixCls, "-checked"), checked), "".concat(prefixCls, "-multiple"), multiple), "".concat(prefixCls, "-disabled"), disabled), "".concat(prefixCls, "-bordered"), bordered), "".concat(prefixCls, "-ghost"), props.ghost));
  var metaDom = (0, import_react30.useMemo)(function() {
    if (cardLoading3) {
      return (0, import_jsx_runtime24.jsx)(CardLoading, {
        prefixCls: prefixCls || "",
        hashId
      });
    }
    if (cover) {
      return renderCover(prefixCls || "", cover);
    }
    var avatarDom = avatar ? (0, import_jsx_runtime24.jsx)("div", {
      className: (0, import_classnames7.default)("".concat(prefixCls, "-avatar"), hashId),
      children: typeof avatar === "string" ? (0, import_jsx_runtime24.jsx)(avatar_default, {
        size: 48,
        shape: "square",
        src: avatar
      }) : avatar
    }) : null;
    var headerDom = (title !== null && title !== void 0 ? title : extra) != null && (0, import_jsx_runtime25.jsxs)("div", {
      className: (0, import_classnames7.default)("".concat(prefixCls, "-header"), hashId),
      children: [(0, import_jsx_runtime25.jsxs)("div", {
        className: (0, import_classnames7.default)("".concat(prefixCls, "-header-left"), hashId),
        children: [(0, import_jsx_runtime24.jsx)("div", {
          className: (0, import_classnames7.default)("".concat(prefixCls, "-title"), hashId, _defineProperty({}, "".concat(prefixCls, "-title-with-ellipsis"), typeof title === "string")),
          children: title
        }), props.subTitle ? (0, import_jsx_runtime24.jsx)("div", {
          className: (0, import_classnames7.default)("".concat(prefixCls, "-subTitle"), hashId),
          children: props.subTitle
        }) : null]
      }), extra && (0, import_jsx_runtime24.jsx)("div", {
        className: (0, import_classnames7.default)("".concat(prefixCls, "-extra"), hashId),
        children: extra
      })]
    });
    var descriptionDom = description ? (0, import_jsx_runtime24.jsx)("div", {
      className: (0, import_classnames7.default)("".concat(prefixCls, "-description"), hashId),
      children: description
    }) : null;
    var metaClass = (0, import_classnames7.default)("".concat(prefixCls, "-content"), hashId, _defineProperty({}, "".concat(prefixCls, "-avatar-header"), avatarDom && headerDom && !descriptionDom));
    return (0, import_jsx_runtime25.jsxs)("div", {
      className: metaClass,
      children: [avatarDom, headerDom || descriptionDom ? (0, import_jsx_runtime25.jsxs)("div", {
        className: (0, import_classnames7.default)("".concat(prefixCls, "-detail"), hashId),
        children: [headerDom, descriptionDom]
      }) : null]
    });
  }, [avatar, cardLoading3, cover, description, extra, hashId, prefixCls, props.subTitle, title]);
  return wrapSSR((0, import_jsx_runtime25.jsxs)("div", {
    className: classString,
    style,
    onClick: function onClick(e) {
      if (!cardLoading3 && !disabled) {
        handleClick(e);
      }
    },
    onMouseEnter: props.onMouseEnter,
    children: [metaDom, props.children ? (0, import_jsx_runtime24.jsx)("div", {
      className: (0, import_classnames7.default)("".concat(prefixCls, "-body"), hashId),
      style: props.bodyStyle,
      children: props.children
    }) : null, props.actions ? (0, import_jsx_runtime24.jsx)(Actions_default, {
      actions: props.actions,
      prefixCls
    }) : null]
  }));
};
CheckCard.Group = Group_default;
var CheckCard_default = CheckCard;

// node_modules/@ant-design/pro-card/es/components/Statistic/index.js
var import_classnames8 = __toESM(require_classnames());
var import_react31 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Statistic/style.js
var genProStyle13 = function genProStyle14(token2) {
  return _defineProperty({}, token2.componentCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({
    display: "flex",
    fontSize: token2.fontSize,
    "& + &": {
      marginBlockStart: 4
    },
    "&-tip": {
      marginInlineStart: 4
    },
    "&-wrapper": _defineProperty({
      display: "flex",
      width: "100%"
    }, "".concat(token2.componentCls, "-status"), {
      width: "14px"
    }),
    "&-icon": {
      marginInlineEnd: 16
    },
    "&-trend-icon": {
      width: 0,
      height: 0,
      borderInlineEnd: "3.5px solid transparent",
      borderBlockEnd: "9px solid #000",
      borderInlineStart: "3.5px solid transparent",
      "&-up": {
        transform: "rotate(0deg)"
      },
      "&-down": {
        transform: "rotate(180deg)"
      }
    },
    "&-content": _defineProperty({
      width: "100%"
    }, "".concat(token2.antCls, "-statistic-content"), {
      "&-value-int": {
        fontSize: token2.fontSizeHeading3
      }
    }),
    "&-description": {
      width: "100%"
    }
  }, "".concat(token2.antCls, "-statistic-title"), {
    color: token2.colorText
  }), "&-trend-up", _defineProperty({}, "".concat(token2.antCls, "-statistic-content"), _defineProperty({
    color: "#f5222d"
  }, "".concat(token2.componentCls, "-trend-icon"), {
    borderBlockEndColor: "#f5222d"
  }))), "&-trend-down", _defineProperty({}, "".concat(token2.antCls, "-statistic-content"), _defineProperty({
    color: "#389e0d"
  }, "".concat(token2.componentCls, "-trend-icon"), {
    borderBlockEndColor: "#52c41a"
  }))), "& &-layout-horizontal", _defineProperty(_defineProperty(_defineProperty({
    display: "flex",
    justifyContent: "space-between"
  }, "".concat(token2.antCls, "-statistic-title"), {
    marginBlockEnd: 0
  }), "".concat(token2.antCls, "-statistic-content-value"), {
    fontWeight: 500
  }), "".concat(token2.antCls, "-statistic-title,").concat(token2.antCls, "-statistic-content,").concat(token2.antCls, "-statistic-content-suffix,").concat(token2.antCls, "-statistic-content-prefix,").concat(token2.antCls, "-statistic-content-value-decimal"), {
    fontSize: token2.fontSize
  })), "& &-layout-inline", _defineProperty(_defineProperty(_defineProperty({
    display: "inline-flex",
    color: token2.colorTextSecondary
  }, "".concat(token2.antCls, "-statistic-title"), {
    marginInlineEnd: "6px",
    marginBlockEnd: 0
  }), "".concat(token2.antCls, "-statistic-content"), {
    color: token2.colorTextSecondary
  }), "".concat(token2.antCls, "-statistic-title,").concat(token2.antCls, "-statistic-content,").concat(token2.antCls, "-statistic-content-suffix,").concat(token2.antCls, "-statistic-content-prefix,").concat(token2.antCls, "-statistic-content-value-decimal"), {
    fontSize: token2.fontSizeSM
  })));
};
function useStyle9(prefixCls) {
  return useStyle("Statistic", function(token2) {
    var proListToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle13(proListToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/Statistic/index.js
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var _excluded7 = ["className", "layout", "style", "description", "children", "title", "tip", "status", "trend", "prefix", "icon"];
var Statistic = function Statistic2(props) {
  var className = props.className, _props$layout = props.layout, layout = _props$layout === void 0 ? "inline" : _props$layout, style = props.style, description = props.description, children = props.children, title = props.title, tip = props.tip, status = props.status, trend = props.trend, prefix = props.prefix, icon = props.icon, others = _objectWithoutProperties(props, _excluded7);
  var _useContext = (0, import_react31.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-card-statistic");
  var _useStyle = useStyle9(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var classString = (0, import_classnames8.default)(prefixCls, className, hashId);
  var statusClass = (0, import_classnames8.default)("".concat(prefixCls, "-status"), hashId);
  var iconClass = (0, import_classnames8.default)("".concat(prefixCls, "-icon"), hashId);
  var wrapperClass = (0, import_classnames8.default)("".concat(prefixCls, "-wrapper"), hashId);
  var contentClass = (0, import_classnames8.default)("".concat(prefixCls, "-content"), hashId);
  var statisticClassName = (0, import_classnames8.default)(hashId, _defineProperty(_defineProperty({}, "".concat(prefixCls, "-layout-").concat(layout), layout), "".concat(prefixCls, "-trend-").concat(trend), trend));
  var tipDom = tip && (0, import_jsx_runtime26.jsx)(tooltip_default, {
    title: tip,
    children: (0, import_jsx_runtime26.jsx)(QuestionCircleOutlined_default, {
      className: "".concat(prefixCls, "-tip ").concat(hashId).trim()
    })
  });
  var trendIconClassName = (0, import_classnames8.default)("".concat(prefixCls, "-trend-icon"), hashId, _defineProperty({}, "".concat(prefixCls, "-trend-icon-").concat(trend), trend));
  var trendDom = trend && (0, import_jsx_runtime26.jsx)("div", {
    className: trendIconClassName
  });
  var statusDom = status && (0, import_jsx_runtime26.jsx)("div", {
    className: statusClass,
    children: (0, import_jsx_runtime26.jsx)(badge_default, {
      status,
      text: null
    })
  });
  var iconDom = icon && (0, import_jsx_runtime26.jsx)("div", {
    className: iconClass,
    children: icon
  });
  return wrapSSR((0, import_jsx_runtime28.jsxs)("div", {
    className: classString,
    style,
    children: [iconDom, (0, import_jsx_runtime28.jsxs)("div", {
      className: wrapperClass,
      children: [statusDom, (0, import_jsx_runtime28.jsxs)("div", {
        className: contentClass,
        children: [(0, import_jsx_runtime26.jsx)(statistic_default, _objectSpread2({
          title: (title || tipDom) && (0, import_jsx_runtime28.jsxs)(import_jsx_runtime27.Fragment, {
            children: [title, tipDom]
          }),
          prefix: (trendDom || prefix) && (0, import_jsx_runtime28.jsxs)(import_jsx_runtime27.Fragment, {
            children: [trendDom, prefix]
          }),
          className: statisticClassName
        }, others)), description && (0, import_jsx_runtime26.jsx)("div", {
          className: "".concat(prefixCls, "-description ").concat(hashId).trim(),
          children: description
        })]
      })]
    })]
  }));
};
var Statistic_default = Statistic;

// node_modules/@ant-design/pro-card/es/components/StatisticCard/index.js
var import_classnames13 = __toESM(require_classnames());
var import_react37 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Card/index.js
var import_classnames10 = __toESM(require_classnames());
var import_react34 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Loading/index.js
var import_react32 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Loading/style.js
var cardLoading2 = new Keyframes_default("card-loading", {
  "0%": {
    backgroundPosition: "0 50%"
  },
  "50%": {
    backgroundPosition: "100% 50%"
  },
  "100%": {
    backgroundPosition: "0 50%"
  }
});
var genProStyle15 = function genProStyle16(token2) {
  return _defineProperty({}, token2.componentCls, _defineProperty(_defineProperty({
    "&-loading": {
      overflow: "hidden"
    },
    "&-loading &-body": {
      userSelect: "none"
    }
  }, "".concat(token2.componentCls, "-loading-content"), {
    width: "100%",
    p: {
      marginBlock: 0,
      marginInline: 0
    }
  }), "".concat(token2.componentCls, "-loading-block"), {
    height: "14px",
    marginBlock: "4px",
    background: "linear-gradient(90deg, rgba(54, 61, 64, 0.2), rgba(54, 61, 64, 0.4), rgba(54, 61, 64, 0.2))",
    backgroundSize: "600% 600%",
    borderRadius: token2.borderRadius,
    animationName: cardLoading2,
    animationDuration: "1.4s",
    animationTimingFunction: "ease",
    animationIterationCount: "infinite"
  }));
};
function useStyle10(prefixCls) {
  return useStyle("ProCardLoading", function(token2) {
    var proToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle15(proToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/Loading/index.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
var Loading = function Loading2(props) {
  var style = props.style, prefix = props.prefix;
  var _useStyle = useStyle10(prefix || "ant-pro-card"), wrapSSR = _useStyle.wrapSSR;
  return wrapSSR((0, import_jsx_runtime30.jsxs)("div", {
    className: "".concat(prefix, "-loading-content"),
    style,
    children: [(0, import_jsx_runtime29.jsx)(row_default, {
      gutter: 8,
      children: (0, import_jsx_runtime29.jsx)(col_default, {
        span: 22,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      })
    }), (0, import_jsx_runtime30.jsxs)(row_default, {
      gutter: 8,
      children: [(0, import_jsx_runtime29.jsx)(col_default, {
        span: 8,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      }), (0, import_jsx_runtime29.jsx)(col_default, {
        span: 15,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      })]
    }), (0, import_jsx_runtime30.jsxs)(row_default, {
      gutter: 8,
      children: [(0, import_jsx_runtime29.jsx)(col_default, {
        span: 6,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      }), (0, import_jsx_runtime29.jsx)(col_default, {
        span: 18,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      })]
    }), (0, import_jsx_runtime30.jsxs)(row_default, {
      gutter: 8,
      children: [(0, import_jsx_runtime29.jsx)(col_default, {
        span: 13,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      }), (0, import_jsx_runtime29.jsx)(col_default, {
        span: 9,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      })]
    }), (0, import_jsx_runtime30.jsxs)(row_default, {
      gutter: 8,
      children: [(0, import_jsx_runtime29.jsx)(col_default, {
        span: 4,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      }), (0, import_jsx_runtime29.jsx)(col_default, {
        span: 3,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      }), (0, import_jsx_runtime29.jsx)(col_default, {
        span: 16,
        children: (0, import_jsx_runtime29.jsx)("div", {
          className: "".concat(prefix, "-loading-block")
        })
      })]
    })]
  }));
};
var Loading_default = Loading;

// node_modules/@ant-design/pro-card/es/components/TabPane/index.js
var import_classnames9 = __toESM(require_classnames());
var import_react33 = __toESM(require_react());
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var _excluded8 = ["tab", "children"];
var _excluded24 = ["key", "tab", "tabKey", "disabled", "destroyInactiveTabPane", "children", "className", "style", "cardProps"];
function filter(items) {
  return items.filter(function(item) {
    return item;
  });
}
function useLegacyItems(items, children, tabs) {
  if (items) {
    return items.map(function(item) {
      return _objectSpread2(_objectSpread2({}, item), {}, {
        children: (0, import_jsx_runtime31.jsx)(Card_default, _objectSpread2(_objectSpread2({}, tabs === null || tabs === void 0 ? void 0 : tabs.cardProps), {}, {
          children: item.children
        }))
      });
    });
  }
  noteOnce(!tabs, "Tabs.TabPane is deprecated. Please use `items` directly.");
  var childrenItems = toArray(children).map(function(node) {
    if (import_react33.default.isValidElement(node)) {
      var key = node.key, props = node.props;
      var _ref = props || {}, tab = _ref.tab, tempChild = _ref.children, restProps = _objectWithoutProperties(_ref, _excluded8);
      var item = _objectSpread2(_objectSpread2({
        key: String(key)
      }, restProps), {}, {
        children: (0, import_jsx_runtime31.jsx)(Card_default, _objectSpread2(_objectSpread2({}, tabs === null || tabs === void 0 ? void 0 : tabs.cardProps), {}, {
          children: tempChild
        })),
        label: tab
      });
      return item;
    }
    return null;
  });
  return filter(childrenItems);
}
var TabPane = function TabPane2(props) {
  var _useContext = (0, import_react33.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  if (version_default.startsWith("5")) {
    return (0, import_jsx_runtime31.jsx)(import_jsx_runtime32.Fragment, {});
  } else {
    var key = props.key, tab = props.tab, tabKey = props.tabKey, disabled = props.disabled, destroyInactiveTabPane = props.destroyInactiveTabPane, children = props.children, className = props.className, style = props.style, cardProps = props.cardProps, rest = _objectWithoutProperties(props, _excluded24);
    var prefixCls = getPrefixCls("pro-card-tabpane");
    var tabPaneClassName = (0, import_classnames9.default)(prefixCls, className);
    return (0, import_jsx_runtime31.jsx)(tabs_default.TabPane, _objectSpread2(_objectSpread2({
      tabKey,
      tab,
      className: tabPaneClassName,
      style,
      disabled,
      destroyInactiveTabPane
    }, rest), {}, {
      children: (0, import_jsx_runtime31.jsx)(Card_default, _objectSpread2(_objectSpread2({}, cardProps), {}, {
        children
      }))
    }), key);
  }
};
if (typeof process !== "undefined" && true) {
  TabPane.displayName = "DeprecatedTabPane";
}
var TabPane_default = TabPane;

// node_modules/@ant-design/pro-card/es/components/Card/style.js
var genActiveStyle = function genActiveStyle2(token2) {
  return {
    backgroundColor: token2.controlItemBgActive,
    borderColor: token2.controlOutline
  };
};
var genProCardStyle = function genProCardStyle2(token2) {
  var componentCls = token2.componentCls;
  return _defineProperty(_defineProperty(_defineProperty({}, componentCls, _objectSpread2(_objectSpread2({
    position: "relative",
    display: "flex",
    flexDirection: "column",
    boxSizing: "border-box",
    width: "100%",
    marginBlock: 0,
    marginInline: 0,
    paddingBlock: 0,
    paddingInline: 0,
    backgroundColor: token2.colorBgContainer,
    borderRadius: token2.borderRadius,
    transition: "all 0.3s"
  }, resetComponent === null || resetComponent === void 0 ? void 0 : resetComponent(token2)), {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({
    "&-box-shadow": {
      boxShadow: "0 1px 2px -2px #00000029, 0 3px 6px #0000001f, 0 5px 12px 4px #00000017",
      borderColor: "transparent"
    },
    "&-col": {
      width: "100%"
    },
    "&-border": {
      border: "".concat(token2.lineWidth, "px ").concat(token2.lineType, " ").concat(token2.colorSplit)
    },
    "&-hoverable": _defineProperty({
      cursor: "pointer",
      transition: "box-shadow 0.3s, border-color 0.3s",
      "&:hover": {
        borderColor: "transparent",
        boxShadow: "0 1px 2px -2px #00000029, 0 3px 6px #0000001f, 0 5px 12px 4px #00000017"
      }
    }, "&".concat(componentCls, "-checked:hover"), {
      borderColor: token2.controlOutline
    }),
    "&-checked": _objectSpread2(_objectSpread2({}, genActiveStyle(token2)), {}, {
      "&::after": {
        visibility: "visible",
        position: "absolute",
        insetBlockStart: 2,
        insetInlineEnd: 2,
        opacity: 1,
        width: 0,
        height: 0,
        border: "6px solid ".concat(token2.colorPrimary),
        borderBlockEnd: "6px solid transparent",
        borderInlineStart: "6px solid transparent",
        borderStartEndRadius: 2,
        content: '""'
      }
    }),
    "&:focus": _objectSpread2({}, genActiveStyle(token2)),
    "&&-ghost": _defineProperty({
      backgroundColor: "transparent"
    }, "> ".concat(componentCls), {
      "&-header": {
        paddingInlineEnd: 0,
        paddingBlockEnd: token2.padding,
        paddingInlineStart: 0
      },
      "&-body": {
        paddingBlock: 0,
        paddingInline: 0,
        backgroundColor: "transparent"
      }
    }),
    "&&-split > &-body": {
      paddingBlock: 0,
      paddingInline: 0
    },
    "&&-contain-card > &-body": {
      display: "flex"
    }
  }, "".concat(componentCls, "-body-direction-column"), {
    flexDirection: "column"
  }), "".concat(componentCls, "-body-wrap"), {
    flexWrap: "wrap"
  }), "&&-collapse", _defineProperty({}, "> ".concat(componentCls), {
    "&-header": {
      paddingBlockEnd: token2.padding,
      borderBlockEnd: 0
    },
    "&-body": {
      display: "none"
    }
  })), "".concat(componentCls, "-header"), {
    display: "flex",
    alignItems: "center",
    justifyContent: "space-between",
    paddingInline: token2.paddingLG,
    paddingBlock: token2.padding,
    paddingBlockEnd: 0,
    "&-border": {
      "&": {
        paddingBlockEnd: token2.padding
      },
      borderBlockEnd: "".concat(token2.lineWidth, "px ").concat(token2.lineType, " ").concat(token2.colorSplit)
    },
    "&-collapsible": {
      cursor: "pointer"
    }
  }), "".concat(componentCls, "-title"), {
    color: token2.colorText,
    fontWeight: 500,
    fontSize: token2.fontSizeLG,
    lineHeight: token2.lineHeight
  }), "".concat(componentCls, "-extra"), {
    color: token2.colorText
  }), "".concat(componentCls, "-type-inner"), _defineProperty({}, "".concat(componentCls, "-header"), {
    backgroundColor: token2.colorFillAlter
  })), "".concat(componentCls, "-collapsible-icon"), {
    marginInlineEnd: token2.marginXS,
    color: token2.colorIconHover,
    ":hover": {
      color: token2.colorPrimaryHover
    },
    "& svg": {
      transition: "transform ".concat(token2.motionDurationMid)
    }
  }), "".concat(componentCls, "-body"), {
    display: "block",
    boxSizing: "border-box",
    height: "100%",
    paddingInline: token2.paddingLG,
    paddingBlock: token2.padding,
    "&-center": {
      display: "flex",
      alignItems: "center",
      justifyContent: "center"
    }
  }), "&&-size-small", _defineProperty(_defineProperty({}, componentCls, {
    "&-header": {
      paddingInline: token2.paddingSM,
      paddingBlock: token2.paddingXS,
      paddingBlockEnd: 0,
      "&-border": {
        paddingBlockEnd: token2.paddingXS
      }
    },
    "&-title": {
      fontSize: token2.fontSize
    },
    "&-body": {
      paddingInline: token2.paddingSM,
      paddingBlock: token2.paddingSM
    }
  }), "".concat(componentCls, "-header").concat(componentCls, "-header-collapsible"), {
    paddingBlock: token2.paddingXS
  })))), "".concat(componentCls, "-col"), _defineProperty(_defineProperty({}, "&".concat(componentCls, "-split-vertical"), {
    borderInlineEnd: "".concat(token2.lineWidth, "px ").concat(token2.lineType, " ").concat(token2.colorSplit)
  }), "&".concat(componentCls, "-split-horizontal"), {
    borderBlockEnd: "".concat(token2.lineWidth, "px ").concat(token2.lineType, " ").concat(token2.colorSplit)
  })), "".concat(componentCls, "-tabs"), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(token2.antCls, "-tabs-top > ").concat(token2.antCls, "-tabs-nav"), _defineProperty({
    marginBlockEnd: 0
  }, "".concat(token2.antCls, "-tabs-nav-list"), {
    marginBlockStart: token2.marginXS,
    paddingInlineStart: token2.padding
  })), "".concat(token2.antCls, "-tabs-bottom > ").concat(token2.antCls, "-tabs-nav"), _defineProperty({
    marginBlockEnd: 0
  }, "".concat(token2.antCls, "-tabs-nav-list"), {
    paddingInlineStart: token2.padding
  })), "".concat(token2.antCls, "-tabs-left"), _defineProperty({}, "".concat(token2.antCls, "-tabs-content-holder"), _defineProperty({}, "".concat(token2.antCls, "-tabs-content"), _defineProperty({}, "".concat(token2.antCls, "-tabs-tabpane"), {
    paddingInlineStart: 0
  })))), "".concat(token2.antCls, "-tabs-left > ").concat(token2.antCls, "-tabs-nav"), _defineProperty({
    marginInlineEnd: 0
  }, "".concat(token2.antCls, "-tabs-nav-list"), {
    paddingBlockStart: token2.padding
  })), "".concat(token2.antCls, "-tabs-right"), _defineProperty({}, "".concat(token2.antCls, "-tabs-content-holder"), _defineProperty({}, "".concat(token2.antCls, "-tabs-content"), _defineProperty({}, "".concat(token2.antCls, "-tabs-tabpane"), {
    paddingInlineStart: 0
  })))), "".concat(token2.antCls, "-tabs-right > ").concat(token2.antCls, "-tabs-nav"), _defineProperty({}, "".concat(token2.antCls, "-tabs-nav-list"), {
    paddingBlockStart: token2.padding
  })));
};
var GRID_COLUMNS = 24;
var genColStyle = function genColStyle2(index2, token2) {
  var componentCls = token2.componentCls;
  if (index2 === 0) {
    return _defineProperty({}, "".concat(componentCls, "-col-0"), {
      display: "none"
    });
  }
  return _defineProperty({}, "".concat(componentCls, "-col-").concat(index2), {
    flexShrink: 0,
    width: "".concat(index2 / GRID_COLUMNS * 100, "%")
  });
};
var genGridStyle = function genGridStyle2(token2) {
  return Array(GRID_COLUMNS + 1).fill(1).map(function(_, index2) {
    return genColStyle(index2, token2);
  });
};
function useStyle11(prefixCls) {
  return useStyle("ProCard", function(token2) {
    var proCardToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProCardStyle(proCardToken), genGridStyle(proCardToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/Card/index.js
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
var _excluded9 = ["className", "style", "bodyStyle", "headStyle", "title", "subTitle", "extra", "wrap", "layout", "loading", "gutter", "tooltip", "split", "headerBordered", "bordered", "boxShadow", "children", "size", "actions", "ghost", "hoverable", "direction", "collapsed", "collapsible", "collapsibleIconRender", "colStyle", "defaultCollapsed", "onCollapse", "checked", "onChecked", "tabs", "type"];
var Card = import_react34.default.forwardRef(function(props, ref) {
  var _classNames2;
  var className = props.className, style = props.style, bodyStyle = props.bodyStyle, headStyle = props.headStyle, title = props.title, subTitle = props.subTitle, extra = props.extra, _props$wrap = props.wrap, wrap = _props$wrap === void 0 ? false : _props$wrap, layout = props.layout, loading = props.loading, _props$gutter = props.gutter, gutter = _props$gutter === void 0 ? 0 : _props$gutter, tooltip = props.tooltip, split = props.split, _props$headerBordered = props.headerBordered, headerBordered = _props$headerBordered === void 0 ? false : _props$headerBordered, _props$bordered = props.bordered, bordered = _props$bordered === void 0 ? false : _props$bordered, _props$boxShadow = props.boxShadow, boxShadow = _props$boxShadow === void 0 ? false : _props$boxShadow, children = props.children, size = props.size, actions = props.actions, _props$ghost = props.ghost, ghost = _props$ghost === void 0 ? false : _props$ghost, _props$hoverable = props.hoverable, hoverable = _props$hoverable === void 0 ? false : _props$hoverable, direction = props.direction, controlCollapsed = props.collapsed, _props$collapsible = props.collapsible, collapsible = _props$collapsible === void 0 ? false : _props$collapsible, collapsibleIconRender = props.collapsibleIconRender, colStyle = props.colStyle, _props$defaultCollaps = props.defaultCollapsed, defaultCollapsed = _props$defaultCollaps === void 0 ? false : _props$defaultCollaps, onCollapse = props.onCollapse, checked = props.checked, onChecked = props.onChecked, tabs = props.tabs, type = props.type, rest = _objectWithoutProperties(props, _excluded9);
  var _useContext = (0, import_react34.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var screens = useBreakpoint_default() || {
    lg: true,
    md: true,
    sm: true,
    xl: false,
    xs: false,
    xxl: false
  };
  var _useMergedState = useMergedState(defaultCollapsed, {
    value: controlCollapsed,
    onChange: onCollapse
  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), collapsed = _useMergedState2[0], setCollapsed = _useMergedState2[1];
  var responsiveArray = ["xxl", "xl", "lg", "md", "sm", "xs"];
  var ModifyTabItemsContent = useLegacyItems(tabs === null || tabs === void 0 ? void 0 : tabs.items, children, tabs);
  var getNormalizedGutter = function getNormalizedGutter2(gut) {
    var results = [0, 0];
    var normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];
    normalizedGutter.forEach(function(g, index2) {
      if (_typeof(g) === "object") {
        for (var i = 0; i < responsiveArray.length; i += 1) {
          var breakpoint = responsiveArray[i];
          if (screens[breakpoint] && g[breakpoint] !== void 0) {
            results[index2] = g[breakpoint];
            break;
          }
        }
      } else {
        results[index2] = g || 0;
      }
    });
    return results;
  };
  var getStyle = function getStyle2(withStyle, appendStyle) {
    return withStyle ? appendStyle : {};
  };
  var getColSpanStyle = function getColSpanStyle2(colSpan) {
    var span = colSpan;
    if (_typeof(colSpan) === "object") {
      for (var i = 0; i < responsiveArray.length; i += 1) {
        var breakpoint = responsiveArray[i];
        if (screens !== null && screens !== void 0 && screens[breakpoint] && (colSpan === null || colSpan === void 0 ? void 0 : colSpan[breakpoint]) !== void 0) {
          span = colSpan[breakpoint];
          break;
        }
      }
    }
    var colSpanStyle = getStyle(typeof span === "string" && /\d%|\dpx/i.test(span), {
      width: span,
      flexShrink: 0
    });
    return {
      span,
      colSpanStyle
    };
  };
  var prefixCls = getPrefixCls("pro-card");
  var _useStyle = useStyle11(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var _getNormalizedGutter = getNormalizedGutter(gutter), _getNormalizedGutter2 = _slicedToArray(_getNormalizedGutter, 2), horizontalGutter = _getNormalizedGutter2[0], verticalGutter = _getNormalizedGutter2[1];
  var containProCard = false;
  var childrenArray = import_react34.default.Children.toArray(children);
  var childrenModified = childrenArray.map(function(element, index2) {
    var _element$type;
    if (element !== null && element !== void 0 && (_element$type = element.type) !== null && _element$type !== void 0 && _element$type.isProCard) {
      containProCard = true;
      var colSpan = element.props.colSpan;
      var _getColSpanStyle = getColSpanStyle(colSpan), span = _getColSpanStyle.span, colSpanStyle = _getColSpanStyle.colSpanStyle;
      var columnClassName = (0, import_classnames10.default)(["".concat(prefixCls, "-col")], hashId, _defineProperty(_defineProperty(_defineProperty({}, "".concat(prefixCls, "-split-vertical"), split === "vertical" && index2 !== childrenArray.length - 1), "".concat(prefixCls, "-split-horizontal"), split === "horizontal" && index2 !== childrenArray.length - 1), "".concat(prefixCls, "-col-").concat(span), typeof span === "number" && span >= 0 && span <= 24));
      var wrappedElement = wrapSSR((0, import_jsx_runtime33.jsx)("div", {
        style: _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, colSpanStyle), getStyle(horizontalGutter > 0, {
          paddingInlineEnd: horizontalGutter / 2,
          paddingInlineStart: horizontalGutter / 2
        })), getStyle(verticalGutter > 0, {
          paddingBlockStart: verticalGutter / 2,
          paddingBlockEnd: verticalGutter / 2
        })), colStyle),
        className: columnClassName,
        children: import_react34.default.cloneElement(element)
      }));
      return import_react34.default.cloneElement(wrappedElement, {
        key: "pro-card-col-".concat((element === null || element === void 0 ? void 0 : element.key) || index2)
      });
    }
    return element;
  });
  var cardCls = (0, import_classnames10.default)("".concat(prefixCls), className, hashId, (_classNames2 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames2, "".concat(prefixCls, "-border"), bordered), "".concat(prefixCls, "-box-shadow"), boxShadow), "".concat(prefixCls, "-contain-card"), containProCard), "".concat(prefixCls, "-loading"), loading), "".concat(prefixCls, "-split"), split === "vertical" || split === "horizontal"), "".concat(prefixCls, "-ghost"), ghost), "".concat(prefixCls, "-hoverable"), hoverable), "".concat(prefixCls, "-size-").concat(size), size), "".concat(prefixCls, "-type-").concat(type), type), "".concat(prefixCls, "-collapse"), collapsed), _defineProperty(_classNames2, "".concat(prefixCls, "-checked"), checked)));
  var bodyCls = (0, import_classnames10.default)("".concat(prefixCls, "-body"), hashId, _defineProperty(_defineProperty(_defineProperty({}, "".concat(prefixCls, "-body-center"), layout === "center"), "".concat(prefixCls, "-body-direction-column"), split === "horizontal" || direction === "column"), "".concat(prefixCls, "-body-wrap"), wrap && containProCard));
  var cardBodyStyle = bodyStyle;
  var loadingDOM = import_react34.default.isValidElement(loading) ? loading : (0, import_jsx_runtime33.jsx)(Loading_default, {
    prefix: prefixCls,
    style: (bodyStyle === null || bodyStyle === void 0 ? void 0 : bodyStyle.padding) === 0 || (bodyStyle === null || bodyStyle === void 0 ? void 0 : bodyStyle.padding) === "0px" ? {
      padding: 24
    } : void 0
  });
  var collapsibleButton = collapsible && controlCollapsed === void 0 && (collapsibleIconRender ? collapsibleIconRender({
    collapsed
  }) : (0, import_jsx_runtime33.jsx)(RightOutlined_default, {
    rotate: !collapsed ? 90 : void 0,
    className: "".concat(prefixCls, "-collapsible-icon ").concat(hashId).trim()
  }));
  return wrapSSR((0, import_jsx_runtime34.jsxs)("div", _objectSpread2(_objectSpread2({
    className: cardCls,
    style,
    ref,
    onClick: function onClick(e) {
      var _rest$onClick;
      onChecked === null || onChecked === void 0 || onChecked(e);
      rest === null || rest === void 0 || (_rest$onClick = rest.onClick) === null || _rest$onClick === void 0 || _rest$onClick.call(rest, e);
    }
  }, es_default(rest, ["prefixCls", "colSpan"])), {}, {
    children: [(title || extra || collapsibleButton) && (0, import_jsx_runtime34.jsxs)("div", {
      className: (0, import_classnames10.default)("".concat(prefixCls, "-header"), hashId, _defineProperty(_defineProperty({}, "".concat(prefixCls, "-header-border"), headerBordered || type === "inner"), "".concat(prefixCls, "-header-collapsible"), collapsibleButton)),
      style: headStyle,
      onClick: function onClick() {
        if (collapsibleButton) setCollapsed(!collapsed);
      },
      children: [(0, import_jsx_runtime34.jsxs)("div", {
        className: "".concat(prefixCls, "-title ").concat(hashId).trim(),
        children: [collapsibleButton, (0, import_jsx_runtime33.jsx)(LabelIconTip, {
          label: title,
          tooltip,
          subTitle
        })]
      }), extra && (0, import_jsx_runtime33.jsx)("div", {
        className: "".concat(prefixCls, "-extra ").concat(hashId).trim(),
        onClick: function onClick(e) {
          return e.stopPropagation();
        },
        children: extra
      })]
    }), tabs ? (0, import_jsx_runtime33.jsx)("div", {
      className: "".concat(prefixCls, "-tabs ").concat(hashId).trim(),
      children: (0, import_jsx_runtime33.jsx)(tabs_default, _objectSpread2(_objectSpread2({
        onChange: tabs.onChange
      }, es_default(tabs, ["cardProps"])), {}, {
        // @ts-ignore
        items: ModifyTabItemsContent,
        children: loading ? loadingDOM : children
      }))
    }) : (0, import_jsx_runtime33.jsx)("div", {
      className: bodyCls,
      style: cardBodyStyle,
      children: loading ? loadingDOM : childrenModified
    }), actions ? (0, import_jsx_runtime33.jsx)(Actions_default, {
      actions,
      prefixCls
    }) : null]
  })));
});
var Card_default = Card;

// node_modules/@ant-design/pro-card/es/components/Divider/index.js
var import_classnames11 = __toESM(require_classnames());
var import_react35 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Divider/style.js
var genDividerStyle = function genDividerStyle2(token2) {
  var componentCls = token2.componentCls;
  return _defineProperty({}, componentCls, {
    "&-divider": {
      flex: "none",
      width: token2.lineWidth,
      marginInline: token2.marginXS,
      marginBlock: token2.marginLG,
      backgroundColor: token2.colorSplit,
      "&-horizontal": {
        width: "initial",
        height: token2.lineWidth,
        marginInline: token2.marginLG,
        marginBlock: token2.marginXS
      }
    },
    "&&-size-small &-divider": {
      marginBlock: token2.marginLG,
      marginInline: token2.marginXS,
      "&-horizontal": {
        marginBlock: token2.marginXS,
        marginInline: token2.marginLG
      }
    }
  });
};
function useStyle12(prefixCls) {
  return useStyle("ProCardDivider", function(token2) {
    var proCardDividerToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genDividerStyle(proCardDividerToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/Divider/index.js
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var ProCardDivider = function ProCardDivider2(props) {
  var _useContext = (0, import_react35.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var proCardPrefixCls = getPrefixCls("pro-card");
  var prefixCls = "".concat(proCardPrefixCls, "-divider");
  var _useStyle = useStyle12(proCardPrefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var className = props.className, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style, type = props.type;
  var classString = (0, import_classnames11.default)(prefixCls, className, hashId, _defineProperty({}, "".concat(prefixCls, "-").concat(type), type));
  return wrapSSR((0, import_jsx_runtime35.jsx)("div", {
    className: classString,
    style
  }));
};
var Divider_default = ProCardDivider;

// node_modules/@ant-design/pro-card/es/components/Operation/index.js
var import_classnames12 = __toESM(require_classnames());
var import_react36 = __toESM(require_react());

// node_modules/@ant-design/pro-card/es/components/Operation/style.js
var genProStyle17 = function genProStyle18(token2) {
  return _defineProperty({}, token2.componentCls, {
    display: "flex",
    flexDirection: "column",
    justifyContent: "flex-end",
    marginBlock: token2.marginLG,
    marginInline: 0,
    color: token2.colorText,
    fontWeight: "500",
    fontSize: "20px",
    lineHeight: "38px"
  });
};
function useStyle13(prefixCls) {
  return useStyle("ProCardOperation", function(token2) {
    var proToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle17(proToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/Operation/index.js
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
var ProCardOperation = function ProCardOperation2(props) {
  var className = props.className, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style, children = props.children;
  var _useContext = (0, import_react36.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-card-operation");
  var _useStyle = useStyle13(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var classString = (0, import_classnames12.default)(prefixCls, className, hashId);
  return wrapSSR((0, import_jsx_runtime36.jsx)("div", {
    className: classString,
    style,
    children
  }));
};
var Operation_default = ProCardOperation;

// node_modules/@ant-design/pro-card/es/components/StatisticCard/style.js
var genProStyle19 = function genProStyle20(token2) {
  return _defineProperty({}, token2.componentCls, {
    "&-chart": {
      display: "flex",
      flexDirection: "column",
      marginBlockStart: 8,
      marginBlockEnd: 8,
      "&-left": {
        marginBlockStart: 0,
        marginInlineEnd: "16px"
      },
      "&-right": {
        marginBlockStart: 0,
        marginInlineStart: "16px"
      }
    },
    "&-content": {
      display: "flex",
      flexDirection: "column",
      "&-horizontal": _defineProperty({
        flexDirection: "row"
      }, "".concat(token2.componentCls, "-chart"), {
        alignItems: "center",
        alignSelf: "flex-start"
      })
    },
    "&-footer": {
      marginBlockStart: 8,
      paddingBlockStart: "16px",
      borderBlockStart: "rgba(0, 0, 0, 0.08) solid ".concat(token2.colorBorder)
    }
  });
};
function useStyle14(prefixCls) {
  return useStyle("StatisticCard", function(token2) {
    var proListToken = _objectSpread2(_objectSpread2({}, token2), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle19(proListToken)];
  });
}

// node_modules/@ant-design/pro-card/es/components/StatisticCard/index.js
var import_jsx_runtime37 = __toESM(require_jsx_runtime());
var import_jsx_runtime38 = __toESM(require_jsx_runtime());
var _excluded10 = ["children", "statistic", "className", "chart", "chartPlacement", "footer"];
var StatisticCard = function StatisticCard2(props) {
  var children = props.children, statistic = props.statistic, className = props.className, chart = props.chart, chartPlacement = props.chartPlacement, footer = props.footer, others = _objectWithoutProperties(props, _excluded10);
  var _useContext = (0, import_react37.useContext)(config_provider_default.ConfigContext), getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls("pro-statistic-card");
  var _useStyle = useStyle14(prefixCls), wrapSSR = _useStyle.wrapSSR, hashId = _useStyle.hashId;
  var classString = (0, import_classnames13.default)(prefixCls, className, hashId);
  var statisticDom = statistic && (0, import_jsx_runtime37.jsx)(Statistic_default, _objectSpread2({
    layout: "vertical"
  }, statistic));
  var chartCls = (0, import_classnames13.default)("".concat(prefixCls, "-chart"), hashId, _defineProperty(_defineProperty({}, "".concat(prefixCls, "-chart-left"), chartPlacement === "left" && chart && statistic), "".concat(prefixCls, "-chart-right"), chartPlacement === "right" && chart && statistic));
  var chartDom = chart && (0, import_jsx_runtime37.jsx)("div", {
    className: chartCls,
    children: chart
  });
  var contentCls = (0, import_classnames13.default)("".concat(prefixCls, "-content "), hashId, _defineProperty({}, "".concat(prefixCls, "-content-horizontal"), chartPlacement === "left" || chartPlacement === "right"));
  var contentDom = (chartDom || statisticDom) && (chartPlacement === "left" ? (0, import_jsx_runtime38.jsxs)("div", {
    className: contentCls,
    children: [chartDom, statisticDom]
  }) : (0, import_jsx_runtime38.jsxs)("div", {
    className: contentCls,
    children: [statisticDom, chartDom]
  }));
  var footerDom = footer && (0, import_jsx_runtime37.jsx)("div", {
    className: "".concat(prefixCls, "-footer ").concat(hashId).trim(),
    children: footer
  });
  return wrapSSR((0, import_jsx_runtime38.jsxs)(Card_default, _objectSpread2(_objectSpread2({
    className: classString
  }, others), {}, {
    children: [contentDom, children, footerDom]
  })));
};
var Group = function Group2(props) {
  return (0, import_jsx_runtime37.jsx)(StatisticCard, _objectSpread2({
    bodyStyle: {
      padding: 0
    }
  }, props));
};
StatisticCard.Statistic = Statistic_default;
StatisticCard.Divider = Divider_default;
StatisticCard.Operation = Operation_default;
StatisticCard.isProCard = true;
StatisticCard.Group = Group;
var StatisticCard_default = StatisticCard;

// node_modules/@ant-design/pro-card/es/ProCard.js
var import_jsx_runtime39 = __toESM(require_jsx_runtime());
var Group3 = function Group4(props) {
  return (0, import_jsx_runtime39.jsx)(Card_default, _objectSpread2({
    bodyStyle: {
      padding: 0
    }
  }, props));
};
var ProCard = Card_default;
ProCard.isProCard = true;
ProCard.Divider = Divider_default;
ProCard.TabPane = TabPane_default;
ProCard.Group = Group3;
var ProCard_default = ProCard;

// node_modules/@ant-design/pro-card/es/index.js
var es_default3 = ProCard_default;

export {
  createIntl,
  arEGIntl,
  zhCNIntl,
  enUSIntl,
  viVNIntl,
  itITIntl,
  jaJPIntl,
  esESIntl,
  caESIntl,
  ruRUIntl,
  msMYIntl,
  zhTWIntl,
  frFRIntl,
  ptBRIntl,
  thTHIntl,
  intlMap,
  setAlpha,
  proTheme,
  useToken3 as useToken,
  useStyle,
  ConfigConsumer,
  ProConfigProvider,
  useIntl,
  ProProvider,
  es_default2 as es_default,
  ErrorBoundary,
  FieldLabel,
  omitUndefined3 as omitUndefined,
  compareVersions,
  openVisibleCompatible,
  FilterDropdown,
  InlineErrorFormItem,
  LabelIconTip,
  ProFormContext,
  isNil,
  dateFormatterMap,
  conversionMomentValue,
  dateArrayFormatter,
  genCopyable,
  runFunction,
  getFieldPropsOrFormItemProps,
  menuOverlayCompatible,
  useRefFunction,
  useDebounceFn,
  useLatest,
  useDebounceValue,
  isDeepEqualReact,
  useDeepCompareEffect,
  useDeepCompareEffectDebounce,
  useDeepCompareMemo_default,
  isBrowser,
  useFetchData,
  usePrevious,
  useReactiveRef,
  isDropdownValueType,
  merge3 as merge,
  nanoid,
  omitBoolean,
  omitUndefinedAndEmptyArr,
  parseValueToDay,
  pickProFormItemProps,
  pickProProps,
  objectToMap,
  proFieldParsingText,
  stringify_default,
  transformKeySubmitValue,
  compatibleBorder,
  recordKeyToString,
  editableRowByKey,
  useEditableArray,
  CheckCard_default,
  Statistic_default,
  StatisticCard_default,
  ProCard_default,
  es_default3 as es_default2
};
//# sourceMappingURL=chunk-JD4C4XAF.js.map
